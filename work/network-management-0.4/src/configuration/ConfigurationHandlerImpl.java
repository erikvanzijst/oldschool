/*
 *
 * File:           ConfigurationHandlerImpl.java
 * Date:           03 October 2003  10:54
 *
 * @author  Laurence Crutcher
 * @version generated by NetBeans XML module
 */

package configuration;

import org.xml.sax.*;

public class ConfigurationHandlerImpl implements ConfigurationHandler {
    
    public static final boolean DEBUG = true;
    
    public void handle_Distance(final int data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_Distance: " + data);
    }
    
    public void handle_PortNumber(final int data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_PortNumber: " + data);
    }
    
    public void handle_http_user(final java.lang.String data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_http_user: " + data);
    }
    
    public void start_node(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_node: " + meta);
    }
    
    public void end_node() throws SAXException {
        if (DEBUG) System.err.println("end_node()");
    }
    
    public void start_administration(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_administration: " + meta);
    }
    
    public void end_administration() throws SAXException {
        if (DEBUG) System.err.println("end_administration()");
    }
    
    public void handle_http_port(final int data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_http_port: " + data);
    }
    
    public void handle_DestInterface(final int data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_DestInterface: " + data);
    }
    
    public void handle_DestHost(final int data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_DestHost: " + data);
    }
    
    public void start_interface(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_interface: " + meta);
    }
    
    public void end_interface() throws SAXException {
        if (DEBUG) System.err.println("end_interface()");
    }
    
    public void handle_http_password(final java.lang.String data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_http_password: " + data);
    }
    
    public void start_network(final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("start_network: " + meta);
    }
    
    public void end_network() throws SAXException {
        if (DEBUG) System.err.println("end_network()");
    }
    
    public void handle_SrcInterface(final int data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_SrcInterface: " + data);
    }
    
    public void handle_ID(final int data, final Attributes meta) throws SAXException {
        if (DEBUG) System.err.println("handle_ID: " + data);
    }
    
    public void handle_host(java.lang.String data, Attributes meta) throws SAXException {
    }
    
    public void handle_management_port(int data, Attributes meta) throws SAXException {
    }
    
    public void end_Address() throws SAXException {
    }
    
    public void handle_AddressElement(java.lang.String data, Attributes meta) throws SAXException {
    }
    
    public void start_Address(Attributes meta) throws SAXException {
    }
    
    public void end_DestInterface() throws SAXException {
    }
    
    public void end_SrcInterface() throws SAXException {
    }
    
    public void start_DestInterface(Attributes meta) throws SAXException {
    }
    
    public void start_SrcInterface(Attributes meta) throws SAXException {
    }
    
    public void handle_listener_port(int data, Attributes meta) throws SAXException {
    }
    
    public void handle_management_agent(java.lang.String data, Attributes meta) throws SAXException {
    }
    
    public void handle_management_domain(java.lang.String data, Attributes meta) throws SAXException {
    }
    
    public void end_management_key() throws SAXException {
    }
    
    public void start_management_key(Attributes meta) throws SAXException {
    }
    
    public void end_Connection() throws SAXException {
    }
    
    public void start_Connection(Attributes meta) throws SAXException {
    }
    
    public void handle_Metric(int data, Attributes meta) throws SAXException {
    }
    
    public void end_address() throws SAXException {
    }
    
    public void end_connection() throws SAXException {
    }
    
    public void end_destination() throws SAXException {
    }
    
    public void end_managementKey() throws SAXException {
    }
    
    public void end_router() throws SAXException {
    }
    
    public void end_source() throws SAXException {
    }
    
    public void handle_addressElement(java.lang.String data, Attributes meta) throws SAXException {
    }
    
    public void handle_distance(int data, Attributes meta) throws SAXException {
    }
    
    public void handle_httpPassword(java.lang.String data, Attributes meta) throws SAXException {
    }
    
    public void handle_httpPort(int data, Attributes meta) throws SAXException {
    }
    
    public void handle_httpUser(java.lang.String data, Attributes meta) throws SAXException {
    }
    
    public void handle_listenerPort(int data, Attributes meta) throws SAXException {
    }
    
    public void handle_managementAgent(java.lang.String data, Attributes meta) throws SAXException {
    }
    
    public void handle_managementDomain(java.lang.String data, Attributes meta) throws SAXException {
    }
    
    public void handle_managementPort(int data, Attributes meta) throws SAXException {
    }
    
    public void handle_metric(int data, Attributes meta) throws SAXException {
    }
    
    public void handle_routerId(int data, Attributes meta) throws SAXException {
    }
    
    public void start_address(Attributes meta) throws SAXException {
    }
    
    public void start_connection(Attributes meta) throws SAXException {
    }
    
    public void start_destination(Attributes meta) throws SAXException {
    }
    
    public void start_managementKey(Attributes meta) throws SAXException {
    }
    
    public void start_router(Attributes meta) throws SAXException {
    }
    
    public void start_source(Attributes meta) throws SAXException {
    }
    
    public void handle_distance(java.lang.String data, Attributes meta) throws SAXException {
    }
    
    public void handle_httpPort(java.lang.String data, Attributes meta) throws SAXException {
    }
    
    public void handle_listenerPort(java.lang.String data, Attributes meta) throws SAXException {
    }
    
    public void handle_managementPort(java.lang.String data, Attributes meta) throws SAXException {
    }
    
    public void handle_metric(java.lang.String data, Attributes meta) throws SAXException {
    }
    
    public void handle_routerId(java.lang.String data, Attributes meta) throws SAXException {
    }
    
}

