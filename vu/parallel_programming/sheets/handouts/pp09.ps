%!PS-Adobe-3.0
%%Title: (java.show.pdf)
%%Version: 1 2
%%Creator: (LaTeX with hyperref package extended by PPower4 V0.8.4)
%%CreationDate: (D:20021009140500)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 0 0 792 612
%%Pages: 2 0
%%DocumentProcessColors: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginProcSet: PStoPS 1 15
userdict begin
[/showpage/erasepage/copypage]{dup where{pop dup load
 type/operatortype eq{1 array cvx dup 0 3 index cvx put
 bind def}{pop}ifelse}{pop}ifelse}forall
[/letter/legal/executivepage/a4/a4small/b5/com10envelope
 /monarchenvelope/c5envelope/dlenvelope/lettersmall/note
 /folio/quarto/a5]{dup where{dup wcheck{exch{}put}
 {pop{}def}ifelse}{pop}ifelse}forall
/setpagedevice {pop}bind 1 index where{dup wcheck{3 1 roll put}
 {pop def}ifelse}{def}ifelse
/PStoPSmatrix matrix currentmatrix def
/PStoPSxform matrix def/PStoPSclip{clippath}def
/defaultmatrix{PStoPSmatrix exch PStoPSxform exch concatmatrix}bind def
/initmatrix{matrix defaultmatrix setmatrix}bind def
/initclip[{matrix currentmatrix PStoPSmatrix setmatrix
 [{currentpoint}stopped{$error/newerror false put{newpath}}
 {/newpath cvx 3 1 roll/moveto cvx 4 array astore cvx}ifelse]
 {[/newpath cvx{/moveto cvx}{/lineto cvx}
 {/curveto cvx}{/closepath cvx}pathforall]cvx exch pop}
 stopped{$error/errorname get/invalidaccess eq{cleartomark
 $error/newerror false put cvx exec}{stop}ifelse}if}bind aload pop
 /initclip dup load dup type dup/operatortype eq{pop exch pop}
 {dup/arraytype eq exch/packedarraytype eq or
  {dup xcheck{exch pop aload pop}{pop cvx}ifelse}
  {pop cvx}ifelse}ifelse
 {newpath PStoPSclip clip newpath exec setmatrix} bind aload pop]cvx def
/initgraphics{initmatrix newpath initclip 1 setlinewidth
 0 setlinecap 0 setlinejoin []0 setdash 0 setgray
 10 setmiterlimit}bind def
end
%%EndProcSet
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select ªLanguage Level 1º in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
userdict /pdf_svglb currentglobal put true setglobal
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource

userdict /pdf_svglb get setglobal
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 7
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 lt
{
c1x c1y r1 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 le
{
c2x c2y r2 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 5.0 15
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 6
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[userdict /pdf_svglb currentglobal put true setglobal
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end

userdict /pdf_svglb get setglobal
%%BeginResource: pdfasc.prc
%%Version: 4.0 2
%%Copyright: Copyright 1992-1997 Adobe Systems Incorporated. All Rights Reserved.
/AS {
9 dict begin
/shrink? xdd
/Pury xdd
/Purx xdd
/Plly xdd
/Pllx xdd
gsave newpath clippath pathbbox newpath grestore
/Dury xdd
/Durx xdd
/Dlly xdd
/Dllx xdd
Durx Dllx sub Dury Dlly sub
Pury Plly sub div exch Purx Pllx sub div
2 copy gt { exch } if pop
Durx Dllx add 2 div Dury Dlly add 2 div translate
shrink? { dup scale } { pop } ifelse
Purx Pllx add -2 div Pury Plly add -2 div translate
end
} [/shrink? /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
userdict /pdf_svglb currentglobal put true setglobal
%%BeginResource: font PPIWTM+CMSS10
ct_CffDict begin
%!FontType1
16 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/version (1.0) def
/FullName (CMSS10) def
/FamilyName (Computer Modern) def
/Weight (Medium) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /PPIWTM+CMSS10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -61 -250 999 759 } def
/XUID [6 5000803 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC9EBBC6A5E
2825687306A156DACC32FBF734087CDFC35B78DDA68032BCA38CA8E8A340AAA3
002A0E52D0B9162BC68AACFC0F14A1C933363A56EE460EB41CE8C2E9EDC509AB
9E0462B9F619AD944F133AF072E5FD1625902963260181189070C40FB0D49A96
50D86FB0AA90098027455AC2354A299FC7BFC34B4F1162E5E9A3EFD80D6240B6
9378BB4F6F9C33B910EC9F1BD993FE495082DE99B17DC2004DCFC96A80094813
38EFCEB41F999CFB14F3394E7885A595D2DEAD8C498E7556172FC5CC72DAAD4D
FF9148E63FCEAFA9821EFD36B7E57D34DF0198A3E50351EFEB35877FA44F29F0
5CB4E833ACB19B46CD40A68C39BE0DF31CFC561FCA2FD0295A2CF5BB3557311C
E0535BA48BB2CB1D7D006A555FB22A1D8801526FBDD862F1E112C592C162C37E
9B534CDBC1D007CA3012EE55FC95DABF0DC215CAA4BDA10EF837B823C948480C
756725DA73F37BBEF2286E1DD0F3BBCF6A56CFA2A3885A51361740D358219B6C
16BD3C2A57D514F416252BBB4E325714DCE742FF7FD9B51414A8F91A2321D5F4
6D83268E2963A5FB241587924425C6584B72D4F19FD3BB052DBE04591BA3D76B
4AE191CEC99F4A7E2DB65E7187165ADA477C844A00EBCD4310703C994197F65D
3C7DCA0E2957766A77EC17E4547EA714CD48C6D3C4CB0E6A957EEB2D3ACF59DF
B0F57ACC7E39EBAF309B5FA0FCDC528D15AEE703416A42286BBAFF7AB3E88E40
D99D53858BB93949D6D88ADFC7CA4437E67DD8A08D4211BC194ABAC49C6F9DDF
A86BD2728987C4305B022AEEDE2C07A7DDA043C39797DCFE8093745939496A2C
CD93AC8FC3AC9F45DFA1B09A693BE6565DC671147CB2BE428FE5155274DED39B
99996600B9DBCA605CAC37334A9CDED06429EEB03ECD1E89EA3800CE8D42E873
34A8D13F779C7941C139A6D0B5804E50F7CCBA2A6C65CA32E15A02783017755E
42ECE5A533E9ED5F4D07461AFB810841A31D4D8057B10DA0829FC402B806BC91
4E7BDF23B6E332DBC45255CB4A31E2E237C056B3858D8B348DCD6F91FE74ABD6
C6D0B42F37CBA4D03711B7A1F5DE4640D5BE67F081E09D0BAC2473EDF382F484
E40AE1FAF3063618907CA2DBCCDEF47F97094D11EE70DF611CE70C5AA4687575
6E8130B5894296A30C19FDCB37DEF27B6D8FCC4CAA421C4AF23A5ADD926E11A6
6E4A1F51D7E85FE0F8167E62C3662B61C59F2CA836E8C08FA189D77607758342
23415E09778F73820F99C32EE55A9CD41EF32225E0F35763BD5E7ABCC77B7AD2
1CDFFA0A7B0CE0F30046DC070FDD3DDF46A5EE81B9B5B71BDD0D9152D2F16AAE
4D4835DC63E1BC810F0F3B79C42B47870E23D8E2B1BD14E397738F1FE2550CE8
C8BDD3DA4DC00776053F83BC69D65498E843FE1815F496344AF21D3BAD3FAE35
ABF9A6AB6364A3D45551D16425725A0361FD02483ACD1D580ABDCFF57D6D2C26
7E08D5B6F851BC065FC53851CB6C9310E4943B6AC13D66FE01E0BEDEA56FE48B
D60D06AAEDFADCCD1BF97BA80B5F0BAFCD7C19EE92C6AEB4EAD77FF7D25BD8C3
E5A08F31B5409A5B4B8271104CB3BA1B1069D3AF652BFB34A0FE3225B7B768DD
0A218394909B11063DAB16C31170A047661CBD6F80BBA017579FE0C7C7D4B588
517CC1CA824426691A43AAE563DFAAE124A9DF064BF316D68FCDB91B6D1448D2
BB10B83CFD5321ECD616DF6D31A71092D05EEE8BC60F87645CBCA78BF96C086E
41785CDCDF9532679577B4A85DB1A7D9E2D312FA41F0F3C09079D25829BAC3E1
F1C0A48E35E1124F97399B76CE7A4CE1361E54C0BB4C2BEAE0C989F393736A55
CD016C09EEFAB54563D8C849280825EA72AD294B2589D9748B9EE9806133F421
9CB1E5BDD14C210B400669BDA2380D55CECF1DB47DD10CB9B320499924AC7CDA
3C16FCC0A6EE86645C0D255421A1FED7CC9F2C6585F5BE8F283C4A25A6E9BEBC
F04045732B30AD8B157FE5233BAB258924C4133233D2298EABBD6EB8DC631C9F
A83DCE13245A174EF46FA17E47E3AE4C10BF61FE2652F60F580E97E30B2C79E0
2F3941BEDB711898F3BB0A062744523933285623BB6B5331F56AFAD9CFFFBDC1
3995B204E14FB37E2D828894BFF0DA1403B57FFC0079CC0C28D927B07FC2ADC8
55A04441849CB10B2722B2189B63DE1B72FFD8FC1E2C71D2A686D7D2A5428FFA
606F0AE26B3E66D50CCB96953DA4A2F7C6EF7602C4D18715419B61AC511F2EF1
17DBA305BE12958EFFCEB6434ECF9DDCD1BA0972672B632D3CE19E81BDD9320A
5A9CD7EFF31EAB180DB2F697F1E22FCC22B5D680E7D42E0A973CB0768CC507BB
6D30E6EDDB86445A3FDFBDB3E9DFEFBC6A19A2AFB62FDC2F95C875836FF75EC4
5327EF7DB36DF57C06C0D2D28EAC6EFC4C13F90045F44236951B9067CCDBE6B6
187A7886B4EAC5D455DFE1B3C4FA0843EB87A441EE2D834243645607BD2483C7
5A42890021846696A4896C4ED8C420D6B2D0B54315F79EC5E94D1DAB978E0EFC
D720682DA1F17ED7001A3A82C912471F70136C293F8155D1842567EDC708694A
E42B921079632DF919C9F5CDAEA52DE8A01926BCF3B05D0F2B6E84F196BF2B17
12854B86E92C9EA6FFF10951FB39EB8C4443F4EAC8511EBB8FE1C40EA035CBF3
7344B6025CCEE27C275C57ECACAB9CDD699F7C68A70899B3C51CE1D7B26EED51
54167E310BC1CFDA01F0DA1AE6AA6845185DA17E297E2E031043D1BFDB8AC001
BFC9E9B473182653A8CC37D28545E6DBC969CFBE2AF9FBF960E4B10A165F047C
A1CE86294EEE60EA15B78CE25C0DBBCB0988D6A73E58EA0FB9D0D6E0AC41D38C
70335044C01AD7311C539E3B371AB085DDD027F4B83192A67BB7F6EC6F2D27F5
24E83ECDE1E1D99C7AC41234E3D8DB2025CB638D1BD8A96DE3CA04EDFD76EFC7
04A6AF4F97454FFA5E356DFE50EE05E0DCB5C5EDF84346CF9D1C684DF892A13C
D2AD2345E36D6340DB1AF4656786E5D92D46D45F241C565DAD9E5B9C2CF36937
F5E51F70995B5BCDACFB64F3261A3129E9FC67CBC82047FD3078474EA4C34F70
2D8FB712FFB0C41F9A61CF8F759DA7B862E74629D829896FE53DADBE07EF5B60
8D1E780D4230DAB83D6C9704F90DD4E56F08A50F1AB125703E02AD6EB2BFE461
8C86F18226633B4BCEDC3E5232D9A90BDE2DB8455CD11740D8469305FFBD6A93
2691B235E94094BECDCF23F15A20BCF4B223A09418F0AF656CB8367AFB33DC5C
68E636C7BD15A2C1D10B119AA1F90ECBB4D4C657D895A112F0007A3A93BF562E
B888559F8AC5D34351A3AF8EBF4292240BCDC0654058DDF30658025493241594
3F94605BFB67050A48136C53D46EB3980B7DCD68E7C7B41A9224E94C93FC77EB
9FB96B38581A994C392D37EAA300D28019D7CFF9054F05F9E6EE9EF6284F0BBB
9136427B2D31418F9A0459C36F4CBCBCD92392F7691E8B43FF7DA8D06F34A723
CBF071A2FFF2100E7A944A3DDA2112AE66AAECEB88207164EE5A771032E94F6A
7E531DF9E4F66BA77F99C166F4F746BC20B1B8F5FF56157E62578337EFA58673
3064E9256FEF954F7B963789DCF257642E9282742FBB313AC8F07BD7B0B137B2
43454C0A85D63D0CE9A4B81551A954809E9936DEB338ADBA91345C19DD1420A7
0463B1FC5E11DC84AE5B191874AD202D90BF940C4C99F381D2065C082CBD4CD7
82D769F34E625D78A766C0A17DB95A81E77BB1A6B8B1F1F9AEBD029B5424B399
C048E9E4F6F530E993270ECD8182B1DCC99B9D711B2081B89071DAFF477F515C
A09E6A04F6F8D521C8003A19954009A98C9B4BDF96B52539731612B9AB53604B
E80A3C839CB78CC129281A1A4F9F7000E857826DB1B10FFED3EFC1448127C832
484BCCB3B80205D7B62B8A18E89ADA21F2840618F980B187D8686C453CF45F54
BBAE35884471F5D1097A01FF1BDE296A2F2404DE5320FE9EDD06B30369831B23
A16F01C6493E4704D6B3AB75F460566C7A7C13B0123C531EBEC2D962BDB8C147
7802908ABC7E3E31F06C07D37DDB7C08A1CE870BC8A35E8E5BD6AF15BE6289A8
2694BEF79CB61CECDFBB9F9F0FE3B04D5495652D3315FA0309B8F7C678231CC8
DAFC036B7B62CAFBCE7B9F30321271940C175A2C7268D5A615EB8B05F3025BA6
905EFD09B261F7E911CC02C44692DD2021C29D00C5361B0DC93F7509CDDC6052
477FE1F902795C66EFFE3AABE825830E2E17ED76557A6F1F6C5198A97940620C
CC1C68B1326413088075423814DC5921B8BFCDC205EA09CEA53025A31D5EA3F2
B293FC52FA8A1B8F7F4C3E74D385C2B86F231A8A81AC96938D1BCC6D2F5DF2FD
5B518C523F8A224D2DEFF776345D837DD04367D95AEC053717777139B4D3F209
15E0ABF451F32807336CEEA6B3D786EF11DE557ADD9D9BFEE95C2321D94E16E3
FDFD986035E853527E57C533B8D5211FA452ACCEAA058BCD078DD3B5CBC5A3F0
0A025D9C92D6E5631686D9A4AE790D655EDB9F40F892B633E061A341FB76E96C
E20423406B71CB5B92AD9B47E47021CBE60B3A1466A14BD95FFA8A039B4E37BC
2DCB6CB8CBBE5CF0559CA4D5A78D7FB772F0AA68FCF3683C34A3A29979F1B4A3
F4ED61666B43222E0020A2368171710B10221AFD5E7419A6DF624D7BA64F8693
6C0DCEC761A18F47CF71AA3AC00953A80C99BDB79AC61BB00CF146F25D72C1E6
7C5091904B554108235D90C965E2F9B34934176553A205745AE832120724D00F
32C543EB97ECC3B3ECADEBF680D3E7085C8C95D64CA3BD5155BAC7A4ECFE4548
33A71C9AFBB9252F57317FA90835EBACDC209275519F7AF798F0978EC07F090E
17DBC1FF4B1516B03985ED859D9AF4DA68A90AB37323A8C2AC800C0DCE50DB19
B23C03F9415076C1A23AB57649429BB7AE144D23D60AEBDA328BCE273AF7797D
BE4999099327EA2570CCFC643E68A5C92D2C1DB3A91A25C04588A0800F0ECB83
AB523FB134C43CB910A50A50C33BA921D55C2A6585305A419BF6E9A3934B85A0
377C5F78B485D89CE91ECF2EB7D46A8EEA75BB7C0177ADE2AE78F25C0B9A300D
23C524C063EDFB7515C7C28AA5FDC21E744AA435F2537A0D63C66549C6E42443
63D84919E27BD0320788CBF0F7F3F415D7F366642262E81472BCEA9583EFE6DA
E9F985DC22EAD7FF32F7C68B26D99C179ABD75AB71D8B418B84BFC6CC2F2D2AE
5826790B3699A8CD270F1E32D974F1881160A71AB91E7AA0255AD1F2A1154CCD
BC6A5DDF429EAF45F115CA864391FB3042B91185B6384F58A2E05594953035AD
EDE713A85BB40C9C80D60006CFC5D15D60B9920EA6A9502880766987F62964B9
AED4A6990859C4FB393692480F35618486A7CCC9943738CE838F43A9876B8552
828F769B0C07B3A680E7532CC11A082060C9CD7BA2C31AB1139D665D614DFFC4
365AA8D5BF81A5C4E88E697ADE2071AD8888895217E4E4893EAD524C5CA6358C
AB847F40934B939312222D14F8839694A10C52DAE9C9F9B968DBFDD6BB93B9BF
81F800740B19F9866DE464E0A7A0E41896828A951248EFE0C3B3D0092DDA71B7
17FD450027BAD233FC6D7619017B7694CFB9765BC1EA3759801C9519C2AC715F
079795F40C314362D99B1E99393A3D8DC5CF83A7E8C7F5E7104A83035CC40FF0
AEF48989F79E2E2FAE7E6CFF54E3BB6CC341619C5B8CC535EC65E5E36C9D9140
A2DB06F884815234C8DA686802BA47C7D98613D1AD5A1C4AA35F073ED27E3628
5DB4C05510019877CE678C6FCCBB5ADFA80B0164A43327437E7F57D72B529351
42653B933D044EAFDD8A598A95BF131C8BF0C7A681F76BADEC53C339FF5BEC3B
5A1063A9004DAEE19B43165F354169D2E1BF6161BCBDBC295EC71E92D6388ECD
409289722456975D5DAA13B671961428C3E9D36358F67ED75045B23715EF405B
E0498AE8CF4C4816047BCC163FDFE12CCC48F343CF6D33D96C17CD41A246FD66
5C31349F2B3CA0E9B06F9EBF10C7941F930062D72870CB81BF8B44AACF4BA79C
5C678EDD8D3112CDD9E7444A2F08DE98DF29923E8503130E8F84935849972447
EFDA56D7E09A4B5D647CC028833C7101620193DBBEC7EE29C8113FBB62732E47
1EB87E9CBEC2DCC4348D2E6E56BBAFD2792BEEA440BDE8D1B64F56FE036AF082
65F20971856C3DF71287401A62CD3CA95EA07D6FF3E89349C36FF759AB0C5D3C
2D732B1CD318C3FDCB36E53DE9FA847B1B428A048B2D2509C3C702F4E2B17975
3A080C195337309816851EB12B83831B8B594FD04847172A2DF712654D23058B
87CAD94913E617BED003D05A2CA803CFB40C4E336B763BD465C88F5D287BAE42
CB989FC2E59CCE0C6B0BFD66C9CEBA6B83DE8DF7D64CB46C7B0173221D6A91D5
C85267EC6798AF7A0C748E9D0FB2DA0BFFA84A73CCB1A42C8B85697AFA2E1558
87C7D8F473340B8001BFE637EAFF77C86778C2E9F8E50F7E70D56C6F44EA2435
806AEE334E819428E957257D10A837F58DC305E543D25C5E07844AE693BCE260
2BA14267BFCA75A13C2FD8E2FC8077CC8611C243569B3A491079BCC7CE05C53B
8E4C0CD65D09B042A15A31F71ED6797C8E9B10973B6AEC5F69CD5327BB7D3DE6
C3391BFF7F779108F9520A5D460CB6CAE81126BF1EC5EE08376B3A379B3A7D8D
931A529834DFBED563817DCC36C8548B0705CB0908E331349F184CD89D2B6FF3
7CCDBF1A5C974C5FEA00C803A4318F7ACA7BBAF465A2FA48A81C388C91BAA0F5
18900608C76483A8AD7B1C54F615A75746E64F6FB2AAD72B618177572BF5AD3B
1D1743030C20CE3A82A2D28E52C1A858E356FED3266548A4BDA951F9ABAC49D5
AF037846D42206CC8776D48A70412388479B32FCC96D7CF5C051D0B0DB992066
BE9048C4A58ADE1B0F5A8F3367EBA9E9737BF10F545DA848F24A51CE105B6FB4
BD357CBD0C1658EDA284C86DC87A7F783B561B4406DE087CD1C7DC18976DF3CF
25A1ABCCDF56FDFE7B203A4F8B7A1F14F0F221A0AD0B4AFF94398C4A3AC9D65E
5F9C5B6EDCD9C74C6C1C7B863F466A9C8DC2240B0EEC2445530F8278185A5097
D86DAAD4A19DE5879206F02368048CE153658171EE482564E88D49C295E95161
4935BB94DC33CD547D6124DD70C2C197EB2D04526091C1B4CEE1066D22B738E1
9ABD01D67A3BC274450823292A272ADC2EEA779DF731E742B9B48D41E651D621
0DED35F2488939170E80175901A117D5B4CF71E8D4C993865A2C1C9E12A59BFC
194C14C9DCF570667B8E9F548C8501B1B53F3E9AA226BA75C562F7DC37EAC1AF
9EACC64D9609C21539AD70F309B8B8B7DC2E4AB0592357C6A83F0604225BD27C
E5B17A5CC2471610A9555024E6B74A031DCC8D4D0BE588037F94BD3BF6807184
FA1B6502F113004114DA07D940EC3A888DC6B36FF8F3462EE1642EAD1B149BA3
EA8223D612B14C668C8614D281E14CFD3880A27880AE241BDFAFC54DD3162C88
0365C233360C722051D9D4B7107FD6E257CB05D257066E7F9B25F2010C1F551C
D8A0A94BA3393FDD2BCC6D1EC99AEEAD9DB550749B2BDC5240EC0DAEF5BB120D
5BE284F312604F69465DBF91B04CC25D60C6E0E722DA72A8E582ACA77AD59DB6
1982CDE3729CE626AF758DC1E051FFA245E3CE16EB0C739792183F9DBD53994C
09F4C0546246702CECE6DD1441DC5E40A4A6982A8F04366933DF3A524FF852FC
6BDCCD5F95824AEFF6B2287CEFF416CBB11D3B7417B87B80187361FC8425F58E
96D14D55B7D19429FB6339B1E71D4D47417852E8088483D7ED0F27E363BBBA55
EDC4489557BDB7E197645C3C2A077D3B1F339D58C5B8CEBAF5C1FB0ACF9C2FD0
82C3098A68728E3305FCC48E40021F0D1FCAA929406250237462C5EA3627593A
7360268F97FDBBD741E46540FC0A52A0BB7598564F94B73799A61176885D5B00
6A5F8055513459AB8FEECA9DAF6A855DC83BD2170BD229098BB0A155FA178084
7EDBD296167BC6E51954CA8EAF8B14DBE448240BE0F7D4B71BC73346AEEA4DD5
500091BE2621CCA8720CFE977F88CA4C36AB22CF6B2B96791421C79307478226
7EA4ECA10DC38C5B3A2D6FE1EEE528474E0B2C8904E65CF98441052120745678
32DEFF9126A94BB45EEE30DD8E6EF4829C663A09FE9985EB663074E4606A77E6
7B66A21E91EFB79B7D44367E1F24B893EC7082812C19FC6F7C497887E07D5CAD
ECB343E3A40F2F3D275A99B6AAA77505BBCF4185D290857DD76E3205AC77917A
FDEEB9A6743865E73004D8DB40049AEA9AFFD5A4DB1B8AD7C3BDAF83FA9FAE5E
8085AB7CC65B1FD93E8F7298C8436E2B3FC419E36C3A5BB929475089C27C5A17
C38C09994D187AB4909D151742E510D3DBF36C8D0579457CECCADCD00883B580
70A4FD65F877CD074DC6B1CBD400B67D0A76DCB1E9C7F9E23056FFA73B2618B0
E33F60CD6E0E70906E8C23B6A5774D4E5E1B580DBCAB6686A0A7EF2E3002D80A
AC1E240ED36966585241308AAD262992B17D6B1A5E3B25EC2813653392324F30
E2C0D6D52A73D33DF1EA22F657D2826E4FE76BCEE5B52EE0FC9DD24923C6DE9B
231357B1C1541696D10B345C180ECEF2D7AA8D71D4C29151DEAA7B8AB01D3ADA
C08551D3A836AA5C285C6AFAA2165E7857C55A2BF8D3238186196622A30B4C55
28497AC4A290E38D8B84730E35F2B022AC29018F93F0144EF20E92ED47158E14
637099506EA22DDFE73A292DA596DA2EF459771D6F4D750BD4E0AB8FAD8139BC
3ED89C5614D738645C0847A684A7183B1E3DAF7ECAABA144435AB84D9932E7A9
0113DA12DEE9324F7972A3A3EBA76B15FD3A5C8040EB90255B96DAD742402F3B
B1E2A874650B6D71BF1806D8F4A8F298B1BC9BAC2ADD92BFDF67F7AA95BA3BE5
B9C6E0A2EA704C8E16DC5156D87C2F532DFCC95F9F79B61CDB8EE8D732D6FEF9
2AE8A5D19A33A1BA91D2CD1851776B36CB3A7529C3854BF73856611BED698199
453F1F5872D17C58D817D6FF0ABB73DB66C81A84A32DD908379EAD7C782CC231
3C388C67EC0B9C53F4F610F757E1E72F8BBAC5DCB1753F119EF1E93A91824450
7EF211B6D1607654164F4EBADC4CA418044BB4E4ADCD5FC9B956115693032A1C
3136F9874CA707AE10B016FBBA688D2B9E66957368E9EBEE81A0B5943C0BCDF2
73676C5B10BFE5D590D7A5C2BE8629F8C26005FF74AC0737E2F5C063DB696064
A73FD9DAC322BC439EBB77C1B6CF41760C74C09A9E28B6F30BD3AC63099B0CE4
B9393317BE29DE36C07388A9EEBF26870E2C2F640A083FB842BDAE4DD00D5290
84F9086EA50A718EE857FACAB19B9C9138CF32F61CAC49CD1ECA00300D101BBD
6BA0E55F1FF6D8006BB3C696D69203E871FE76A9EBA04A705CFBA6D8FC61E5F1
CAB2009CBF377E72A3A8A31E29618660AEDDB5A3C3AC1ABDBAD31CCCE4795088
6636500567444CFA551BE2742C9EB4514AD9339BA1D3398747EEF125CC674913
7587E77B7EE90769FE6478EC1A0C6DF3B97E4F6E5B6B5D1B6E3EA8B9B47E258F
F63F3E1FC66A4DD882F14D217DD8B03FD3DAFCA95AB07DFE91A94413F1A33658
08245DC17D3D5B2C31968BA27AE102428ECA277ED13C2DEE3349DA6B834DE4B5
AC7937F645A33653A5050EEE86641E16EC6F44155389942C6216EFB50F5B0335
C572A7E63255B155651AC8C6B516ECFF3BDAD8E65BE54F1195BB73D896D5D1A9
DF27693B92058E458B8744CA3B3A7D7E163BA7782098042AB5E1490C3FB956FF
E92E3E6C5A3CCA30BC18CE7FEF3DC0D05A329FBAE0D219A980C1077F425D4858
2A7B8AC02B3E0B696F44AF6DC9D01B67BC2D9A97394B04F55777034F6EB7363C
E8C549FA4781753D7777A908C5BBFD3A5FD40B50250FF486770CBF2A61384531
AC57D8B02B89C6CF89FC06DCDB023A0E532460FE05A792EB43759F5A41F6BE1A
F6910EE875FF85F88B65939ECD93ABE29E174B53EA4E2E1F4A165FB484188249
DD7A4281EDBD2837D4B8AAFE53EB6F96BD9B873E4CA5765DFCD9DD9AB311E4FA
68817A00C80F20DBDBEBB856339B2E49F725CF4507B682C29411D0FFCEC30B1E
2F74FD39157F9711B4BA42D06C50B7ECC1B2A94CFC23A9CAB762274217875153
7FB8803AC86BC16AEE1AC640308407139FB66718663FACB9DA7586781317BEEF
EE2EEDB60E981302D1D41A261B5923A91D30BB4EBF8F7BDFE9A09A39A77A6423
CB5BB667C9261DBCB082CF203DBE303FC461AAE620B219C25344D43093078172
2D701BD79B7CDE3C471A78CAD8C0D981FBC007CE564A53A154ACF3BB856766B2
297A10AA34252FC4913B9235D47F0B514428759F5D6C995B5F9CA652D2E76D46
37082E600CAB3AC6272B68856D0E619C1BC85C74AD2F7114FAEF77E2F64D8020
7AFC3359DD55C3BA5423B8D39D2DFE1BA552DD089980959DB1590ECC4D1167D9
17F442D5604628EECBBCF810B507C27434EA1D3A3B748D163B1917B99A031235
E59B32BF68BD9C55A3422F15FEF78D78FCAAB1924B437A548BA33B51F47B5EB0
31443B093E0F9FD9758C59FC1ABEDA7E65D02537D85D89857A1F9A48BA6393BE
9D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/PPIWTM+CMSS10 findfont /Encoding get
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 67 /C put
dup 73 /I put
dup 74 /J put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 88 /X put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 32 /.notdef put
pop
end
%%EndResource

userdict /pdf_svglb get setglobal
[/N12/PPIWTM+CMSS10 -1 TZG
userdict /pdf_svglb currentglobal put true setglobal
%%BeginResource: font DEHQBO+CMSSBX10
ct_CffDict begin
%!FontType1
16 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/version (1.0) def
/FullName (CMSSBX10) def
/FamilyName (Computer Modern) def
/Weight (Bold) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /DEHQBO+CMSSBX10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -71 -250 1099 780 } def
/XUID [6 5000806 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC9EBBC6A5E
2825687306A156DACC32FBF734087CDFC35B78DDA68032BCA38CA8E8A340AAA3
002A0E52D0B9162BC68AACFC0F14A1C933363A56EE460EB41CE8C2E9EDC509AB
9E0462B9F619AD944F133AF072E5FD1625902963260181189070C40FB0D49A96
50D86FB0AA90098027455AC2354A299FC7BFC34B4F1162E5E9A3EFD80D6240B6
9378BB4F6F9C33B910EC9F1BD993FE495082DE988F781BCD03C5C7911B98110A
514CEDD73AE798E5943E714D297787A9209C025AA01954696EE0AB349F8D2893
D04F78B33AFDA344264342300362A9C58BB0A9ED047E968214CC7E00D26A65A3
D5014D49BFF8A41133BD86E4FE4314E344F424FFBEB3EB212B7A2CDF89F131AD
4F31E5FF387C2C9F5A249EE843D8F507363BBF5D9A10A0E5AE50F9BA2E5390B1
943DE962520472AE46C970F79C4C1D915E6817082B1EE9309D9424186A33B5BB
6885ADCF5D850A5B58242E26D8798EB8B7D63EACA4C893BCA576131101179DBE
2D8023053A8AEC2DA49E4FAB38391FA009E0186D5A1F8EE7210635EEE5F17F56
AE0B3E4C7D1CE1E9F1C9572D0438302D1B2689D552D7410C29BFD7E2DA63C5F5
1266A7F5FF201777FCD80DCB8264758A2D8CB66977E2E46C2EBFFA22BD010CDC
1E61C073EA894E5994DF76F3A6AAB0FFD5E2CA3DDD325E94C0F11F5B68F752DA
CD517FCBBFCE36AFFAC97C7B32ACF516AC91E2538ADF7D9774CD26813B6F0665
AE36334BC984B718DEB343BB108949058001CF444028F9EB5036CA75BAADEB5E
98CA3E9E29B9DD04170D810ED0FD636FF5C6C600CB3F8DB4F8C510D81B4E9C03
4DFD17D97A495AF340F3C75ED68605BCC57F9770097331DBD590F267450E0222
5B9299A1865FB00D4A5511D17EE3F382FECDB21656530C2A720578C083377032
AFFC1BD5E2F4CBFA001DCF107F7439B4B88E2FACA4CA6A77459E745035596B50
0A87E631177C4512EC65B8F163364EF26461F5AB1236EF88B00D39680A78F6A0
13E9090B92C7F8D55C02EB42BB2E1A078C05A92B23B0CA587757243EF2BFE6D0
DA554906C76D07718D84805DE5B9D937C62B5B65496A37155A92ACA5B90FED0F
41423BB7ECDE31303F139CEB06ADDBC7224BB26BBCA3F27A06923C9C4B378BBB
2012047F601AAE5DF30634906487360DA83DAA7BF09925CFC5ABFD2672CC6BB7
7590F12ABD9D7CE361F9ADE6B0A718CB5340C08E7FC7EFAF1C6A9BF7857E7F55
74A2080A431D264CB16B376502111FF320EBF19E7147307706F5FC00161A60A5
01A5DF7C18194A84B27C2934406AE2F51D7A3E1239A4E90119A04EEEE55EE082
77EB126A9D29BA9802115EFAF4F5F0E6E57F28301A4B002AE8F44BA1B2E3CFB5
65F65B4869C6831C9E0C89FFC4AEF11B42A701AF8572C084E9FE7251B4EA706A
D080FB065EB01AF7C882C10837B20FACA227CCD9E0358A466372D40DD4CF2931
2614AF0D89299B3E176647C486555E208E0A6E371912E8CA6506B1984F79115A
580306F95B40F3D60A4F13FCF073DE697300C2EC468C242BDA28AE762FCD13B2
A2F92C2B2E8D4CE5B82376E9240CD4D3BA1BFF7FA07DC6281A39DFD614A71AE5
557B855DF4E8785F7F2A31964573BB9EEF8FB1A5CD24DE334F8AC9798642FCD6
459D8DD07FBC0B6CDA38C69766231A52C9240F07D279C4D9E257E9EC3D3AB41C
6B7D5FE3B317CF8293A9ECBECEA9EC7ED9B48758C57E4BB146CE1694F8D432B6
95F905846EBD2C9BC325A6D153066EC3EA3B269C743D2EC06290F1D711F086DE
1E3B1D3B80435019E9BA86F7D73F0AAE60E80DC179AEC761F3CA8417AC5F8610
8EFB613FEB0434B643DC114C65A3326F1CFA467BE0100D4320504B21BF062015
71DE5F6FFA5E858E6EB6945D302D5D7C0947BEDD8AE72B8E43D4678575F67404
160F708A6E8FDAE11DF207944A5721951D8E00937B8FDA99FD6D5B18210B2C97
C0A56A9C18A061CA269E883ED710000D3E39E2D1F20BE0549456FF277598A7A0
E8D14D1CB95D09A8EA6C4A686A2CF04EF37ED43448771A7F2191D83196FEDF6E
4B039D2E36A43BD0886A341BCBF4E1657151E0D94CBCA6E6CDEF04735DA61696
68CBC62B9EEA083730F15B0A60D727E24B48D0D3D03284D794A4FF90E25E8AA9
71FD4F634308AD934A79DDC3330A2D7495F2E12198DBBCCF78851E2865DB4171
26CC3AE5AC7EF2DE8FA968A4F5836651898E0E3037920427F5E5D7A2FC76799F
E51CFFCDFA155C0FD5FA6ECDBE4862EC546F76D2857A08D2148EAC13CD1A1FFF
0BC44362A093679C6806DB9F5AC247D486DBBC279C7D47DE2306B6F7F1D70529
9A61C7413D9A3E5428C91FE479B490407933F412572A5D525484FE99A8FF94F6
CDF57030B1DD4FB00E416F0A5715763D306717BD95EFD525F59F9F959D901E9A
5B9D60A041394B0B9FDBD6F2B0410CA53889CFF52C2B9815673242C96EB873F3
950985D792FCC704360C8762CAE5F3CE6EBCB8A40541218F9A5E2B738AEA0E2D
62272AC258A350F6F46A026C333AB274E9E363837FCD27A2C9BB3BD689CE4519
00C8501F3E5A3FF3B41B7364B64D1A2C88FCFA916E41FDE5CE327D06B4CD79A3
D6184819AA88FB5D1908E04139F67931B1BE5D28720E2532194DB2C3BDE7C6AB
E4FB52B130042378F7CA2791E596961C44F5D21931BBF522B019BDD2E50BD536
1016F0BAA9DF3EEA961EB83908FDB056ADA04E43C578622B59E1F23CCCD2841A
EAAC09941217173337F53321B9D1A3C9A975FBEE5A570C55AA09D7EBFC9F1358
202B41E7E26D83D5537AE3B8306716ACB7E269E53E2A6762BEF969B1BE2BBE2E
28152B0962D7E5A561EACF464D85EB79AFB8D726FFDB5B3735FBFFB50CE711A3
F1F85E1AAA44809F82C3BEB8F4DEE31D59A679F97DD8BBDAE86D126FAF7F4FFA
303EE6E4E6B3E0A6178EE6724C51C4782521610DB7602B8C21634AC8EF5E9A51
FA1511B40CCCB45A90569FA26DF10638BEF73760EE2BD6A234C910C6A547AB7F
DFAA8CF1DDAF2C1202874788E19E9A5271F55E48FABF42EF470A31F0778C1A5E
10A669B5EEDF10C231155DBB2D0E1024AD95305A3232373662EE1E5A7AC67C5E
6C37629A62BCAB32128BC74A90119E35B7ED32BEB10BE8169FBB82836C479A0F
10DF9C6628A595B433FC15CB9F4B60736416C1526303BB4803F27952CC725D97
171D321043D5B48FD42AD515EABF092B650A31F218CB75E17041F3E7F6DF59B7
BBD494621D8BC45E95B07891E388065CB337136522F977A4361D650313ADA33E
DC279E8EEE47C52E1EF897A79A42D4CCD034FBE8D971151883C202C9D2BB0C34
ADD10A8803E648190B1EE13538768AA3E8E2F38A35A79611CE5B3F474A242C86
B59E85165084AF4D34921C0BE48E8B3C7D8D1AE749440A0A8AE7C6E1B7AF8401
18283955C71067AE5778278E5C2E4D43419C4E7706876AF722759DC4BCB8CAB8
668B4113E8C3529356AAA7A7D7CB1CD23D7D5A221B6699F60A58D8651D58301B
961E29A330F998D5BB9648AD974AF8C88AB00A6E7D7FC12B80356310A0670BB0
21C40A6934224DEE7945491E88541A53C27D77ACFE70796FC8203F6439DE7318
DFBAF2FE25D410583D621DB356738F3248F694097245F980178324F868EA7AD7
5874C78BB4A8DDBD3ABA7372263262CB241557C22DF721B3BF91BD350D958AEA
4168EFF13B7CEC70865C68DE22A6439293555BE53B625FC6F6BA267C030C60C5
DCE49D5CF482BF0851FF022AB7C75E670B601006C39A2FCFA70580FA35C7F6A0
FD07D04A3B706AA732F3DEF851430A3B1D9A93116A1EC2EF8B36C53AA9583A5A
5B9A54EE346CDC462D1CBB913D35B3E57F9A08ADA36DD0D71BE1F5C8AC927262
3E3435AEF72DBB3E99F30A2F38332C2604BCC65A682EC2ADAD9972FDBAF42697
FB6F95118727487F2747D5FAB74FF17693BD5A1C9C4A3DDA9CF782D61796B438
2F5D41EEACDA4F006DE5326DA5B257C0AFCE7709AB09309519F02FA4E994CC55
3F5BA63A84FAB6ADFF5847E9254921D2EA5C4D9DBE3B513B865AD54379CBCEEF
CB98B80E784803F1C7DB8C1B8496567AAB56FCF86372F0571CFBCFD8045BD825
E662287986D2EEAE11FB6B735366851816D01D731047CBE71A6BE995E52460DD
81C007CCF81317A3281EF0ECBBDBE3EAF827EB2E2A9BAA2A1C2D531EC859725C
A7156E7532A56091AAEA65D7E9AACA264DACE2939349F73A8D8188DEDDCDAF30
3660AD062B2775FC18033EAF01DF53AED3D3613DB6042A0892E11A609E321E17
5780E775B61432054124E85B90E393418D80DBE361FC205168436794A9E50B61
C324FA54B19ECAF04C0003F2433ED27EA6AE3A6003ED381A9FC7D0ABDDE99723
310311BB7AC58EB63DC1A9E7DE00B6F5DB010C26EC887B65029655BF0A9665B8
9025E5090C9203A1CE5DAC54797AC74F974D5C5EF043FFC807668B785D10C5F8
1EAE80E33B875EECB1DFAA12294A5E1FA3EDCCA735D8E97D04E0189240010F53
F11658A0CBAF4B7ADD080F24A523781A6FD532261562EC4D4A257EBEEAE6386B
BFE38F9E59021FDBAD82DFB890753D568E9E7BE51638C6C26C82ECAEC95EDD7D
19E5DE2542F6E545FBC99418EA8D9501F39DC28F9601375C0A1060A434FF4ED8
DEF29DD20FA5E3693A60E63C9851E214B75DF4EB9E247A80E87075ABFDCE4051
42A6A483AA625FC13ECFF6EED2DC73EB7B13B454901F385184AB846EABA32677
FF29231F1AABAECE13DD68019BBADB3B15E0E3EC20F8C1AA9143E5DF4F3EE004
4A4C44D3682E8F7B0894888DCCE78AA2FFF1E816DD5C529B4DEF08404D143AB9
7CFB1594664552B8C314BE4B3321E29A72E806C9E119479624446EEDD95E8BA1
09DA4137E1E0E70770BB63CCEF0FDDB1E467942E20E7839A9B3B8690FAB26147
9580094CC220DCE0A5C2E90A8FC0FC170AEFC395C37B0D2F8E553DD90AB9B2FF
B0A15D350510B873B97E642F617137059A5B53912D207413EB794D39DB5C30AE
A8F2A546AD9DDA7C68567D149D3E5226470625B9DBF153A33E81BB5EDEF63FDD
5366BBAF10927922EE44F56DB2B382B156ECAB0F50BFD1A7C101DC7443530255
5FF249697F383B1A024A67C1021E78042AD0938535BF7C1E53D37BAFF7C4EB08
02982AD4CC3047460FDEC61F2555A72C9F0C42CAF035D0DDAEA6BACF0F24D5FF
1E630BD152ECB71021BED7DC1BCC712E1293962348ED09833598CE1BCF6CFDC1
AA114F3520A68D32CEE28AB584D25590ED7B3FDAECFF5E7AAA29805470904FD1
C415F38FF796F8EF9FF2E06874FA62BEE04DDC7A053B2D0FC86B25B85F73080D
94B186C6F79195072CADC57EBB49A98BEF67CB5B8B9130C128A858F639B5D7F8
382FDAE9272C916D23C39E7ECDA47FA7BA5B8A65FEED2364561B6EC53542C185
DA5F328ED3ED2F52F175C7BE35C6B1D9CEA0EEABF302E6840A3F44B255C9EBCE
4DEDC1F2DA80C4B0A925052C831E95247450E7DF3092C20E38A36D666266703D
741C0EC963692469E54EEC6BADECBAF039308D90DCB62016ED1C52590CF499BE
ED7BD9CB7AC188B4DBF15B7E02A63598EF6019A79EEC38891685B624936B9082
D21DE1159281AFDBCD03D6AB9E1E016727BEC7DA5E89A51D12C7B1AA385799E9
0AB99FA697C301FDDA6BDDD3054208EBF7C89CEF78225BCE1A5A320277963D2C
241E32EB2026FBB2A53CADDC0A0EBBE8B2B23D160CFAC6F09BA955C0F80B3628
A35D856C3DD3ED80F5A5FBFBB33985474D31B4402D6DD0D56EC9BE212812A1D1
2C4BB935C4AE60C4759D3170C303FF183A85D578DDE51381AF2EC6A4FDFBDC49
5FD26F5C3E77AC7E47F91D9E90E2085F5334B58A94AADEE064A57FA456407474
DF154DF949C3F313CBCEDF3C8541A218463040412F4DB21CBDDEE5C9DAF8EA71
EC84B1978B2F884FED0CF0137FFA1DE997EB4087A5609818707F411CF8639A35
6BAB6F1D995E1C1B00B97BAF846253CA90693AFD0C2D99EC202094B5E9369379
6E06A21927DE359AD4FE06BFB0BFCC0A84EE9B009DEB42907CBD52E59FD67337
45641C33971565CB4FAE70EAE75D4147DF42EC2CD7108E8095F8DD86AD3A929F
0D56249E2DD48AE10909D8A5716D4C09B2A27379BD1AC0A9B3810536F4158D94
CA593958CCFD1F885D08251FF39C97197593B4F2F14CFADE5D0B1E371DA440B3
DF0EF29BBFC665AF5446D3FAF1A643C45F0387A7A44F6F77857D82088105D7B5
C0F7ACFF7AB8831B0C83FE05D8BC318588AFBDB1A89280AE888543C37EEE802F
ECCAD51692CD19DE1F0E4C3001552FCE7F77BD80220C112FE6C760D307BFD51E
0E6C58BA28D11CEDA150892579AFACD67E57A5A2EEEDEE55FCBB12C42BC0EE65
BB7FD20C5CBD809911F98A6467AFC4B1D1051B80E46170B5546DA4670977913F
FB4EA1F14ECF4BA9420A5FFD38851BBFA8FADB26C0D2CF98AF795453E2C3F341
EF9A56D0984946AC20E892D7FF3882642588FD8C92671E4DFF83606668B12C49
38F8BF8AE53D8E63E7F3C56539C8224E0E6E266345B6BFD6569DDEC4EAC931A7
705ACE2C67E43C1C03D5F7690FC8799450D2FBD3F07217DAA12AC21140665AFB
8538B5DC6454C55D4FE1F12CCAF664030138C684DA394F3BEA41DF5219A8DEEC
06581DD5BB38D80A1ABC009CDA0E1134CFF436DED870497506D3F0638F095AEC
AD2CEA5E26B8AE78F6E26BA567BA5E307A6A80DE0949D3F76FE688E167C8F22E
2C57AB6289E3F3AF7AE5E2279B13A6E79CAB47347C966C6FD4020BDFF57314DE
A1B5714AE78FFD1FC9FD9EDB26DFCE7DC8462665D96F0705B0869001E4C6BD41
217557AC8FA1CC1AD4AF82EE5CC15330F9126E1F056084A3B511EB2B0385AA9E
4DD1B1A0A9F250EF60AB4A6064FC008CDD5DE65D897EF776140360A1FB16D3FE
AC26CBFD5E3271EEE4FD6FA2EA0A0063CEC94EA17351956264A0F0C4D712E4A1
2E075FB17373CCD97EB64938A9B1585DE81F07DDF0A7654B544176C5E0489B6C
FCE15ACB61E735A99011360C16B92A3C3D74C4BBC7A173FFB2F402B3924FA867
3F58F109D6F70608357B6C0C3D3F0362E37BC736DC3882EC71026D4442357DD7
17BCFC79F6316BD9307BC1B6F1D033C8C7F0A88D91F1075E2774642AF4E9E481
2719DEA9433C7F88C6B57782D35F2BCC8732B88CCE465A1D7F25E022760D5AB8
B2939B8DCE7B090187544D910ED7349D84705BB87E34655177F3997DBD17F3DB
86C216F3421697E7471E2B35125CF763F63D0339AEC62CAF3E31A578F4BB41E3
BE26AD367C601C04B03C2A9601919D1B76BD6391596F4ECC4C1A8DFE0C919CC1
6B18C2B26404A20A2DD4D99D365115797234D13D6FAC2B1A5925927A84EE90DD
6DCFC23C9BB399EA5F2CB42707403A822FE094A20F488C95AAF93A3B919AE028
1555537E8FB6D1E49419D5C0E5E591B25EA83C40B365AB4DEDFB16041347FA24
F1432F389330042C618C07CBBC6E98AB94F105FEEEDF4C9AA2D2D43E18B3126E
07D4D92AD6DC04D3DCF79284AD7112173CB4C7634F750E9871D9FFE21CE2162E
10990B9103283C4FE5C538FE1136A9E311FED683B1CBBDE4D7B6799313126E18
F2B9930DC61E46435F9A6405560FD54CE0193DACE4AE9FC8171EF38B5BF48045
C353B7FFFCC22A913B0710265A6917BC3468458E6845040B44FC138D90723F1B
A5782940EE611A45A6743D6DA66D451CA1C94187113BDC903C2345FBAF12894D
896D3AB7F60775B1971BA62B48539B70F7C0EFE8D24B786D87D2714FAC952565
23192FAE4DDFCD7D5C9136D6FEC38C50E7C0EB1867BA7611FBCE87FA4E871AB5
D0E7895285733BEC5B806F8EA7C96BF578C3E994DA4CE04F3E93CAAC5FDF7F41
401285EC4E0DE8D56EFA76676CBAC11F1FBEBD4B996AE682534108CA47CA83D8
435818170CA24CB1581ACA767DE4572EFB218E149B9BED85E81EF1A82EB7A4F9
DDC68EC6EC8A9E64A6C028377888BA2251023F6CDF1382D3E27A9C8DEF7969AD
F5B438C061108668979958CF8BD434235B1BAAD5836446A77BE8BB3223E93D75
27101CD93B262A11104F7BFE19658076C3B301387914779BC335107F421193CD
A5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/DEHQBO+CMSSBX10 findfont /Encoding get
dup 11 /ff put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 73 /I put
dup 74 /J put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 32 /.notdef put
pop
end
%%EndResource

userdict /pdf_svglb get setglobal
[/N13/DEHQBO+CMSSBX10 -1 TZG
userdict /pdf_svglb currentglobal put true setglobal
%%BeginResource: font NWTYRS+CMTT10
ct_CffDict begin
%!FontType1
16 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/version (1.00B) def
/FullName (CMTT10) def
/FamilyName (Computer Modern) def
/Weight (Medium) def
/ItalicAngle 0 def
/isFixedPitch true  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /NWTYRS+CMTT10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -4 -235 731 800 } def
/XUID [6 5000832 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC9EBBC6A5E
2825687306A156DACC32FBF734087CDFC35B78DDA68032BCA38CA8E8A340AAA3
002A0E52D0B9162BC68AACFC0F14A1C933363A56EE460EB41CE8C2E9EDC509AB
9E0462B9F619AD944F133AF072E5FD1625902963260181189070C40FB0D49A96
50D86FB0AA90098027455AC2354A299FC7BFC34B4F1162E5E9A3EFD80D6240B6
9378BB4F6F9F5D673C647FDACF190F06118F289D2CA3C383F4695BF8B1281FF0
A685A5A98B8A6B83D6A275897818FC87CFE403C2F363B01464E2671ECB011A62
54B55729E6739775DD76E427D10F13DA43569D7CF323F9E66A45BA661AB0CC07
35E9906BEA549ECBC2E0B1043900E3E21AA5856183907B5BAD9B313C86B80169
1E80681EC1BEF69FA5B0F67E675F17512CEE81C43D2ED2C134C987EC0C8BF9FD
CE3A3FCA339829D45F471225B5DFA7CB8EFF7E1BE6E19E8045483480F2CCAFDB
686D979F04F612209B443C7D5323CE42168F0B6760038662D59C87E9EE07FA9E
31B8B79ED16F0AEEBFBED1C02A6C9390DD95B1CF3283860C1705DC4BE70AC493
62FA45EA0BB4571C40D93C1D42E9CB6708096C1DC386195910301A6032580B5B
653B28143C4BF9DC8083E9B540932B81BC3DE8EF08F6DDABFA8535B09A51C755
AEB085CD136A88E9453607B1A4966A7F9941FEDB18665F655B234169934ADE77
684D4D9DE8F97BBFA39BFF20924AA28F18193AC91967D0EA25B52CAE7152B373
5979315B45E1E9E1B82254BE2108206D7ADFD5CA7473C33E88435A422A1E72C1
2FFE23AA67231A04BC2D7FD4A20F8C01E5826CB99A5872CAC37575961CF6D773
412F31BE4AE18005CE51712FC58F692B55941BBA14AA700FA466E41F25B384C8
B69F759EEEEBD030ED585F912B79F7D1C09158E04D1EDE18F06F01523E7B90EE
4B4A4BFDAA2FBE65BC779C3883ED77EFED55413BB1A3E457D1E46D6717DF44AD
1ACCFF765A0251201C45CF2213A08A60DF73A167B0A441ABD6AFDB9B35195600
048B62F68D48F58A2B543DCEE24BE9F570B803F2156A8129CD6893B419AC7727
4FB891BF69F9394F75AAE5820AC7908505301EA6903B5E9335603288E7FB503D
9BD277670982A8C5FFEBC92F5640E188384AC5354D8A96B28CDEC08BAED8F7CD
2CD5787ACACF017CAC59113402DEDAE8FDA1E4871BAF2B11A56DC7695A2ABE0A
456E19DACC83FB91E7E43E0EF044CC6D38B8C379B36248C084A5888BA9079910
71C329743A3FB8F51912ACE0393405F6295C3193C6FFDB6BED51F6C76DF17490
C79963BB8F4FA903E75246AB81B7DB725CEE46B9FE5123D484AF6879FA711499
D2E0AFA60CFBAAAC78BC7F77EB8592655122CF51F4B4138417292E78A10BA4F0
2316247C430A904426B8777C7DF3A9FE1453F205E864B152BEE7537125FB4BBB
91E8FA9CCE5A8A591FF7907F6E1BD3CA3FFEF9DE1DDE02C60797B72D26EE078D
A4A8C679924F1959629444D6BF4AF9CCA1A7CF831B87C879026EE07FC0EA6B4C
EC5C42169A961143257141CD3BC01C9B9E0D278D91EDD42C98C9479778CCF79B
DD33FD0A111A806B86D0C2CD2829B5598C1D5EE56FB822E58C488CCF45ECDD41
A9A4016A6D9A0DEFE6A302D4431CFE180DCD7ED21DA4A1D5B28C91A2DEB83A24
CB97D729F6AE1307BE4E303C3CF6BDF913095C0D743F292F488102D81BDE4402
601EAB00957F69E1356DDFFA331C732A3CE454FACB7A259BF57ED0A401A64215
8336A5F01789884488518CD16D176D8F56E775BEFF800372FBEC04FE569FC959
0F0359191BF80C573B2569C45549F6D384438EE036C66939F04E363E4929A154
F4A345B65FB9F2CBA55132BF648610F5B39DB85881CDEA09585650133DDCFD96
1FE945410246AB6676809423A23C301464021081BC8DE0B11107564F3BDF69A5
A19117C9654E86FFFA573217E0F3F732A5CC0C1B0C3410D783785FE2894B6C6E
2442AE6853A37D645E90A43863B9A3488DD4CB99937A90E61BCF567F48E1B6E0
DB52776CD66CE6DE8B112527AB5F5994BF4B17D503AFF085E71807B446A5D910
54D4B62C8B4EFDEA4F1CE6BFFCEA68BCC592228414FBD5EBCCC48FCD85A6258A
0B2CD4A7505745A849E3E4476446EF14CFF574822180011E8BE4C1F110AAE0DA
145B7FBB0100EDBE9C5A5FB615E3C9A1E9F0DF7FF63314DBDF0F974D45870940
5CFC06C6F831B7D82F591DD54A9F9801346EE869A42E686BF6ACEF66918F2554
7CA6CB096197B7FFF9A71092646A47A225B4AB082A94D27C14724E83CD91CAFF
AC51F099D2623EDBA7FA9C0AC70DCB137427D7BDB01047460E5791B45E29B61C
204BEB8DEE664D6B530D094FD1946E189AB798F396EE84C6E3E24A42112DB166
B86701B11B7FE445203B25AF93D9234717DDBA260874FB321A05620C6B043897
1071A19A8DD2811DFA6FD25F16E25D815B33E16A8004B78432E2329CB4B75BEE
535CE38F6C1F48A71A2C519037603E628242D80E02F38E1B88825DB60A9A75D9
344F177366F7131EFAF0B362CC7F7449887498E9157BD17DDBF765D727B9C14F
4808AB0E83D94FCFF9762E5DB2377851D58FA2D5CD7DE2F73260E1864F036781
2F45E806E7C8F97FC1CE14F62C1462FDC1759AD91241487D0E5CC389D5D4B26C
D07A20545AB9C16C2B5DDD9E727F308C496F143FFBCDFED1AD05938A2BE1AF2F
DFD46C0F16386E20FBAE8F839B964622014E7115D6D06F8A277D3913FACF948A
EBFA6485F4A079AB3B7352E92DEE5F0F8E0966FE978F9A3F8816567EBD5ED721
02567D65C133672044C860E18E4F284D1A3C17DA9FFAA48A243DF4E4597D0535
BCBC6610BE47380B64051895D7EB538E2A1932D1B880BA25ED9C94CA0D5EE71C
32B98567C873E049445288F4DE7A900864E72764A1F168B19EE65CAECAB33674
EDEBD17F89244B50C56FAAF4AC83D30D00118B379A7136B454BD2F56E0B7ABDF
13D4E71980ED6EE24ADA54F50A16F35B03DA7E6B2289868386349EA4BB528977
6EF4FF6DD737FDC7386BE025B6553E1A8A729601A1143230BE1E4768EE5FEBD1
8610B400CCEE4E554599D4355C2B316C29AD6E98330A66AFDA479C131AC8947F
FD37017CE28BBA1A80723D9658B98FC2E322F37355F6AEC52E77EF2AE9C86E81
DE45C8FD5DDA5DC2301213D35B70E49C9BDB678576808930B750CD0D0523DA22
5158F5A69CB5ABDE540FA782A5401A46B19108BFE3E812C49844E359749F321E
CBBB75A35BE46E27052D8C20535A097577DED4EC21749A44D85C751BA1AFCD68
F4FB72B82FE3E37324CEA3A199101994E24DA49633765F668631317F10A87CE9
DAAE46F22C132DFA20F42A806FCC29D4E78BBDA5FA493AFE4721C546877A8186
990BADB98497E8BF0DBFD4B451F521E6CF86CB9D35CC7912511A49758061469F
ED655E22C637A105AD614A95297216D54E5E31A446B1D6DD4031CA421E36F37C
44AB89E12D2308E690E4E723E0FB908029704127F40158A91498602F3C4C7DA2
C36A62028BB7E7214F8C98D09BC737EFD1046CBB43EFDF2D6559C38E2006A9F2
B9BF425D8736FB1AC98CBA2A63BD8BECD69AA68AFF5A113B2E76549723C8E515
35EA79FFEFDFFFB2E925BE42D6253708170129315B6D5AA1C7EEE8F28FBD542C
966A459F37098BAAB28F3643FC942D82AE215941B74078A4115A76CD888EC810
9C5DF6464485AF85CF0A7E49EDF5D4C6BDD3D5357AB74CE2B7DCDD338C5E0CF9
A503C55C06C13037F78BA80241E820251F324EB93B6D613DBE77E13521CB8462
5ECDB25AB9E5956DD07F6CC361722B6F967A4C3DD062AE9BDB13192D0D3C60AF
92FED51094932FF476B5204B26FE2C5E0643A9B53A3E4F61D00AD69123D73996
98C76E2B3321C60444B7FE37B0A1726B7FFAAA1C1CF77AF91E660D2DEBC5D8F8
A53B7E262755B37D3548E930BB4B4B509D2A592E634D79C715FD0F22D246F244
38F361DD367B4BB623FBC3ED3AE5053C2AB8BDDB6223CBC9464BC61731C54F34
4CBD5C9B315A574CC2396294B275D95E03E0738222A49E0307911BBAAE209204
E735C3217CE9E330CD555E7E54A6CA36B6CF478F0BA6C67986AB73975C8421D8
9D4B658AE5F3836F9DB588D46BBE401B06CE5134119F11EEE241737750E97B9F
CC2F0C8E0190DF10415D54CC03D8D687B391CCB1F6E0906C523D0FC05246DFAD
E1C734309B7D48E0E4DF4D429BF5EECDD00772E47D34F7F4B49109DA63DE7BCB
28A69CD382FB28638900933270448D89CE9D5336FFF9FF902EBA84B90E69CCE7
50A8A1951731FDAA8FBC0AAF0D3E364650217340FACF5E9B0803845A1CA74386
E8F38E75917A9362013A92304D92922DB7BD8C61662697355B32311FD8B9CE21
E06729C3E2289B248373CB7DC752BDEDFD53057F25DC5E33EE66D706EBB760B1
9FE218F08DBE0376D8AAC4DCD53002894A8764F4B8F82D0FDE0F62A8A11BF1DF
120B826911CA2290275F5678AAEE83A43706BFF8CE8B5EFA88AFBEF67912C0DA
B415DF60A052941AF96726BD80CA56932A3808682A689D5E17F1CA590FFF80E9
C5081A9AC66E4CB91B6732D3D4D199E1ECB92C200A0EAC6026A68DD1573BE55C
371095FF4B4B79173BCCE960E35A44DE8D209F00ABA29349FBC450AA3BC411FA
A834AF453675C55332726F923246921FDE990F83B095005524EA7630C5BF9C2D
3156CF7AA1FCE8F8F974F9C317893A3A9EF58E7382E986376B8ADB77BC1BBC7C
59AAD44623570F0DC25D67238873B76311B2F8615CDD9F15B07C75ABE16EE3F7
86C4454FB337AF075267A8D472D9F959268C6E73BBD2A3FE180FC78D9278D0AB
F3F75F1BB7E911CC8099AB0F13042E5DAF617C736E78D2EAF8EB1694E1D0FAC1
915F886BB8CA66DA23F5A39139402E941007720F9D6702182F30DA403D35740C
EBDD56C95A82D55D08319115443B475F23FD9149D5039D7C1FF7924EF0B4237E
BF921C32F05238E14543C7F74898786390E59AA585997E5CB017D2DAC53D209D
8A83F4E1B50A2A09790DB8F7C8053DB11316C4582269D935B776821646B487FD
6B51BD2E16CB193AF424D09A320A27393A1CF0358DBCBE50CEAD5B2C27B622E6
F1A58D2766DE2A9E6D3E6272D02AC570ED8BC3DD20D5447F6022F07B2AC42522
18B3E1B509C6D827011B7C1FFF07F61E0305C5BB9B7948D9156F352E2C3B4CBF
C1A1EE1752A9C4DB8115C1E3EB3DA1EE0B84CEA668B54901A2C2F01C678A9935
48D9C1348B199DEF476135ACA8176F4678B3521BA528043A1C3FCB59F68CD5ED
CF0CF98910FA39B2942EB7BA8A742497FE161B1778B8AD962C1C44F686244A01
3FFCD8EB86D72C783E6DF7A6CC34DFF57E1075F4F74E44CD3B0DD20E2E71CE80
CE5F1CE7A283EDA37654E8982FE20FEE9CEB37CF7520E4B27E6EB4219218A67E
973D14D4FD5FDCAC61CE24377C62931D27101378B2DD0051E2642D82730918E7
736C010B1078CA7A4801C9BA75EF4C4D49BF47EE5D509ACED0F38217FDC03CB3
24B21C3584772C7015CFCB85585C52BDA3971739CD9EC92F46D0B3F990507DB5
4EB5DA4C7536BD081027D218541DE0FA5457C8E5F8A24DA9B89BBCBB60313796
8BBB679CF86EF292CBBEC6CBC56AAF3525725765D50EF8A7724E0AD9D9E1DBA4
E7F7276F4A40D200EF3252E4382D95F782904CDE51C0CDE6F5E65B0F41E396CB
F21EB374550EB2E3BF4FE116C804394AE1D912077175C8952477EE58D5296D64
24A98CE0F73E85401C0F6E06A9841F2BDC681E094522D338DFC509AFF54BC6F3
C8F68556F9D85CE57360FC9A624DCD167FF2500BA11315AE6D58AA08AF07EB8D
B318B41B25D520863A1F0B24C2DAB9800E8D81750983FF7ACD22F171B4B6A7B9
5598A54B98EB91664759A86140CA24B022123514BF7D156F49506057D895898E
A2ED8174C0C5F1C8E5E4203BB9CCFC8BC7E71E62274DC3082F5E293006122BE8
1A57ECF6F713C6F8FFFDAEC6B1D8129250FD46CC9A2F7264FDC1C718322AF189
3FDF9AE243C6E07D2BF9211E27FEC9538E98F1C4739D6B1EFC1874C620C92CF0
B34D01E6BDA85E1E4DB76A54CB46E35604536C636A11CB7075101434B1AB8323
5ED082EA832E57526FCF6F2237E7CEE915F81C0AD3F0FC6F6C28CF449AE57C09
C3F2E02CA2B402D9DFF93879FECCBA6C7E8BF6F92E315EE140F1EF654DB9953E
0C4729DEF74DBA8A686C3094BDA6D08EBF9EFEE9E6A8AEA33BBC4CEDC05F7733
385282711071BCC10D2F17C3E6A32F9307D3D00940F56510F0704A4440A49A3C
A6EE9BAB9BEEB613D3C983F7DF3CEC3718CC7B39B030A2B4C87780C2014BBF64
1A19797A48D9B194B976313D0B7A7F0FBA076D6E2EC39C417740C3901AFCF7B5
6DC84AAE5D9172CFB0C9C450780F55FE1D83A8D837280C53F2A83D4486924AAF
7EE0C01A96C6130E4BA56114028FAB4AFA36A9CE900B7156936655E7411ABBEE
43C6CB36EDEFE236572810C7F38A36D5884885A06BD26A77B76EAB3AB29B6569
914B40AE4B2300BA223E9CE3EBEFECEBF0C1B491D5CB5281CB2B9E4B6134753E
923DDB9A2D92FED67985A8122422019153751EEA900F97BDAC5F7B15E9D18BE4
42EABACAD331A546956A5E0F4E813DCDF8AD2BB090A513E5EEC484BAD2FB6DB4
81C2695A762E0AE82DCE72965EBF37F755BC48351EF219E42E4F33845016C7CB
B30A49ABC62BD4C5D9C5B84F1BF603DA39674FA82F8146EAC9EC8A50D8911615
441CA6554C0684DFE5B387D51CEB1FABF0D7A28A9A4350D6F99E9DA545C64337
5860814D6EEFF59EA8B5D0BB6526487E9E0B263A30C7E297E57357D6DBCD006E
E889FF43BDB9FAA6ABB77B69C94BD5299B8D41A93685D12094598AC007BE720A
85A47F72779AA57B479E5072E571120BC3FCC319024A611123A982C90C9A772F
A0C5B6DCBDEBD4C1439DAC8EA05C1275801EC652D1FFB77612DE4F6A86BB0054
CF3021456B69B04A76688D26CD28411112D1049F6215937BA7CC3308E2B78A56
1AC8CFFE9E69666C2D3E0EA6B6D20FF90EC13A37E556A6BA234F2BC7DDAAB266
58D95B5759C6D54CDB55DD98CAC32F941FF4792E50061793DC7962025093323E
E738F35F11F8BA39A09251415BC78999921FB83619C6901A6FA531E436CC52CE
99370AB2003340AC06355D1436C0DC584A5659E93DC68F34535A13E4F3B713EC
B428EB71E20E4349205E613CA8D8F0A471318097E0B8E2C49F0FAD80B3382616
16C3604CFB407B6DE4C7DB6E642FD2AEC2827AA362F37B22B7319253AE87EB0B
C1B4946D4B756277DE5C33395E379B11CC2F54308D8E3E902C507DEE443213E4
EAAA51F336D5C7F122C3A71FB2F1D8BDF92628944D90AAF6389D54594BC91C3D
5E82B8C11C3C9B1E475884E37C6725FD21DADA55F920D522B4BB6D0784F7C112
9CFB6A0B02330D3D253A46A09783DC485139A4B672530288429EB578B4ACD8DC
5EB7F5DB61E0C32354A7B1B2393FF104286D7972B5FBD38248EEA94A03588D48
02C2DA23A5975F5981E306F1045391355B81E2E3F8EED5733E9FCDA1C40ECEDE
8195C258303C7A01DECB5D2DF8B337F9596751C9D22A1CED51A7101215A9B103
013872D02E24DC114EE2CA44C4D1011D434579CC53EE0988435E4AE74AE30921
1EF97680742CEFAE504D49D3A315A5E166F88036D5E9E9CED80F489227DCB86B
97E3DC3FDC160721DCFE9736C99B2EAC1CFCDCB7CB25813E184874C668E28F39
A318540B59DA93E1C327BD9A76FA1650F0C64D9D666CC109D99392F345530D61
CE2800585CE1792FD1D6D0AF51039A1E4FEBF8A888D67D9CEEB1782A5FEB37C6
C56F60CF35A44E7DE491184A88617E995B97CD551C3C2DA7A332261AA39CD0A1
D23DBE8534E850DE02ACB8A1F18518E4C34B0F1AAFF0A47DD29EAFECBA2CFB63
57C2196723EC4506AE2D04DE808CFC48CE834BC0E7DB5DA0F600033C340050DC
1CE033B2E5840673845E9F408F79AC161AFDAC15592A1642E3845F20541000C8
905823EAB400E8783A5970EEF63426F0F288389ABDE9859AA01FDEF3E74AC385
4016BA6D2AF1648805C89D22198495B69A7180CF65FD6A4B0BB2AD84FB15313C
9E783F1D5893AFBE627E78BD0E2DFFA9F4FF05AC9F5958E35D01E75F3587FF28
6C2F52A5B5B866EBBD31B7F84B10CB2F23C1FA00545A8F469478216E1D84D7C7
50181FCA0F18DBA2A9A745B32796B32718EAE7604E29321132B78EF1A89C5543
DBE4BD220738F9C218279E6F880F417613F030C1F3A5D2AADDEC08B66AE2E1F3
A6C515A7602343CAF7F02DC8A450614825EF01BCB03300367757FE32EDC7429B
B34DA73FB3E6A4B9F02E3F27897935477002CB69A21AC41A4502EB122798AB16
49B40B5AFD28A00B088E8D6A6034915E1191582165F8F9360ED193002A3A5BB5
7CA0DFEE36D6C6616D9AAAB869F9B376951FDFDA6E227CA0980B6606AFCFD43D
410FB2FAD08E98BFA8182E92E662F67FCEEAE800ACC696E69E53FDB578E77581
A9F05CE848E3E64CF2C2D362D410E915A6B32DF8A597C64F979E6057D2251660
96584916113E739A1D3C9D3000AA5FE0F7C897F126C72ED975FB5F0D891506F0
2FDB2A19282E7C5F3070683C6E83E6724C5205114F1748C99F0489040CB1A505
41B67357C47E804DD9164D6B1DC2886670BA9D8572725D71B04F153321CBA94A
B8BFE3A3077908D8BE6779ECA34A236692EA74D75721B8AB49DC5DE7FED0FD4F
57E9C20B03E6898ACD90323087AE6D9099BB048CEA0EE2E487708423565EDBBA
83096CDB09B0F26DB1EC2D0ED4559E9F2C6FF880619DB63171441120E4F1C2F4
1B555C6599C599E8DD216D1486AD5782BBC6E0A556CBBC01014072AFC51D894A
8AD11D4ADB65A0C25E81AF5AD4BC0EE2193F3B6A2F2330E7D08499E508DDCF4B
57EC6D24CA91D7911562779D96BCF8B583D9F83F56059F122B315E005717AA6C
7C8F0DBB60E018CD1CA49F7BEAECC2FFD57CE66F2F856048E4C306DBFE4136A5
F83A4DB55E967E4A52B8B858837E537DF3B87B766AC40F41E7254905EFD467CD
0D06ABE9E703AAC8210D040A0968A2AA7AC98705ECC07476F4D256F4560D15B5
ACADC2BF176C99407CC061E26F118C7E52FA8D453055FC8C27799EF13AC58CBA
52AC515536C56AE2C5431A5DC9FF92D705D87136DBA56D701E7A01E96886AE38
37853C67BF3BA66BB124674879C63C2873E0094E992703F9F1C69D7AEE76F6E6
E039C90B5EF762C13D01E2BAD69E3FC7D54B1A3880458BB28F371C2A30833DF0
47FFD4094D01D44EFD651CDF04D35EB0590E3C40783535FB6C112216C1953FA7
990DE8736C078A13076242D289DB41F23B78EB41410C0D29B11DBF6A8C3F53D3
270584EAC4A864E21630239FE0E005F3C39474809E2B7DA8BA4FE53A39B0D8A9
4C1257AA57BA77F89D7101909E192C3A44814846371B14315D23CC419B61941C
FF7F94D75739D302B3CE0B9E3AD33719EB24A80243BD7819254E4B46388C0F75
819212483F5427488F0F63A121E2DEDA7E7FB839FB859D6F49DF2B18D6B574ED
48AFE1C2EEDEA499EB804D9B70EEE4FA341C810E7F372BD17633D1428DB4E552
E4A85DA9B5C2C94ED9E6C26ECB8CC04F677A868A0E7A2E6F981020ECF2DAAD23
A80EE1DBC162E1552EC9B9480FA9D38A784A03DFB13D52477A97CF49906432C7
5D000112BB7D9B026185C1660BDA8265CAFC9AC9CF9209046DC2DCBB44514EE6
386483942F150458252F775FCA74F83A79702481BE4275EB905E7D49710ACF6F
7215217715F8A9A97B1FA39A30DA08E5442D33377A1820210C8BFBE8EF16EA09
80425AE0E3D51C097767B3696AED5D47A2C4AC85ABAFBE2C5A446062CFB88AB5
9280716188C2072DB079FBAC3A69CA89B84B45081B4C1FDAE2B60077019DECD4
AD1C87FF29EBFFA83B10D4E211BD67EFD8001A119147509290B66FEBAA7E9C39
7583A00EC05B2AE64D432DD5F00AFBC18A91746532CE9CFF7ED13D913CCAE297
C1FF905695A528F1932A4514BD1B39543F9F39DC55C50BB6A2006E15D14F0623
C2487283E4EFFAC99F8249478D363429864934DD6D609947ED49EC80E2089895
5B94CBE77857EB29CB52832163041759E953920539F6EAFB49941B76B7414B1A
F240D20881EF859EE5783DF48A57E185936AC8FC7FC6BF43B15114B98A5185A8
7A1FF39919F9EE6AAB04BBF4794EEDA098487E0069810DD70D4E2DDDC8E7185B
175D78F8FA2647223055ED0EA5A7C3D84284D2F0401B91C4CED47B31A3546E8D
1F16F348F9CF3ADCFFD941D931C3A2C011886E03FBA37D7362BDC798763C51B3
B5B5345476D92614E0BB2AF7FC95AE139181C19B6F54CDD66D7A93C5B9912E3A
E2908772133968AB6C0E41D328BFCFC4CCDD2B9112CA4E0B4430C602FC05DF2E
4BFAA6D8925A456E17F9DE0F6A0C95551FE985FF769AF1E88AC9E52CF37871A1
EF245E203AAC5B09A038DAFBA1512A2ACB86646E77FC0E251C2224E5BB296E48
FB146B814B26D0C3D277AC72C4745D727F4A0C02EFA44D795DB45F023D011D41
8BCAA6CD2FC6D376B467E5F912027D7C4763AC4DABB47E1BA7825F0F9F5EBF70
C0F1933A25BCBA244608FE50977E44B268D814E9DC6D7821BB83986D7A5CFCEB
2A42D7DC7F3BDC72637D734E80506AC53D7262B3F595BF6B694C7E226F416C31
E3937489043AA975DBEEC5BA26A696D56404750B88A6CD487C1DD3160A9BCC0D
51F3D797A23EC8ABFCAE750B1AB901F637843D0008A5AF585B837BDB4FEB00C4
18EC1F8538AAEDAD8B05EC19B2763C377FE08AC6A847AEEC3454A8824AF65F8D
E4160D16B39B992765D8C8B2AB0F80D5B559717B5FAA02A61C2707EA78653773
2A8CC6ABAF29544EA3959CE505A8BEE6BF22C60E89BA6A5666D0FDB2E0B50720
9F20DDA691F1737F88D696A6FB4EE4EBB8A7A07066F11062EBA7FAD6A6AA9023
3BA37BB0280B1ECFD67CF51E7900257F1956C9BA972D7C7FB0797E720710D517
E62FC9EBC758808560031A236450306F7E461082B8F55768DCBA3A15800CB402
E445874F07CE5D8876F9D3871B8F8F1ACDB9DCFE311590EDB075FD65585FFFA4
93DA50FB7CE89ECEAD02C761DA184D75B364B3162623F64A6FC78F0C89AB8FA0
1EFCC2DDCBEB91BA30599724B1D8AD2866A209830B7BEB31B43F2CE3CC524C91
77585439253D7CB8B23B939AA4BEE9A5CE74C7B891F62AEBA494B5F08DB36438
5944C3CB10821346027ADF3A167BEB44E22A43B2AEC5862CF7CAA10F89B0FA89
5507A905EFFEDD6743B66043B94D4915BC658975AC6572CC7DD08D07B06A79D3
424E4CA0C13E7B89201B53C6C4D9DD7ED45CC474336B3476F1CEFBBFA80A2C0A
AF4715E0D684E5C239C66747C94956844B1C027FA18BD2CFCA73588E98437312
61F7D2F4D06FEAD848317A7978806F3B4853F44FE9F3C79819175B2DE733132B
529065C4EC3B434863F73E20D78B508021A0017AE3F2C462261839D337DBF0C3
CD530355FD1909F4C3758E92223794A1DE098C2A516F38DFD078FF17E4B06C66
2D0F7DB4F21C7D6F4E258563A1989B8C53048A51FB24D80885352AF84E0A4360
CB2385352FB3E8F8612AE088F88085C0296B02B66EF4F4C2937F6AC7C3C8380D
B1D343E39C9C8B439D39EABAA6729980A6B1A9FC320AFFF9EA7E4B4C267FE28A
4035806CB61BC67CBF6C6090DE4994F31264FF9989581F400530B1578D46577E
D5C081439FE4573A5F1D40701F9CECC4BB79174BCDC318BD3B05B15C11626DE0
2935CD3A053B19C7FCFB1D4CA792C2B7EC7E6493AECC30513C42A16A545E61E1
9BFEFCD2EE1CC84C8DA2519E63D6A86FDF53B523291905875AB2A7B69208EEE7
F94E0BB0562E2837E9A6121F95CB28B8A47F8BC9DA9C64447332FC28A9C71250
727867D056FDD12AA9E2123450700C510472A5846A96FD22CC02E14E2F82E020
0B73D9C2D32658A1616CE57063751C1175E9B3F83C60D3EF59798190F1129534
28A1CB918E2AFDD6C09C21F961CF436287D71B1D44884F40ECE90C29E20DFD64
38B4B9809D580B5EFC84FDA443A0CC515AF063807FC7F563D4F5AC12F5F99438
1D0E39B68BE1F6C664956019CE50121135DFDCF5EE2857FC4FD0339DEEA8182E
B84BBEDEEB599776168F14B735474AE81784EBCE15E4F60404A6E10AA705D310
7E798040D4ADEDC96F9C67F5B9EAE6E49CB45AF3E15BDF7F45A481E45FCE5F4B
033A207B9016D23E6168B5F7DF8544EC4CC319CD6D236126D3D851924D67B038
074E38951D7C2043791AFC17E6307DAE66FC7AE24131A43C179A1514344F9251
8EC52019C7CCB0CA9EAA981EE1EA4500D6AF357AB847A6D0EB81DDAC014B681C
2DA4EFE3FDB09D1CB4C7513B99947381ADB9737F2F881AF9B4B45004EA4E4B12
345248E5AB6B343FC998DF30C87B2EB7E2959D198854DE4B91C857C9E5A01636
07E681EE1C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/NWTYRS+CMTT10 findfont /Encoding get
dup 33 /exclam put
dup 34 /quotedbl put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 59 /semicolon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 69 /E put
dup 72 /H put
dup 73 /I put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 85 /U put
dup 87 /W put
dup 90 /Z put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 125 /braceright put
dup 32 /.notdef put
pop
end
%%EndResource

userdict /pdf_svglb get setglobal
[/N26/NWTYRS+CMTT10 -1 TZG
userdict /pdf_svglb currentglobal put true setglobal
%%BeginResource: font PHXVEC+CMSSI10
ct_CffDict begin
%!FontType1
16 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/version (1.0) def
/FullName (CMSSI10) def
/FamilyName (Computer Modern) def
/Weight (Medium) def
/ItalicAngle -12 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /PHXVEC+CMSSI10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -97 -250 1077 759 } def
/XUID [6 5000810 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC8DC423323
00A152553EC9C9C51591C81BB5A2F58753878D92B1C73E948BB360F467A7D593
2446E52E22935D5D0316634839C917AE2BE363D6AE3760363F748EAAEAD9AB74
D863835F45718D23FB3980D0C645610BF765847F4BC5CB03391BDC9D40A6A460
ABF0D95BB6A176DB5088A1068A0DFDC266C25ADCBEF3E5472E03E0D29BC6801F
A2AEAD77E33C80C0DC39DD6005F637DB504B6887A81C8C3CE819E29003F32608
718434847B17DA3BAD8A2F5926C31893D6471FE4CCEE7760762BC45B674D95B9
F23C789B6835BCDC9981E3CDE9DB5160E3B239A376F1E082D54C77B0C5182E1A
95FE72B0F14DCB2CAADEC44007A0D0678ADA1138FCF60606794EC13AE60138FF
505B0BF4631E6688546E492E4FE1BBCCFE9243136F01F2FDEDDA5923E66B539E
00A27EFF0DE0FF7AA3D758B9F0DAF4EB5786F26D3E150DDD29924AE8E1F6D435
F4B534BD87BB1EE30B6A115161FF1928E18456F3784236FB93E5F2843C784CEC
86DF5F7FD02A9E275E527C1F5E0DCAFCAA4A9A69E32E63EEE860F6E4797875DC
05A117AB3FD7547D9585467F59AF8C0382EAC238BEACE72A471B99202B76B850
5E0E2484CECC6995C5F888263C4058DA48F7F3ABECBEB3492A133E34ACFE80F6
EAA29BA1293927872D807C557463ED7E562569BFD273332B29561F442F7B619C
0337AA67B472892D884401AB07960D70372AED9DF4EC826FCC83444A8EC02219
2A6612002CA2FC117F78C47A8F109B44D3CDF73F38327E00101B3A85E0C0204F
656F6B13C6DE7A14A40B5C3DFA44ADFA59D70D6A16CD9A4906139C0ACFC8D740
1727B40B55C554399354F3D1BD5D0750EBC1B08F15E81B1AD03F137C92F8CEF1
31C49D17BDD57DA3CAAE8DFE1B2EAF8E978906C6BB761C4AED95C7D8CA58E706
F6E7BBC291B087A3F4442C2497EBCE87B4B8E2ADB1C86A4EE3E3906B56EA8F19
1F16A4550C02E0C8575A28A8FF12CC3EA31A11EB325CC69D30E41C3554F7D592
DFE9FB145E5E751FD1AF30604ADA853CE1BAC1526159671F5B6A5B214E29AA68
3829AA9EB7BF342DD4BF2F8105EAF55920B776447B143A1506646A5AC21D435B
815D0AF66A11E72B55B02AC61EC3EC42384463010E63BF63159AE1F85186394E
0A113CA349CB67CD30E26F91DF9FC660ED35A87008DB9307688EF9019E163CDB
26103C07FA453B41C89F98A3B2D077396BC1066196FB07FA3253D3D10F3C634A
A47684BA17E97A45D965FB94E5C50A4A70CA1DF9F5271963EC505F6AA1B1E43B
E35A27F7BF67F51F4F20192126043213AA2A3AA7EAFE6AE1D5633B4E713C8146
C226DC71FD12064DF2EB3E5D4944669E9E359E6F0C70E2B8BF6987ED85D7959F
F6041E3D5EAF1E890DC49221B84AE93177D5B81E524A6674512DD8CFDEC0F047
176C2BD9DAF1957F30662C904025207ED804C6E5A060202D4D020C8DE43360E9
FAC30FBA4879AE150537DBBF6B1B4EC6E852239825C289E695B1E6DF5002DE46
49A7D38583D2CF1E639D55306C73952209005B8A32D310B3E31049DEB99845BF
3306B9E8E395BB88B0F4C917570EFDC94768E30F76FCE3AA9C11DB8637A43D8E
F588970D23432AF196602C282B3EEED430C8A74FD52A6AF2BEE451FB99020F40
37E07FF2F08BEAB8F03D0DAE3457D5254869BC3C570B0DAB1DD569590E7B487F
7E2483BED99D1EEDEDF6593DE9A5F4A8D82DCD81977832B28741B241F40CF728
FF2F6169BAC758B12A8D773691102A6C42584344343BC09E16AA9AEB90C69D17
A295527FF8AA620BB13DF920EEAA05CC0A56A3B39D3490958A90EFF6CE482C23
A529EBA4137BA8BBDE5D8E17EE44AE3D786DF61B8862832F4B131F92EBA4D2FF
0E7F8102E94F19D079B309792E5384B42D1ADF63AB5C8F48D773232D79B98CE8
309C11B9661B0FDEB93308BFA9F5D2404D4F1F41465744D61970FC9E03E25161
01704A3E817841DE0DA88F053DF70E0C6974D6C355D8B97633312EB4819C4F1C
5C6546899671E990C139ED180F3A1934BBDF333190B2B0E72EEF8C0318017920
F88DF9D1762407AFC32DA1C68731FA0AE6DA8448B11D34F49CFA1018F74064FA
8F48776EB8B277A92CDE11DA2B072A743617600A0A2B86DF192C3947BA57FE89
AF5A7EBFDC6017C7A5249118AAF1DDE490D80B2C706835DEE100426F6E429C5E
D26303857CA585A481E8034A2D5146A5C6B56F99530F47198777AE42C1B7DA27
044932C39C31D2A73D9C3CF13C0E887CE06D510A111BC03764985149063B15DD
DE94E665D9AD27729E353E8C83AA29E2ED13C168F3241D9E010A80F9BCF83D68
25E604222A44EA322D04E5D7E1F428AA5AC45FC3407FDD0073F3C183F9608333
7130176B2856EF2BD46D5D4860D1C7B041B9ADE8AF9C3DA8F1F77A984AA0789C
6644E72FA5D8263EF3284EB9D31C06BD7097A5C9FE640062A5DD5B48BFF796E6
47BA73EA4FAA0E15E1AC8DE271F8B70CB63B1D3FDFA91E7A1F7F5E6DDE2A9E06
E8980D7F4EC0DD2B9297DB61C9CD5E1FC2272095F99ED8DADF1482B6C99FA3A7
8A92B1B7E81EECC76891C35658B29E2BC8954859DF5924686B746A477C5EE4CE
6A5A04FB1BFA6193469492A03DCD6DBF85E9CDED95CB294835AD1F242F4F1DB5
0CFB8EA3FA789AAE690B640E963834E0E84B7AEF20E0849BBF61CE741735FBB2
3533B1D89BCC6B5BF487F70A9E4BB9E2D38BB83EC95720FC1CB794BA84F02FF5
6B69A48775A15F27354630104E8D96DC6A6BD3BD81970597BF75BEF75C6DBC18
17D7222221C7B006386FE028BC0ED011B28392716A5E8DCD803C92FB4738EB07
16954C47449255CA9323E1A12803A61BBDB907AD5CEFE70800615583C149C2A0
E92A6509A315A922C3B6F6035CE25B4757CA4EEDB8830E85F748E5924C8E78AF
3CAC619D326EF5C3DED310BB17E8A8D277A09791A6ED95A2FD1B5691BC5B1639
1984C67ED864CFA01450FAAFD00CA999DF343BD12ABF2D62134626832E2785C7
2C5B75E2C1A3051752759A7CE3A1F26714CFF4A166DB2EC408800E14F04D5879
E18E3688E7B73A5593A98DE8FD35EEDF0801C33EC889EBF9205E907EF4042E63
B15D0C0D9436C5DF2825A30B894C90DC79E4770A3CB812D211594F95EEDA318F
FA59ADE3873E41446D04E6EE2F0B5C724A8627AC2385A2A5FE59BDABB7C117F5
2057A3B109BDD21E06EEF89F98325481BD83E6C53A08F3707E0F38B1F4CD239C
077A904DE8BFB401589DDA4F6A05C085F95BDD2422902130154DBAB2AC608F9D
AB6E8541C00EA704837708CD8D2115DA7C00E4FF4B957B1E203F4FD3B83675DE
775DA7A61208B5C2ED101713C9E324360C66860BE5461C70C87990DDB157886D
9EB7C3A81172595AD42181C69D31CA9B9DE6AD41099717B6C93450D61C1487F6
4F57BB0DD957F08BEBA12B33A7C3F7F54B970F672B937F25905D3C37212806C8
1A470E83AF7AC93C3BA322BCC5C15930809A6A7648C4D68FDCB93D64FC4944E3
599874338A4BE2F0DEAE405C4EF0900118B78024EE45747206623587AE1A14D2
7072B460003B487B232A70E270C57ABB43A297B476CFCAB7ADDE8CCDBF5BB597
F1FC085A8345C5F40825B84EDAD538A6BD89CF096058D807B27A99AEC7836BE0
C51C542E4700DAF6C6BE37785991FBE65AA5F4591220D04C93A53E9713D4C0C4
A2DF7F22386BA96FAF49DA90A238000DE7FB2908A0CA4934E95198D569E75164
BE9F785B8D71E31C2DE9EA117EE08FC96826C88DD36612FF4704683B9C80AA25
FCC9F70274CA2DC89EA88A5B7C6C206FFE3DD9DB3B6D02A9FBACAC639A77C993
83DDEE7B3068A98A6F1C0B23548678541D613FA0BD2B35E8B195F740D72A2F88
79ABBA6E20690BC89BC994309628115CA75C4E69930FC225A50828DAD2C17299
C27C2FAE9B81EFCC9B5F3C7C4750B4967741D2644C0442BEC19A9BFD3CC41640
1BED5DFC6C54D417E8FF73EA62854ED3F4105B508555986FABAEC47BE81E313C
C53863741AF434F9A3FA241FD421853EA82CC956C4CCA9DC9C0CF8A07AEDD46C
FC0F363B63A7E0F67F2176FCAAC2F085168393C1CDFD6AA073C12A22D6C0AFA8
2B6246862545EC4F047F0A82543CC1EA8F6D849D3ABF302B460CDF20FB17D729
38D784123D401B12BD071F83EAC7AB2ED31AEC6BDE211CA99AF339284EAE7EF0
A9E1EA1BF3265E55F619FFD10617C6ADE99BD78EB08E28DD1B3D79A501BCA41D
9B33E9F823F551DED57E61D9E04825A7297B10162320C0D84FD4070FFEBEBB5C
B4ADAE056DEAA81B817CBE5FB68DD2154F90FE45DAAF180FCD8CDA39D1855301
A2E45AB847ABCDEB38604CE5051A0B84DCDB15C602EC524E6C50F23FEAC462CA
9739F06D6463426E2C28F7D489354DFFE766F4DC83395846
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/PHXVEC+CMSSI10 findfont /Encoding get
dup 65 /A put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 119 /w put
dup 121 /y put
dup 122 /z put
dup 32 /.notdef put
pop
end
%%EndResource

userdict /pdf_svglb get setglobal
[/N37/PHXVEC+CMSSI10 -1 TZG
PDFVars/TermAll get exec end end

userdict/PStoPSxform PStoPSmatrix matrix currentmatrix
 matrix invertmatrix matrix concatmatrix
 matrix invertmatrix put
%%EndSetup
%%Page: (0,1,2,3,4,5) 1
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
347.083333 561.333333 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
userdict /pdf_svglb currentglobal put true setglobal
%%BeginResource: font PAAAAA+CMSY10
ct_CffDict begin
%!FontType1
16 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/version (1.0) def
/FullName (CMSY10) def
/FamilyName (Computer Modern) def
/Weight (Medium) def
/ItalicAngle -14.0350036 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /PAAAAA+CMSY10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -29 -960 1116 775 } def
/XUID [6 5000820 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC8DC423323
00A152553EC9C9C51591C81BB5A2F58753878D92B1C73E948BB360F467A7D593
2446E52E22935D5D0316634839C917AE2BE363D6AE3760363F748EAAEAD9AB74
D863835F45718D23FB3980D0C645610BF765847F4BC5CB03391BDC9D40A6A460
ABF0D95BB6A176DB5088A1068A0DFDC266C25ADCBEF3E5472E03E0D29BC6801F
A2AEAD77E33C80C0DC39DD6133A821B832A28C5E08CEE6416DE4AEF5349B075E
FACA5CF9FAFC5D181F0E28DA28D0066C8C517A9FA3BA8CFD79F6BF8E6D413BB6
CD114D039B32EC438B5D98C00EFDE01390A5581181E4714914A4A965558C7657
CDBC51A5E6FD2A7C4423E8381AA2258278EC813F0C9CB8921E7D9EA9E6A7E196
CE393F94AD1124BA2D992E9A350C60F76FD1F90489C5173303B3677908F1E3CD
990ADD159E88D50400AFF196E850B44AB1C183C8211D52E51A1851961AAE7B31
66B5B72652706B29569A85FA75D6D2A88EFEDB1F56018E503A02835BE3E89BB2
631203116C4A564B03178015522FA0E8E51AEF0508158C3E2C500EBFE7403B52
2BC73DAD0447AF0D0DBB9ED89FAB02EB50D9303229027278B5E9BDD0F37DABAD
F82B2B87C4CCAF1E56E74989162538E595598372067BD858A3AF2FBC16603658
CDAB7BCC8C444DB95ED4C0B180B939473A89619057261A1378EB275A4157E3FF
9DA4343A9D1C632BCD2E96ABDD1A5100D76D17402AFB9FA3387D5465D25E16E0
B4E15E2BE6996B8605D732B85367CAB3F59E3F934FB2BB526EADBC3048799B13
93C72C992C4F3F0B654550DB47B7F1C1D9ADE09C71711B102C7E7EBA881A082F
E40253C0B3572316A68299B9EC6F3108E35A5E51D98BB564AC499363BA0C4209
E35C0B382A1784D5591B6586D0276709C2988F281141E117B6E344F6C89F314A
58DC641399F55227E0AFCEDFD6B2770C6E9AB6440D0C8A89096A5A4C21CCFAE6
EBEE6A6C3E11A293CE94A7928C73F46D0C4EDE7EA83087D3E59C8BF59AE380C7
E66CC43544300898E3DEE80C7E690A173568ACB6C753CAEB09E05E9536301CE2
CD6921DA60C52DC7B20ACD80C6B32C25E107740041BB122BD1220AB6C3C39662
B3BB7BA06F68172643AD27C85533086F1C6127FBDFCD9F61BE40AA54052D2C5F
77801E6A3A55EAE3D9A9FA3B7F2952AFDED9E9449DAFFE84F1453FF8842E0406
D0770CABBEEF7D96CB43C338A418DC61D23514557D69141E25F2176B4420A581
361D93794F5D8F8423AECE259D1ED6C9087A0AA4FACFD7E00F96FEC932963F50
FBDECBA46C31B1B63C71F77FE6CFB7A331DAE87F822B3D20124A817D678645F6
9B0B71F4F1F60C121AC6E2981F7562CB08686E3D359B05461BF9FE6A0DE416AF
CE528D73E5597FFF267841123791816805D23B1A03BBD4DFE290AA03C26FE2B8
D127A0B4A42A757504918616B0BAF7D68B262E99EB8E2FCA0E68CCC36C3FDF91
72943CE274EFE881729339DCDBA3F1498D3474B1CD57410F2E2E42D80D75C81A
2688659340FF225F9244DAB667B46A0DF2F23B15EC9C3B08B4AA69C2EFA97FCF
00F97B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/PAAAAA+CMSY10 findfont /Encoding get
dup 15 /bullet put
dup 32 /.notdef put
pop
end
%%EndResource

userdict /pdf_svglb get setglobal
[/N14/PAAAAA+CMSY10 -1 TZG
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 724.748 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 11.955 Tf
(1) show
1 0 0 1 -11.955 0 cm
1 0 0 1 -712.793 -33.049 cm
1 0 0 1 158.156 -20.659 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 29.748 Tf
(Par)
[19.9907 14.7251 11.0661 ] pdfxs
(a) show
(ll)
[7.61539 7.61539 ] pdfxs
(e) show
(lpr)
[18.4734 15.7963 11.0661 ] pdfxs
(og) show
(r)
[11.0661 ] pdfxs
(a) show
(mmi)
[25.7916 25.7916 7.61539 ] pdfxs
(n) show
(ginJ)
[27.2492 7.61539 27.6063 15.4391 ] pdfxs
(ava) show
1 0 0 1 -158.156 -37.858 cm
1 0 0 1 0 -26.993 cm
1 0 0 1 2.55099 0 cm
0 0 m
/N14 24.787 Tf
(\017) show
1 0 0 1 12.393 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 24.787 Tf
(Ja)
[11.6995 11.9226 ] pdfxs
(v) show
(ahas2forms)
[20.1767 12.8148 11.9226 17.7474 20.6476 7.58481 11.6995 8.47703 19.681 17.7722 ] pdfxs
(o) show
(fsupportforpara)
[15.8141 9.49331 12.8148 12.8148 13.5089 11.6995 8.47703 17.202 7.58481 11.6995 16.7311 
12.8148 11.2038 8.47703 11.9226 ] pdfxs
(ll) show
(elpr)
[11.0054 14.1781 12.1208 8.47703 ] pdfxs
(og) show
(ramm)
[8.47703 11.9226 19.681 19.681 ] pdfxs
(i) show
(n)
[12.8148 ] pdfxs
(g) show
1 0 0 1 0 -45.828 cm
1 0 0 1 11.955 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(M) show
(u)
[12.8148 ] pdfxs
(ltit) show
(hread)
[12.8148 8.47703 11.0054 11.9226 12.8148 ] pdfxs
(i) show
(n)
[12.8148 ] pdfxs
(g) show
1 0 0 1 -21.918 -20.542 cm
1 0 0 1 11.955 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(R) show
(em)
[11.0054 19.681 ] pdfxs
(ot) show
(e)
[19.3091 ] pdfxs
(M) show
(e)
[11.0054 ] pdfxs
(t) show
(hodIn)
[12.8148 13.0875 21.0689 6.89078 12.8148 ] pdfxs
(v) show
(oca)
[13.0627 11.0054 11.9226 ] pdfxs
(tio) show
(n)
[21.0689 ] pdfxs
(\(RM) show
(I)
[6.89078 ] pdfxs
(\)) show
1 0 0 1 -46.825 -40.159 cm
1 0 0 1 2.55099 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N14 24.787 Tf
(\017) show
1 0 0 1 12.393 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 24.787 Tf
(M) show
(u)
[12.8148 ] pdfxs
(ltit) show
(hread)
[12.8148 8.47703 11.0054 11.9226 12.8148 ] pdfxs
(i) show
(n)
[12.8148 ] pdfxs
(g) show
1 0 0 1 0 -45.828 cm
1 0 0 1 11.955 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(M) show
(u)
[12.8148 ] pdfxs
(lti) show
(p)
[12.8148 ] pdfxs
(l) show
(e)
[19.2595 ] pdfxs
(t) show
(hreads)
[12.8148 8.47703 11.0054 11.9226 12.8148 17.7474 ] pdfxs
(o) show
(fc)
[15.8389 11.0054 ] pdfxs
(o) show
(n)
[12.8148 ] pdfxs
(t) show
(r)
[8.47703 ] pdfxs
(o) show
(l)
[14.1781 ] pdfxs
(\() show
(subprocesses)
[9.49331 12.8148 12.8148 12.096 8.47703 13.0875 11.0054 11.0054 9.49331 9.49331 11.0054 
9.49331 ] pdfxs
(\)) show
1 0 0 1 -21.918 -26.211 cm
1 0 0 1 11.955 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(Usefulfor)
[17.0535 9.49331 11.0054 7.58481 12.8148 14.1781 7.58481 11.6747 8.47703 ] pdfxs
1 0 0 1 0 -31.88 cm
1 0 0 1 8.66699 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(P) show
(seud)
[9.49331 11.0054 12.8148 12.8148 ] pdfxs
(o) show
(-para)
[8.25388 12.8148 11.2286 8.47703 11.9226 ] pdfxs
(ll) show
(e)
[11.0054 ] pdfxs
(lli) show
(smw)
[9.49331 27.9351 16.9295 ] pdfxs
(it) show
(h)
[12.8148 ] pdfxs
(i) show
(nas)
[21.0689 20.1767 9.49331 ] pdfxs
(i) show
(n)
[12.8148 ] pdfxs
(gl) show
(emach)
[19.2595 19.681 11.9226 11.0054 12.8148 ] pdfxs
(i) show
(ne)
[12.8148 11.0054 ] pdfxs
1 0 0 1 -18.63 -26.211 cm
1 0 0 1 8.66699 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(R) show
(ealpara)
[11.0054 11.9226 14.1781 12.8148 11.2038 8.47703 11.9226 ] pdfxs
(ll) show
(e)
[11.0054 ] pdfxs
(lli) show
(sm)
[9.49331 27.9599 ] pdfxs
(o) show
(nshared-memorymach)
[21.0689 9.49331 12.8148 11.2286 8.47703 11.0054 12.8148 8.25388 19.681 11.0054 19.681 
11.7242 8.47703 19.6808 19.681 11.9226 11.0054 12.8148 ] pdfxs
(i) show
(ne)
[12.8148 11.0054 ] pdfxs
1 0 0 1 -65.455 -40.159 cm
1 0 0 1 2.55099 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N14 24.787 Tf
(\017) show
1 0 0 1 12.393 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 24.787 Tf
(R) show
(em)
[11.0054 19.681 ] pdfxs
(ot) show
(e)
[19.3091 ] pdfxs
(M) show
(e)
[11.0054 ] pdfxs
(t) show
(hodIn)
[12.8148 13.0875 21.0689 6.89078 12.8148 ] pdfxs
(v) show
(oca)
[13.0627 11.0054 11.9226 ] pdfxs
(tio) show
(n) show
1 0 0 1 0 -45.828 cm
1 0 0 1 11.955 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(A)
[16.5331 ] pdfxs
(ll) show
(ows)
[11.6995 16.9295 17.7722 ] pdfxs
(i) show
(n)
[12.8148 ] pdfxs
(v) show
(oca)
[13.0627 11.0054 11.9226 ] pdfxs
(tio) show
(n)
[21.0689 ] pdfxs
(o) show
(nan)
[21.0689 11.9226 21.0689 ] pdfxs
(o) show
(bject)
[12.8148 6.61808 11.0054 11.0054 17.202 ] pdfxs
(l) show
(oca)
[13.0875 11.0054 11.9226 ] pdfxs
(t) show
(edatan)
[11.0054 21.0937 11.9226 17.202 11.9226 12.8148 ] pdfxs
(ot) show
(hermach)
[12.8148 11.0054 16.7063 19.681 11.9226 11.0054 12.8148 ] pdfxs
(i) show
(ne)
[12.8148 11.0054 ] pdfxs
1 0 0 1 -21.918 -20.542 cm
1 0 0 1 11.955 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(Usefulford)
[17.0535 9.49331 11.0054 7.58481 12.8148 14.1781 7.58481 11.6747 16.7311 12.8148 ] pdfxs
(i) show
(s)
[9.49331 ] pdfxs
(t) show
(r)
[8.47703 ] pdfxs
(i) show
(bu)
[12.8148 12.8148 ] pdfxs
(t) show
(ed-memorymach)
[11.0054 12.8148 8.25388 19.681 11.0054 19.681 11.749 8.47703 19.6808 19.681 11.9226 
11.0054 12.8148 ] pdfxs
(i) show
(nes)
[12.8148 11.0054 9.49331 ] pdfxs
1 0 0 1 -46.825 -74.103 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
49.583333 561.333333 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 724.748 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 11.955 Tf
(2) show
1 0 0 1 -11.955 0 cm
1 0 0 1 -712.793 -33.049 cm
1 0 0 1 255.913 -20.659 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 29.748 Tf
(M)
[29.0934 ] pdfxs
(u) show
(l)
[7.61539 ] pdfxs
(t) show
(i)
[7.61539 ] pdfxs
(th) show
(r)
[11.0661 ] pdfxs
(ead) show
(i)
[7.61539 ] pdfxs
(ng) show
1 0 0 1 -255.913 -37.858 cm
1 0 0 1 0 -67.745 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 24.787 Tf
(A)
[24.7872 ] pdfxs
(t) show
(hreadhas)
[12.8148 8.47703 11.0054 11.9226 21.0441 12.8148 11.9226 9.49331 ] pdfxs
1 0 0 1 0 -63.761 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(I)
[6.89078 ] pdfxs
(t) show
(sownpr)
[17.7722 11.6995 16.9295 21.0689 12.1208 8.47703 ] pdfxs
(og) show
(ramc)
[8.47703 11.9226 27.9351 11.0054 ] pdfxs
(o) show
(un)
[12.8148 12.8148 ] pdfxs
(t) show
(er)
[11.0054 8.47703 ] pdfxs
1 0 0 1 -24.907 -59.776 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(I)
[6.89078 ] pdfxs
(t) show
(sown)
[17.7722 11.6995 16.9295 21.0689 ] pdfxs
(l) show
(ocal)
[13.0875 11.0054 11.9226 14.1781 ] pdfxs
(v) show
(ar)
[11.2286 8.47703 ] pdfxs
(i) show
(ab)
[11.9226 12.8148 ] pdfxs
(l) show
(es)
[11.0054 9.49331 ] pdfxs
-24.907 -63.76 m
(A)
[16.5331 ] pdfxs
(l) show
(l)
[14.1781 ] pdfxs
(t) show
(hreads)
[12.8148 8.47703 11.0054 11.9226 12.8148 17.7474 ] pdfxs
(o) show
(nsameJa)
[21.0689 9.49331 11.9226 19.681 19.2843 11.6995 11.9226 ] pdfxs
(v) show
(aV)
[20.1519 16.5331 ] pdfxs
(i) show
(r)
[8.47703 ] pdfxs
(t) show
(ual)
[12.8148 11.9226 14.1533 ] pdfxs
(M) show
(ach)
[11.9226 11.0054 12.8148 ] pdfxs
(i) show
(neshare)
[12.8148 19.2595 9.49331 12.8148 11.2286 8.47703 19.2595 ] pdfxs
(glo) show
(bal)
[12.8148 11.9226 14.1781 ] pdfxs
(v) show
(ar)
[11.2286 8.47703 ] pdfxs
(i) show
(ab)
[11.9226 12.8148 ] pdfxs
(l) show
(es)
[11.0054 9.49331 ] pdfxs
-24.907 -113.573 m
(Threadscanc)
[16.8799 12.8148 8.47703 11.0054 11.9226 12.8148 17.7226 11.0054 11.9226 21.0689 11.0054 
] pdfxs
(o) show
(mmun)
[19.681 19.681 12.8148 12.8148 ] pdfxs
(i) show
(ca)
[11.0054 11.9226 ] pdfxs
(t) show
(e)
[19.3091 ] pdfxs
(t) show
(hr)
[12.8148 8.47703 ] pdfxs
(o) show
(u)
[12.8148 ] pdfxs
(g) show
(hshared)
[21.0441 9.49331 12.8148 11.2286 8.47703 11.0054 21.0689 ] pdfxs
(v) show
(ar)
[11.2286 8.47703 ] pdfxs
(i) show
(ab)
[11.9226 12.8148 ] pdfxs
(l) show
(es)
[11.0054 9.49331 ] pdfxs
-24.907 -163.386 m
(Threadscanrunc)
[16.8799 12.8148 8.47703 11.0054 11.9226 12.8148 17.7226 11.0054 11.9226 21.0689 8.47703 
12.8148 21.0689 11.0054 ] pdfxs
(o) show
(ncurren)
[12.8148 11.0054 12.8148 8.47703 8.47703 11.0054 12.8148 ] pdfxs
(tl) show
(y)
[19.6808 ] pdfxs
(\(o) show
(nmu)
[21.0689 19.681 12.8148 ] pdfxs
(lti) show
(processor\)orare)
[12.096 8.47703 13.0875 11.0054 11.0054 9.49331 9.49331 11.749 8.47703 17.8964 11.6995 
16.7311 11.2286 8.47703 19.2595 ] pdfxs
(ti) show
(me-s)
[19.681 11.0054 8.25388 9.49331 ] pdfxs
(li) show
(ced)
[11.0054 11.0054 12.8148 ] pdfxs
1 0 0 1 -24.907 -253.002 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
347.083333 280.666667 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 724.748 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 11.955 Tf
(3) show
1 0 0 1 -11.955 0 cm
1 0 0 1 -712.793 -33.049 cm
1 0 0 1 189.441 -20.659 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 29.748 Tf
(Cr)
[20.9129 11.0661 ] pdfxs
(eat) show
(i)
[7.61539 ] pdfxs
(n) show
(g)
[27.279 ] pdfxs
(th) show
(r)
[11.0661 ] pdfxs
(ead) show
(sinJ)
[23.4711 7.61539 27.5765 15.4391 ] pdfxs
(ava) show
1 0 0 1 -189.441 -37.858 cm
1 0 0 1 -9.96199 -13.045 cm
1 0 0 1 9.96199 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N26 24.787 Tf
(publi) show
(c)
[26.0262 ] pdfxs
(clas) show
(s)
[26.0262 ] pdfxs
(mythrea) show
(d)
[26.0262 ] pdfxs
(implement) show
(s)
[26.0262 ] pdfxs
(Runnabl) show
(e)
[26.0262 ] pdfxs
({) show
39.039 -31.881 m
(publi) show
(c)
[26.0262 ] pdfxs
(voi) show
(d)
[26.0262 ] pdfxs
(hi\() show
(\))
[26.0262 ] pdfxs
({) show
78.079 -63.761 m
(System.out.println\("hi"\);) show
39.039 -95.641 m
(}) show
39.039 -127.522 m
(publi) show
(c)
[26.0262 ] pdfxs
(voi) show
(d)
[26.0262 ] pdfxs
(run\() show
(\))
[26.0262 ] pdfxs
({) show
78.079 -159.402 m
(System.out.println\("hello"\);) show
39.039 -191.282 m
(}) show
0 -223.163 m
(}) show
0 -255.043 m
(mythrea) show
(d)
[26.0262 ] pdfxs
(t) show
(1=)
[26.0262 26.0262 ] pdfxs
(ne) show
(w)
[26.0262 ] pdfxs
(mythread\(\)) show
(;)
[26.0262 ] pdfxs
(/) show
(/)
[26.0262 ] pdfxs
(allocate) show
(sa)
[26.0262 26.0262 ] pdfxs
(thread) show
0 -286.923 m
(mythrea) show
(d)
[26.0262 ] pdfxs
(t) show
(2=)
[26.0262 26.0262 ] pdfxs
(ne) show
(w)
[26.0262 ] pdfxs
(mythread\(\)) show
(;)
[26.0262 ] pdfxs
(/) show
(/)
[26.0262 ] pdfxs
(allocate) show
(s)
[26.0262 ] pdfxs
(anothe) show
(r)
[26.0262 ] pdfxs
(thread) show
0 -318.804 m
(t1.run\(\)) show
(;)
[39.0394 ] pdfxs
(/) show
(/)
[26.0262 ] pdfxs
(start) show
(s)
[26.0262 ] pdfxs
(firs) show
(t)
[26.0262 ] pdfxs
(thread) show
0 -350.684 m
(t2.run\(\)) show
(;)
[39.0394 ] pdfxs
(/) show
(/)
[26.0262 ] pdfxs
(start) show
(s)
[26.0262 ] pdfxs
(secon) show
(d)
[26.0262 ] pdfxs
(thread) show
0 -382.564 m
(t1.hi\(\);) show
1 0 0 1 0 -431.239 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
49.583333 280.666667 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 724.748 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 11.955 Tf
(4) show
1 0 0 1 -11.955 0 cm
1 0 0 1 -712.793 -33.049 cm
1 0 0 1 197.622 -20.659 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 29.748 Tf
(T)
[21.8053 ] pdfxs
(h) show
(r)
[11.0661 ] pdfxs
(ea) show
(ds)
[27.636 12.5536 ] pdfxs
(ynch) show
(r)
[11.0661 ] pdfxs
(on) show
(iz)
[7.61539 14.16 ] pdfxs
(at) show
(i)
[7.61539 ] pdfxs
(on) show
1 0 0 1 -197.622 -37.858 cm
1 0 0 1 0 -67.745 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 24.787 Tf
(P) show
(r)
[8.47703 ] pdfxs
(o) show
(b)
[12.8148 ] pdfxs
(l) show
(em-)
[11.0054 19.681 8.25388 ] pdfxs
(1) show
(:) show
1 0 0 1 0 -63.761 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(Thread-1does:X=X+)
[16.8799 12.8148 8.47703 11.0054 11.9226 12.8148 8.25388 20.6228 12.8148 13.0875 11.0054 
9.49331 17.921 24.7872 27.5383 24.7872 27.5383 ] pdfxs
(1) show
(;) show
1 0 0 1 -24.907 -59.776 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(Thread-2does:X=X+)
[16.8799 12.8148 8.47703 11.0054 11.9226 12.8148 8.25388 20.6228 12.8148 13.0875 11.0054 
9.49331 17.921 24.7872 27.5383 24.7872 27.5383 ] pdfxs
(2) show
(;) show
1 0 0 1 -24.907 -59.775 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(R) show
(esu)
[11.0054 9.49331 12.8148 ] pdfxs
(l) show
(tsh)
[17.2268 9.49331 12.8148 ] pdfxs
(o) show
(u)
[12.8148 ] pdfxs
(l) show
(dbe+)
[21.0441 13.5089 19.2595 19.2843 ] pdfxs
(3) show
(,n)
[15.1448 12.8148 ] pdfxs
(o) show
(t+1or+)
[17.202 19.2843 20.6723 11.6995 16.7311 19.2843 ] pdfxs
(2) show
(.) show
-24.907 -63.761 m
(Need)
[17.549 11.0054 11.0054 21.0937 ] pdfxs
(t) show
(opre)
[20.6723 12.1208 8.47703 11.0054 ] pdfxs
(v) show
(entc)
[11.0054 12.8148 17.202 11.0054 ] pdfxs
(o) show
(ncurrentaccess)
[12.8148 11.0054 12.8148 8.47703 8.47703 11.0054 12.8148 17.202 11.9226 11.0054 11.0054 
11.0054 9.49331 17.7969 ] pdfxs
(t) show
(osameda)
[20.6723 9.49331 11.9226 19.681 19.2843 12.8148 11.9226 ] pdfxs
(t) show
(a:mu)
[11.9226 17.8714 19.681 12.8148 ] pdfxs
(t) show
(uale)
[12.8148 11.9226 14.1781 11.0054 ] pdfxs
(x) show
(c)
[11.0054 ] pdfxs
(l) show
(us)
[12.8148 9.49331 ] pdfxs
(io) show
(n) show
-24.907 -95.641 m
(s)
[9.49331 ] pdfxs
(y) show
(nchr)
[12.8148 11.0054 12.8148 8.47703 ] pdfxs
(o) show
(n)
[12.8148 ] pdfxs
(i) show
(za)
[10.7823 11.9226 ] pdfxs
(tio) show
(n) show
1 0 0 1 -24.907 -193.227 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
347.083333 0.000000 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 724.748 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 11.955 Tf
(5) show
1 0 0 1 -11.955 0 cm
1 0 0 1 -712.793 -33.049 cm
1 0 0 1 187.19 -20.659 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 29.748 Tf
(M)
[29.0934 ] pdfxs
(utua) show
(l)
[18.5031 ] pdfxs
(exc) show
(l)
[7.61539 ] pdfxs
(u) show
(si)
[12.5536 7.61539 ] pdfxs
(o) show
(ninJ)
[27.5765 7.61539 27.6063 15.4391 ] pdfxs
(ava) show
1 0 0 1 -187.19 -37.858 cm
1 0 0 1 -9.96199 -69.738 cm
1 0 0 1 9.96199 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N26 24.787 Tf
(publi) show
(c)
[26.0262 ] pdfxs
(clas) show
(s)
[26.0262 ] pdfxs
(exampl) show
(e)
[26.0262 ] pdfxs
({) show
39.039 -31.88 m
(in) show
(t)
[26.0262 ] pdfxs
(value;) show
39.039 -95.641 m
(publi) show
(c)
[26.0262 ] pdfxs
(synchronize) show
(d)
[26.0262 ] pdfxs
(incremen) show
(t)
[26.0262 ] pdfxs
(\(in) show
(t)
[26.0262 ] pdfxs
(amount) show
(\))
[26.0262 ] pdfxs
({) show
78.079 -127.521 m
(valu) show
(e=)
[26.0262 26.0262 ] pdfxs
(valu) show
(e+)
[26.0262 26.0262 ] pdfxs
(amount;) show
39.039 -159.402 m
(}) show
0 -191.282 m
(}) show
0 -243.087 m
/N12 24.787 Tf
(The)
[16.8799 12.8148 11.0054 ] pdfxs
48.955 -243.087 m
/N37 24.787 Tf
(s)
[9.49331 ] pdfxs
(y) show
(nchr)
[12.8148 11.0054 12.8148 8.47703 ] pdfxs
(o) show
(n)
[12.8148 ] pdfxs
(i) show
(zed)
[10.7823 11.0054 12.8148 ] pdfxs
191.317 -243.087 m
/N12 24.787 Tf
(ke)
[11.4268 11.0054 ] pdfxs
(y) show
(word)
[16.2602 11.6995 8.47703 21.0689 ] pdfxs
(g) show
(uaran)
[12.8148 11.2286 8.47703 11.9226 12.8148 ] pdfxs
(t) show
(ees)
[11.0054 11.0054 17.7474 ] pdfxs
(t) show
(hat)
[12.8148 11.9226 17.202 ] pdfxs
(o) show
(n)
[12.8148 ] pdfxs
(l) show
(y)
[19.6808 ] pdfxs
(o) show
(neca)
[12.8148 19.2595 11.0054 11.9226 ] pdfxs
(l) show
(l)
[14.1781 ] pdfxs
(to) show
0 -274.968 m
/N37 24.787 Tf
(i) show
(ncremen)
[12.8148 11.0054 8.47703 11.0054 19.681 11.0054 12.8148 ] pdfxs
(t) show
111.749 -274.968 m
/N12 24.787 Tf
(i) show
(se)
[17.7722 11.0054 ] pdfxs
(x) show
(ecu)
[11.0054 11.0054 12.8148 ] pdfxs
(t) show
(edata)
[11.0054 21.0937 11.9226 17.202 20.1767 ] pdfxs
(ti) show
(me)
[19.681 11.0054 ] pdfxs
1 0 0 1 0 -374.546 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
49.583333 0.000000 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 724.748 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 11.955 Tf
(6) show
1 0 0 1 -11.955 0 cm
1 0 0 1 -712.793 -33.049 cm
1 0 0 1 161.655 -20.659 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 29.748 Tf
(More)
[29.0934 15.4393 11.0661 26.1188 ] pdfxs
(th) show
(r)
[11.0661 ] pdfxs
(ea) show
(ds)
[27.636 12.5536 ] pdfxs
(ynch) show
(r)
[11.0661 ] pdfxs
(on) show
(iz)
[7.61539 14.16 ] pdfxs
(at) show
(i)
[7.61539 ] pdfxs
(on) show
1 0 0 1 -161.655 -37.858 cm
1 0 0 1 0 -60.885 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 24.787 Tf
(P) show
(r)
[8.47703 ] pdfxs
(o) show
(b)
[12.8148 ] pdfxs
(l) show
(em-)
[11.0054 19.681 8.25388 ] pdfxs
(2) show
(:) show
1 0 0 1 0 -61.265 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(S)
[13.7816 ] pdfxs
(o) show
(me)
[19.681 11.0054 ] pdfxs
(ti) show
(mes)
[19.681 11.0054 17.7969 ] pdfxs
(t) show
(hreadsha)
[12.8148 8.47703 11.0054 11.9226 12.8148 17.7474 12.8148 11.9226 ] pdfxs
(v) show
(e)
[19.2595 ] pdfxs
(t) show
(owa)
[20.6476 16.2602 11.9226 ] pdfxs
(i) show
(tforeach)
[17.202 7.58481 11.6995 16.7311 11.0054 11.9226 11.0054 21.0689 ] pdfxs
(ot) show
(her)
[12.8148 11.0054 8.47703 ] pdfxs
1 0 0 1 -24.907 -57.905 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(Co) show
(nd)
[12.8148 12.8148 ] pdfxs
(itio) show
(ns)
[21.0441 9.49331 ] pdfxs
(y) show
(nchr)
[12.8148 11.0054 12.8148 8.47703 ] pdfxs
(o) show
(n)
[12.8148 ] pdfxs
(i) show
(za)
[10.7823 11.9226 ] pdfxs
(tio) show
(n) show
1 0 0 1 -24.907 -57.904 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(Suppor)
[13.7816 12.8148 12.8148 13.4593 11.7242 8.47703 ] pdfxs
(t) show
(ed)
[11.0054 21.0689 ] pdfxs
(i) show
(nJa)
[21.0689 11.6995 11.9226 ] pdfxs
(v) show
(aw)
[20.1519 16.9295 ] pdfxs
(it) show
(hwa)
[21.0937 16.2354 11.9226 ] pdfxs
(it/) show
(n)
[12.8148 ] pdfxs
(oti) show
(f)
[7.58481 ] pdfxs
(y/) show
(n)
[12.8148 ] pdfxs
(oti) show
(f)
[7.58481 ] pdfxs
(y) show
(A)
[16.5331 ] pdfxs
(ll) show
-24.907 -61.266 m
/N37 24.787 Tf
(wa)
[16.2602 11.9226 ] pdfxs
(it) show
28.179 -61.266 m
/N12 24.787 Tf
(b)
[12.8148 ] pdfxs
(l) show
(oc)
[13.0627 11.0054 ] pdfxs
(k) show
(s)
[17.7722 ] pdfxs
(\() show
(suspends\)a)
[9.49331 12.8148 9.49331 13.5089 11.0054 12.8148 12.8148 9.49331 17.8964 20.1767 ] pdfxs
(t) show
(hread)
[12.8148 8.47703 11.0054 11.9226 12.8148 ] pdfxs
-24.907 -109.832 m
/N37 24.787 Tf
(n)
[12.8148 ] pdfxs
(oti) show
(f)
[7.58481 ] pdfxs
(y) show
45.117 -109.832 m
/N12 24.787 Tf
(wakesup)
[16.2602 11.9226 11.402 11.0054 17.7722 12.8148 21.0689 ] pdfxs
(\() show
(resumes\))
[8.47703 11.0054 9.49331 12.8148 19.681 11.0054 9.49331 17.9212 ] pdfxs
(o) show
(neb)
[12.8148 19.2843 12.8148 ] pdfxs
(l) show
(ocked)
[13.0627 11.0054 11.4515 11.0054 21.0689 ] pdfxs
(t) show
(hread)
[12.8148 8.47703 11.0054 11.9226 12.8148 ] pdfxs
-24.907 -158.397 m
/N37 24.787 Tf
(n)
[12.8148 ] pdfxs
(oti) show
(f)
[7.58481 ] pdfxs
(y) show
(A)
[16.5331 ] pdfxs
(ll) show
73.149 -158.397 m
/N12 24.787 Tf
(wakesupa)
[16.2602 11.9226 11.402 11.0054 17.7722 12.8148 21.0689 11.9226 ] pdfxs
(l) show
(lb)
[14.1781 12.8148 ] pdfxs
(l) show
(ocked)
[13.0627 11.0054 11.4515 11.0054 21.0689 ] pdfxs
(t) show
(hreads)
[12.8148 8.47703 11.0054 11.9226 12.8148 9.49331 ] pdfxs
1 0 0 1 -24.907 -206.325 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
%%Page: (6,7,8,9,10,11) 2
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
347.083333 561.333333 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 724.748 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 11.955 Tf
(7) show
1 0 0 1 -11.955 0 cm
1 0 0 1 -712.793 -33.049 cm
1 0 0 1 184.351 -20.659 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 29.748 Tf
(E)
[19.0982 ] pdfxs
(xa) show
(m)
[25.7916 ] pdfxs
(p) show
(l)
[7.61539 ] pdfxs
(e) show
(:b)
[23.6199 17.5812 ] pdfxs
(ounde) show
(d)
[27.636 ] pdfxs
(bu) show
(\013)
[19.0982 ] pdfxs
(e) show
(r) show
1 0 0 1 -184.351 -37.858 cm
1 0 0 1 -9.96199 17.971 cm
1 0 0 1 9.96199 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N26 24.787 Tf
(publi) show
(c)
[26.0262 ] pdfxs
(clas) show
(s)
[26.0262 ] pdfxs
(BoundedBuffe) show
(r)
[26.0262 ] pdfxs
({) show
39.039 -31.88 m
(in) show
(t)
[26.0262 ] pdfxs
(buf[SIZE]) show
(,)
[26.0262 ] pdfxs
(count) show
(,)
[26.0262 ] pdfxs
(writepos) show
(,)
[26.0262 ] pdfxs
(readpo) show
(s=)
[26.0262 26.0262 ] pdfxs
(0) show
(;)
[26.0262 ] pdfxs
(/) show
(/)
[26.0262 ] pdfxs
(shared) show
39.039 -63.761 m
(publi) show
(c)
[26.0262 ] pdfxs
(synchronize) show
(d)
[26.0262 ] pdfxs
(voi) show
(d)
[26.0262 ] pdfxs
(put\(in) show
(t)
[26.0262 ] pdfxs
(x) show
(\))
[26.0262 ] pdfxs
({) show
78.079 -95.641 m
(whil) show
(e)
[26.0262 ] pdfxs
(\(coun) show
(t)
[26.0262 ] pdfxs
(=) show
(=)
[26.0262 ] pdfxs
(SIZE) show
(\))
[26.0262 ] pdfxs
(wait\(\)) show
(;)
[26.0262 ] pdfxs
(//bloc) show
(k)
[26.0262 ] pdfxs
(i) show
(f)
[26.0262 ] pdfxs
(buffe) show
(r)
[26.0262 ] pdfxs
(full) show
78.079 -127.521 m
(buf[writepos) show
(]=)
[26.0262 26.0262 ] pdfxs
(x) show
(;)
[26.0262 ] pdfxs
(count++;) show
78.079 -159.402 m
(writepo) show
(s=)
[26.0262 26.0262 ] pdfxs
(\(writepo) show
(s+)
[26.0262 26.0262 ] pdfxs
(1) show
(\))
[26.0262 ] pdfxs
(mo) show
(d)
[26.0262 ] pdfxs
(SIZE;) show
78.079 -191.282 m
(i) show
(f)
[26.0262 ] pdfxs
(\(coun) show
(t)
[26.0262 ] pdfxs
(=) show
(=)
[26.0262 ] pdfxs
(1) show
(\))
[26.0262 ] pdfxs
(notifyAll\(\);}) show
39.039 -223.162 m
(publi) show
(c)
[26.0262 ] pdfxs
(synchronize) show
(d)
[26.0262 ] pdfxs
(in) show
(t)
[26.0262 ] pdfxs
(get\() show
(\))
[26.0262 ] pdfxs
({) show
78.079 -255.043 m
(in) show
(t)
[26.0262 ] pdfxs
(x) show
(;)
[26.0262 ] pdfxs
(/) show
(/)
[26.0262 ] pdfxs
(local) show
78.079 -286.923 m
(whil) show
(e)
[26.0262 ] pdfxs
(\(coun) show
(t)
[26.0262 ] pdfxs
(=) show
(=)
[26.0262 ] pdfxs
(0) show
(\))
[26.0262 ] pdfxs
(wait\(\)) show
(;)
[26.0262 ] pdfxs
(//bloc) show
(k)
[26.0262 ] pdfxs
(i) show
(f)
[26.0262 ] pdfxs
(buffe) show
(r)
[26.0262 ] pdfxs
(empty) show
78.079 -318.803 m
(x=)
[26.0262 26.0262 ] pdfxs
(buf[readpos]) show
(;)
[26.0262 ] pdfxs
(count--;) show
78.079 -350.684 m
(readpo) show
(s=)
[26.0262 26.0262 ] pdfxs
(\(readpo) show
(s+)
[26.0262 26.0262 ] pdfxs
(1) show
(\))
[26.0262 ] pdfxs
(mo) show
(d)
[26.0262 ] pdfxs
(SIZE;) show
78.079 -382.564 m
(i) show
(f)
[26.0262 ] pdfxs
(\(coun) show
(t)
[26.0262 ] pdfxs
(=) show
(=)
[26.0262 ] pdfxs
(SIZE-1) show
(\))
[26.0262 ] pdfxs
(notifyAll\(\);) show
78.079 -414.444 m
(retur) show
(n)
[26.0262 ] pdfxs
(x;}) show
1 0 0 1 0 -462.255 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
49.583333 561.333333 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 724.748 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 11.955 Tf
(8) show
1 0 0 1 -11.955 0 cm
1 0 0 1 -712.793 -33.049 cm
1 0 0 1 168.506 -20.659 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 29.748 Tf
(R)
[20.9129 ] pdfxs
(e) show
(m)
[25.7916 ] pdfxs
(ot) show
(eM)
[26.1188 29.0934 ] pdfxs
(eth) show
(odI)
[17.2539 27.6063 9.84639 ] pdfxs
(nv) show
(o)
[17.2539 ] pdfxs
(cat) show
(i)
[7.61539 ] pdfxs
(on) show
1 0 0 1 -168.506 -37.858 cm
1 0 0 1 0 -67.745 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 24.787 Tf
(RM) show
(I)
[15.1448 ] pdfxs
(i) show
(stw)
[17.7722 8.25388 16.2354 ] pdfxs
(o) show
(-ways)
[8.25388 16.2602 11.2286 19.7056 9.49331 ] pdfxs
(y) show
(nchr)
[12.8148 11.0054 12.8148 8.47703 ] pdfxs
(o) show
(n)
[12.8148 ] pdfxs
(o) show
(usc)
[12.8148 17.7226 11.0054 ] pdfxs
(o) show
(mmun)
[19.681 19.681 12.8148 12.8148 ] pdfxs
(i) show
(ca)
[11.0054 11.9226 ] pdfxs
(tio) show
(n,much)
[12.8148 15.1696 19.681 12.8148 11.0054 21.0689 ] pdfxs
(li) show
(ke)
[11.4268 19.2843 ] pdfxs
(RPC) show
0 -49.813 m
(RM) show
(I)
[15.1448 ] pdfxs
(i) show
(n)
[12.8148 ] pdfxs
(vo) show
(kesame)
[11.4268 11.0054 17.7722 20.1767 19.681 11.0054 ] pdfxs
(t) show
(hod)
[12.8148 13.0875 21.0689 ] pdfxs
(o) show
(na)
[21.0689 20.1767 ] pdfxs
(\() show
(p)
[13.4841 ] pdfxs
(o) show
(ss)
[9.49331 9.49331 ] pdfxs
(i) show
(b)
[12.8148 ] pdfxs
(ly) show
(\)rem)
[17.9212 8.47703 11.0054 19.681 ] pdfxs
(ot) show
(e)
[19.2843 ] pdfxs
(o) show
(bjec)
[12.8148 6.61808 11.0054 11.0054 ] pdfxs
(t) show
0 -99.626 m
(In)
[6.89078 12.8148 ] pdfxs
(t) show
(e)
[11.0054 ] pdfxs
(g) show
(ra)
[8.47703 11.9226 ] pdfxs
(t) show
(esc)
[11.0054 17.7474 11.0054 ] pdfxs
(l) show
(ean)
[11.0054 11.9226 12.8148 ] pdfxs
(l) show
(y)
[19.7056 ] pdfxs
(i) show
(n)
[12.8148 ] pdfxs
(t) show
(oJa)
[20.6476 11.6995 11.9226 ] pdfxs
(v) show
(a's)
[11.9226 6.89078 17.7474 ] pdfxs
(o) show
(bjec)
[12.8148 6.61808 11.0054 11.0054 ] pdfxs
(t) show
(-or)
[8.25388 11.7242 8.47703 ] pdfxs
(i) show
(en)
[11.0054 12.8148 ] pdfxs
(t) show
(edmode)
[11.0054 21.0689 19.681 13.0875 12.8148 11.0054 ] pdfxs
(l) show
1 0 0 1 0 -376.539 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
347.083333 280.666667 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 724.748 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 11.955 Tf
(9) show
1 0 0 1 -11.955 0 cm
1 0 0 1 -712.793 -33.049 cm
1 0 0 1 298.965 -20.659 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 29.748 Tf
(E)
[19.0982 ] pdfxs
(xa) show
(m)
[25.7916 ] pdfxs
(p) show
(l)
[7.61539 ] pdfxs
(e) show
1 0 0 1 -298.965 -37.858 cm
1 0 0 1 -9.96199 -69.738 cm
1 0 0 1 9.96199 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N26 24.787 Tf
(publi) show
(c)
[26.0262 ] pdfxs
(interfac) show
(e)
[26.0262 ] pdfxs
(Hell) show
(o)
[26.0262 ] pdfxs
(extend) show
(s)
[26.0262 ] pdfxs
(Remot) show
(e)
[26.0262 ] pdfxs
({) show
39.039 -31.88 m
(Strin) show
(g)
[26.0262 ] pdfxs
(sayHello\(\);) show
0 -63.761 m
(}) show
0 -127.521 m
(publi) show
(c)
[26.0262 ] pdfxs
(clas) show
(s)
[26.0262 ] pdfxs
(HelloImp) show
(l)
[26.0262 ] pdfxs
(extend) show
(s)
[26.0262 ] pdfxs
(UnicastRemoteObject) show
390.392 -159.402 m
(implement) show
(s)
[26.0262 ] pdfxs
(Hell) show
(o)
[26.0262 ] pdfxs
({) show
39.039 -191.282 m
(publi) show
(c)
[26.0262 ] pdfxs
(Strin) show
(g)
[26.0262 ] pdfxs
(sayHello\() show
(\))
[26.0262 ] pdfxs
({) show
78.079 -223.162 m
(retur) show
(n)
[26.0262 ] pdfxs
("Hello) show
(w)
[26.0262 ] pdfxs
(World!;) show
39.039 -255.043 m
(}) show
1.52588e-05 -286.923 m
(}) show
1 0 0 1 0 -374.546 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
49.583333 280.666667 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 724.748 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 11.955 Tf
(10) show
1 0 0 1 -11.955 0 cm
1 0 0 1 -712.793 -33.049 cm
1 0 0 1 100.514 -20.659 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 29.748 Tf
(As)
[21.8053 12.5536 ] pdfxs
(ynch) show
(r)
[11.0661 ] pdfxs
(onou) show
(s)
[23.4711 ] pdfxs
(co) show
(mm)
[25.7916 25.7916 ] pdfxs
(un) show
(i)
[7.61539 ] pdfxs
(cat) show
(i)
[7.61539 ] pdfxs
(o) show
(ninJ)
[27.5765 7.61539 27.5765 15.4391 ] pdfxs
(ava) show
1 0 0 1 -100.514 -37.858 cm
1 0 0 1 0 -67.745 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 24.787 Tf
(C) show
(any)
[11.9226 21.0441 10.7575 ] pdfxs
(o) show
(udoas)
[21.0689 12.8148 20.6476 11.9226 9.49331 ] pdfxs
(y) show
(nchr)
[12.8148 11.0054 12.8148 8.47703 ] pdfxs
(o) show
(n)
[12.8148 ] pdfxs
(o) show
(usmessa)
[12.8148 17.7226 19.681 11.0054 9.49331 9.49331 11.9226 ] pdfxs
(g) show
(espass)
[11.0054 17.7969 12.8148 11.9226 9.49331 9.49331 ] pdfxs
(i) show
(ng)
[12.8148 20.6476 ] pdfxs
(i) show
(nJa)
[21.0689 11.6995 11.9226 ] pdfxs
(v) show
(a?)
[11.9226 11.6995 ] pdfxs
0 -49.813 m
(Yes:crea)
[14.451 11.0054 9.49331 17.921 11.0054 8.47703 11.0054 11.9226 ] pdfxs
(t) show
(eanew)
[19.2843 20.1767 12.8148 11.0054 25.2083 ] pdfxs
(t) show
(hread)
[12.8148 8.47703 11.0054 11.9226 21.0441 ] pdfxs
(t) show
(odo)
[20.6723 12.8148 20.6476 ] pdfxs
(t) show
(he)
[12.8148 19.2595 ] pdfxs
(RM) show
(Ifory)
[15.1448 7.58481 11.6995 16.7311 10.7575 ] pdfxs
(o) show
(uandwa)
[21.0689 11.9226 12.8148 21.0441 16.2354 11.9226 ] pdfxs
(i) show
(tfor)
[17.202 7.58481 11.6995 16.7311 ] pdfxs
(t) show
(he)
[12.8148 11.0054 ] pdfxs
0 -81.694 m
(resu)
[8.47703 11.0054 9.49331 12.8148 ] pdfxs
(lt) show
0 -131.507 m
(Aw)
[16.5331 16.9295 ] pdfxs
(k) show
(ward)
[16.2354 11.2286 8.47703 21.0689 ] pdfxs
(t) show
(opr)
[20.6476 12.1208 8.47703 ] pdfxs
(og) show
(ram,performance)
[8.47703 11.9226 19.681 15.1448 13.4841 11.0054 8.47703 7.58481 11.6995 8.47703 19.681 
11.9226 12.8148 11.0054 19.2843 ] pdfxs
(ov) show
(erhead)
[11.0054 8.47703 12.8148 11.0054 11.9226 12.8148 ] pdfxs
1 0 0 1 0 -376.539 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
347.083333 0.000000 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 724.748 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 11.955 Tf
(11) show
1 0 0 1 -11.955 0 cm
1 0 0 1 -712.793 -33.049 cm
1 0 0 1 238.084 -20.659 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 29.748 Tf
(Morei)
[29.0934 15.4393 11.0661 26.1188 7.61539 ] pdfxs
(nf) show
(orm)
[15.469 11.0661 25.7916 ] pdfxs
(at) show
(i)
[7.61539 ] pdfxs
(on) show
1 0 0 1 -238.084 -37.858 cm
1 0 0 1 0 -67.745 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 24.787 Tf
(Tu)
[14.7978 12.8148 ] pdfxs
(t) show
(or)
[11.6995 8.47703 ] pdfxs
(i) show
(a)
[11.9226 ] pdfxs
(l) show
(sab)
[17.6978 11.9226 13.4841 ] pdfxs
(o) show
(utmu)
[12.8148 17.1772 19.681 12.8148 ] pdfxs
(ltit) show
(hread)
[12.8148 8.47703 11.0054 11.9226 12.8148 ] pdfxs
(i) show
(ngand)
[12.8148 20.5732 11.9226 12.8148 20.9945 ] pdfxs
(RM) show
(Iarea)
[15.1201 11.2286 8.47703 19.2099 11.9226 ] pdfxs
(v) show
(a)
[11.9226 ] pdfxs
(il) show
(ab)
[11.9226 12.8148 ] pdfxs
(l) show
(eat)
[19.1851 11.9226 17.1772 ] pdfxs
(t) show
(hewebs)
[12.8148 19.2347 16.2354 11.0054 21.0441 9.49331 ] pdfxs
(it) show
(e) show
0 -31.881 m
(o) show
(f)
[15.8389 ] pdfxs
(t) show
(heprac)
[12.8148 19.2595 12.1208 8.47703 11.9226 11.0054 ] pdfxs
(ti) show
(cum:h)
[11.0054 12.8148 19.681 17.921 12.8148 ] pdfxs
(tt) show
(p:)
[12.8148 6.89078 ] pdfxs
(//) show
(www.cs.)
[16.9295 16.9295 16.9295 6.89078 11.0054 9.49331 6.89078 ] pdfxs
(v) show
(u.n)
[12.8148 6.89078 12.8148 ] pdfxs
(l/) show
(pp-cursus)
[12.8148 12.8148 8.25388 11.0054 12.8148 8.47703 9.49331 12.8148 9.49331 ] pdfxs
1 0 0 1 0 -376.539 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
49.583333 0.000000 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
showpage
PStoPSsaved restore
%%Trailer
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%EOF
