%!PS-Adobe-3.0
%%Title: (final.show.pdf)
%%Version: 1 2
%%Creator: (LaTeX with hyperref package extended by PPower4 V0.8.4)
%%CreationDate: (D:20021126093700)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 0 0 792 612
%%Pages: 2 0
%%DocumentProcessColors: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginProcSet: PStoPS 1 15
userdict begin
[/showpage/erasepage/copypage]{dup where{pop dup load
 type/operatortype eq{1 array cvx dup 0 3 index cvx put
 bind def}{pop}ifelse}{pop}ifelse}forall
[/letter/legal/executivepage/a4/a4small/b5/com10envelope
 /monarchenvelope/c5envelope/dlenvelope/lettersmall/note
 /folio/quarto/a5]{dup where{dup wcheck{exch{}put}
 {pop{}def}ifelse}{pop}ifelse}forall
/setpagedevice {pop}bind 1 index where{dup wcheck{3 1 roll put}
 {pop def}ifelse}{def}ifelse
/PStoPSmatrix matrix currentmatrix def
/PStoPSxform matrix def/PStoPSclip{clippath}def
/defaultmatrix{PStoPSmatrix exch PStoPSxform exch concatmatrix}bind def
/initmatrix{matrix defaultmatrix setmatrix}bind def
/initclip[{matrix currentmatrix PStoPSmatrix setmatrix
 [{currentpoint}stopped{$error/newerror false put{newpath}}
 {/newpath cvx 3 1 roll/moveto cvx 4 array astore cvx}ifelse]
 {[/newpath cvx{/moveto cvx}{/lineto cvx}
 {/curveto cvx}{/closepath cvx}pathforall]cvx exch pop}
 stopped{$error/errorname get/invalidaccess eq{cleartomark
 $error/newerror false put cvx exec}{stop}ifelse}if}bind aload pop
 /initclip dup load dup type dup/operatortype eq{pop exch pop}
 {dup/arraytype eq exch/packedarraytype eq or
  {dup xcheck{exch pop aload pop}{pop cvx}ifelse}
  {pop cvx}ifelse}ifelse
 {newpath PStoPSclip clip newpath exec setmatrix} bind aload pop]cvx def
/initgraphics{initmatrix newpath initclip 1 setlinewidth
 0 setlinecap 0 setlinejoin []0 setdash 0 setgray
 10 setmiterlimit}bind def
end
%%EndProcSet
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select ªLanguage Level 1º in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
userdict /pdf_svglb currentglobal put true setglobal
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource

userdict /pdf_svglb get setglobal
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 7
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 lt
{
c1x c1y r1 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 le
{
c2x c2y r2 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 5.0 15
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 6
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[userdict /pdf_svglb currentglobal put true setglobal
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end

userdict /pdf_svglb get setglobal
%%BeginResource: pdfasc.prc
%%Version: 4.0 2
%%Copyright: Copyright 1992-1997 Adobe Systems Incorporated. All Rights Reserved.
/AS {
9 dict begin
/shrink? xdd
/Pury xdd
/Purx xdd
/Plly xdd
/Pllx xdd
gsave newpath clippath pathbbox newpath grestore
/Dury xdd
/Durx xdd
/Dlly xdd
/Dllx xdd
Durx Dllx sub Dury Dlly sub
Pury Plly sub div exch Purx Pllx sub div
2 copy gt { exch } if pop
Durx Dllx add 2 div Dury Dlly add 2 div translate
shrink? { dup scale } { pop } ifelse
Purx Pllx add -2 div Pury Plly add -2 div translate
end
} [/shrink? /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
userdict /pdf_svglb currentglobal put true setglobal
%%BeginResource: font FLACQY+CMSS10
ct_CffDict begin
%!FontType1
16 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/version (1.0) def
/FullName (CMSS10) def
/FamilyName (Computer Modern) def
/Weight (Medium) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /FLACQY+CMSS10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -61 -250 999 759 } def
/XUID [6 5000803 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC9EBBC6A5E
2825687306A156DACC32FBF734087CDFC35B78DDA68032BCA38CA8E8A340AAA3
002A0E52D0B9162BC68AACFC0F14A1C933363A56EE460EB41CE8C2E9EDC509AB
9E0462B9F619AD944F133AF072E5FD1625902963260181189070C40FB0D49A96
50D86FB0AA90098027455AC2354A299FC7BFC34B4F1162E5E9A3EFD80D6240B6
9378BB4F6F9C33B910EC9F1BD993FE495082DE99B17DC2004DCFC96A80094813
38EFCEB41F999CFB14F3394E7885A595D2DEAD8C498E7556172FC5CC72DAAD4D
FF9148E63FCEAFA9821EFD36B7E57D34DF0198A3E50351EFEB35877FA44F29F0
5CB4E833ACB19B46CD40A68C39BE0DF31CFC561FCA2FD0295A2CF5BB3557311C
E0535BA48BB2CB1D7D006A555FB22A1D8801526FBDD862F1E112C592C162C37E
9B534CDBC1D007CA3012EE55FC95DABF0DC215CAA4BDA10EF837B823C948480C
756725DA73F37BBEF2286E1DD0F3BBCF6A56CFA2A3885A51361740D358219B6C
16BD3C2A57D514F416252BBB4E325714DCE742FF7FD9B51414A8F91A2321D5F4
6D83268E2963A5FB241587924425C6584B72D4F19FD3BB052DBE04591BA3D76B
4AE191CEC99F4A7E2DB65E7187165ADA477C844A00EBCD4310703C994197F65D
3C7DCA0E2957766A77EC17E4547EA714CD48C6D3C4CB0E6A957EEB2D3ACF59DF
B0F57ACC7E39EBAF309B5FA0FCDC528D15AEE703416A42286BBAFF7AB3E88E40
D99D53858BB93949D6D88ADFC7CA4437E67DD8A08D4211BC194ABAC49C6F9DDF
A86BD2728987C4305B022AEEDE2C07A7DDA043C39797DCFE8093745939496A2C
CD93AC8FC3AC9F45DFA1B09A693BE6565DC671147CB2BE428FE5155274DED39B
99996600B9DBCA605CAC37334A9CDED06429EEB03ECD1E89EA3800CE8D42E873
34A8D13F779C7941C139A6D0B5804E50F7CCBA2A6C65CA32E15A02783017755E
42ECE5A533E9ED5F4D07461AFB810841A31D4D8057B10DA0829FC402B806BC91
4E7BDF23B6E332DBC45255CB4A31E2E237C056B3858D8B348DCD6F91FE74ABD6
C6D0B42F37CBA4D03711B7A1F5DE4640D5BE67F081E09D0BAC2473EDF382F484
E40AE1FAF3063618907CA2DBCCDEF47F97094D11EE70DF611CE70C5AA4687575
6E8130B5894296A30C19FDCB37DEF27B6D8FCC4CAA421C4AF23A5ADD926E11A6
6E4A1F51D7E85FE0F8167E62C3662B61C59F2CA836E8C08FA189D77607758342
23415E09778F73820F99C32EE55A9CD41EF32225E0F35763BD5E7ABCC77B7AD2
1CDFFA0A7B0CE0F30046DC070FDD3DDF46A5EE81B9B5B71BDD0D9152D2F16AAE
4D4835DC63E1BC810F0F3B79C42B441C301CD88C978752A46D7F2BFEE446BAEA
F984B408BC8B6404401D7245398AC4E7D700ED54673F06779E41CC2E5BDC0AF1
C328EF0A8305E3E3CD0CA383483FBBABD48F37C2EEC5506C7CD866204D72E7EA
73C92F7B62541CE44413F2F670CE2ECF86CE7954D0372BFC8A1917BB35A3D01A
85F3FCBF3B458FEDF2F1228842A16A71E5C6AC5345BF0768534A86C1D50EA7BC
FF74363F0B2E532526F4F29009016B59D9A597DA67FD6E3635BB8AEC691721E3
BEA5B6E969DACDE8F6E68282E2022623B42CDE8CE40FA81E99471CB2754B8799
145E499A4102B02DE486DDBC3B311DA3026372375FA9ED73123E891F2CA1CCC2
4D2FC99D1B2E4E1EAB81ECB5A097F0F14ABF97B283579AA587967255D2DA55BF
C7685548202F18EAE88479020872BA364120B1E36D3B2A9C9C154F7F3112DF0F
AE45C8D3C310C66991BF73B90A5CBEB23905DAE76215522F5F1BB0CB55C1C6EA
F1821D45A92B407277A2CCA27F6EE01283AE02C588AEB87091740C1AD48AF3E7
EE702D3478BFFA2DAAEBB71736CE04DF6C2716B2FC474EEDAD8B559C601CCC12
F4DEFB71F58717A1599D5AA6D4A718657B7365AF8E097EDF67AD42DF6E385021
066A69F78E110D785EC7120AEFFA81C2956C317703E402AD61A586C914265625
9B99421C392663989984E81CB753A8787DC9EC62FB0CD8DDD7AD5DD91DA3E48E
CE503B0B123FDA1C7D1211E4A5D8BB4F4157071E26790EE3E36153CFD6E4E366
D44F860F2757A0F259EB47A848D40270D950DFB7AD032CB49C7EC8D2D3C3A6AC
7FD05B539A59271ECEE835DDF01B5D7473038B94E051DCC9C4460E3B94051626
AAE2EF85459466E90BF750249390D0F6BA9FAA165A4A0975EF931EAD0D0054C2
240E6FFDD9DE735E9A0DA0F9955850D603A78CE7836CDE34D3649C8C0E8C09D2
2F9B575067F14232C52B5D7EE78282C341BAEA4F87E0A5C69A07FBE50E7A8EFF
ACDC109887D31CEFF1007C707D9F8277CAFCF23BBDF4A7F6BA7236B119B35316
3AA03DB3A83E601E3C54B81CF42EB575C9A74E89355D231C2C0E68D2DDEF99B3
46C101909A878AC4FC16DAAC77B03B0706EE351B9940DA9216307A5E5C132A7A
03607FD2671A1CEC95D693C6AD6E4F3A3690C18941D5CF562A53CDD6CA5C0109
2DD39B12389D612DADEA808B788ACDBF687A165DAA6307AEF32FEEEEDE470009
1D34D9EF6E4BF2C381C7533D50874D5D3C7C8C4EAB9FDB56DE29DB0080627C62
C68D2997C719AA91BF29237779ACE62699A848F57123108C7FA8C00204431FAD
701B30E6AF435F6CA038AEB8BC875E8CE21C182A24937BFD9C71D49F680F5C64
5A22D4811BBFCC5B507A4932A5778EF6461CE9A6A892C472A53BF4DFFDDBE78F
C8AB080C75AA3725F711575A851C0AD8C26EC1348120771DAF6823BD27511073
B170C92154254AEB7EF39FE3E8A4776C9AF412BB0BCA54B8FA555E8971DE127F
5EB5ED606127F62924923058793FADE640B9D5BA7D8B169ECC277DAC03B49789
3A0626536C919B148B07A5A86DC245FC7776C917AFA83A1C45B80D3F496C162C
B3F77F7DF900891CFDCBD6C204C2992212D22BAA264EBF9B025FEB905B7257DB
F6C0FBE399291F14C3E8B1CDA28DBAF92FA8B49617C9769B98BAC866381333C7
3E80DDA6458BCBBA2DA86B881CFC1DFC5DE427F763F1D86DF5B100205409B2AB
5ADC9577E59C6222DFBBEF0918D28CE5B3F75DA2BF9470B451B44FCB71F1A4A7
4F1E839CEA8D547F8EA2467194F44FDB570F9C1C5383F01CB7CCD01BC613EAB5
81B119DD0C2C2A22569D1E7E63093D13AB8A4213D818BF7F3CD6EBBB0E3CB8B7
A684C8382BB79436BCB7A60AF0A498B0F02DD09A3BBAB8002A94D8DAC91D6663
4C5C69F2ED6819A6836AA2697B6A239A9971C750D969EAD5B740D78BEA206329
4EBAA8729C8061CC904D2321A2B5E620BB442D0984109C6B1F59FD482909BFDB
2F56542370A29F9700B437411D4BCC993A35D33E94AC487D66790A9126AF7639
3BE8219C2F763997F4EA336E5ABFBFCC753E0B9FFA9132FDCC5BCBC90CBED0C2
C277D02F13EC4B4E7C50C514EDE4A2F7FA28F3238A8696FE377D4EF8E69A3B22
48ED971907E2CF76A8847A1BCDF6C9EB64271593EABAFA40C187F997555E2778
DFA2DF5D8DF3DAB3202E0269D5F9A3AFA39D3426731A4E62197518167591F22C
DD88BB689294F0E503626D9A9DD0AB3E5D7BFD84EE0DDCF3818FC85596A0142D
A545D7958A904002BA22C2CE3DF5103EA9B2B18E53BFB4BEFDB094BD02ED379F
8346E8158FEC92BDBB7E51EEA26885B8EDA0308CA3982CF15C5208411E46E157
7EFDDAF7933D11E20E4F674279D3AC2A967D89887220E9BF69659E9DEE7ED4CE
34BA309CC1EECEF6E3F874F0F9BBCDC59680F08DC78E4E4F350C13FFEB6319B6
42E6D4ED645711BA7E505B15B5C8DCB33B559C3AF7166A603A97A27F0A5DDAC7
54FEDEE2C350BCEF4C45E2D5F5ED8CE1C0B7E9E85361824DC82118FEE9A34E04
AD38C1B1346CFFACC11F20D6E340DA717CFA24AF956C0E5EC4D5E1207FAF83C2
CB333A8BCA6D9A325A33F36506D3FC0E0DFF753B4084EFD338A74541E118D1FD
FAC4A60E532EDED33A008476DDC2C0972200A3FAB539516AE5474788EC55F8E5
96DC243ECB35FEB4272924083507573D80028D08C8450BC02F9B3DFBEA4ECA1C
8DE8FC6726434CFE87CC50F513EE33A6D81B805B13C8BA6E3A87D19EABFA7BE0
206775EF499596B5E4D9890D3FBA3804820614EC50B810B4CA04E311CC54D5F4
DFB296274A923C5759AD812AE2B32CF46E4831C1E00D0C406EA46A095EA1DDEC
498BAF8535B4A5D9FAF0EF7F52164993191B599DB0897F91557687FF42CC8C72
9244BC891D9A52701AFD67EF8ED72FDFBA36A71D0BA8502DDB203628E7CED84C
088FFD1D0F870ED8AAB322BBB29A5ECF7577BD6E959C0EBD89F33CC8D0FD3B4E
483C144B305A07EE1A4929A861837F3330380E749E93FB7F62C925AAA6D41E3E
5516E6FDB45B953B9E9A9126F1160709A9ABAC85930EEED3BB053FF55B3D0781
08D136BD5F090DBD4E86882A5E9C669B56C766ACB69A302431C199B0C0DD4545
B41A7EB9FD264229C305FA35BFE13AD41F3FD86780FADBD1428CCC53846F03FD
3D968213E6FA7E6E43D3304AB5525D6DA3A95C074A3E0491BD1344C8233256CB
AAFDA9EB1632D9B6683FD2B64C653009E60B77ADC5C67B02DB922D856FB4A814
38FDA77B6CE18A575165D05E5A7F2A06E1AB6EF0068DA531CF16AE0F37D64738
2E90E9F6022FD8AAC863C70AF9110B4B49B3C58D298941C4C9B5A15A35E34157
79931AE3BABAC604EFF147946B66BB3610323CF93CE828E26D335FD89F5BECE4
27B3C95FB647655A01CA29800A7C4FD0E6D21F40EAD26385DBFC823853500787
A9A5BA186B93B8D17D7900F92C2BC5383CDB19BE4DB753BB334C92C38AC7DB18
59989EDBB64C32F0CEDB46E612442DB3E1529343A5CB4436C9A1B834CFA84CC8
58A8848B77C38BCE50DAE64F7D3B0E727A897EA4944F164E8A9E4CE48F9E91F8
72EE36FFE9D59F330CC7C87CA55641F9759607DBEABA297E6D6022DCECFD867E
20F43FDBF193C504E4CED169C4447EC1A85595D52DE54EE35FE637C479670861
9F32CB69A1E3370EB7048C6BEF492D8006A2F96C5A8B3FF7CDDA5135733C29C0
A84A4D32A7046CBA796EAF624DE8766B8F99BD5CD826C6858EF56060A4AAA93F
4A0E463AC3767D54F5AFCFBCF0785205C44A280C9D1112208CF00FC774FCAC23
44AE9E10BCD234359E8B6056630DAFC817E670D744FD2478B3B12AF110FEFF5E
A16A1FAD69F42BB427B5BB1DADFE980CA7F9D7DC9B94C2B2541E12B017FDD539
824D6AAC9C799DA96C7C5ECA0DA03F6891A5B0082ABB904E1EFFA850E56B3AE7
1778C2AFE30A02366FF50B3D57EC27869267DA8BCF3C45A8FD1E10286DD32E9E
2368CF71C63C4AF6CBF37492E028508C48E45098602B7EFE26E2DF91EA9A3601
1E24F720AD45B84E7FE152D2479B28CF0B672F6CE9CD0BF14394895108873DFC
18FAFF895499B426F62ADCF2F832A202D6264D6342B8C269248E2DF29CE64F11
B463BAF09EFA1AC354B9567323C3FB0957B53223E2824F5EA5E15DCDADDDDF28
AE4A1DA0327D92B2D06909FB810566BAA945B658D3092606D569F3DAF4155451
EEDB1E9E09845D0B82B337747F52226264CDE814707DBEC11D059560081DB843
0EFB12762CD57D613325BFA8100599E49D90962D6BBFEEB0791AFF89E7A8FF3B
7FB5304780F5E2D31E5EC5A3308FFCA43CD2639F3BAEEF2D5FC248D5E2DA0A03
4A078EA36897E61D08F325762EF175C20BE0A989175B17B3CBD174420B535E43
F7B05BAA020823585C665C3AECBBC0F259C0ADCE7335E78DFBB6A7BDC9B36205
5EBE3CF367B57E6CA432F18FE8629EF60BE0E3629EB31EA2480D342EFA986E5E
B0F3BEFB1680C3B3FC0378A7115D69CFC9B198E973DCDFBDF5290B02877456FE
47E868E1A5BEB71752324522454583B4F9A587A4B2B342C944810B03E42882ED
E519981905AC9BE3EC9F50670443B3699B92B207BD919137AB90C4AE38DEFD56
A3B5DC177CE2171640BF1AAB98F5DC7E0EAD7A9324FAB6535641187629CFFD2B
D9A5C653F090634EF30D9B2368AA2D833EA80AFFD6DFD540411C6341389E1935
F1CB3E319381293852D0BD086C29EF2C2EB0FCEC48EA5B37781808FBF87D14AB
2C321B613AA0055D77B385A7BCBAA07B118B3C9EED4CAE25CD51BD793215190C
5F574B4F915BEA14CE27C1738A4DDD34BBA4DC4C7E2EFB4C3F35012F11CC271A
F56A1CA98FA0B62FB9E661BB89430FB6A85CD0F6F68C2F61D361DC589D8F5839
6B23845D63B14DFE1DA4EE8276EDAA850AA35F34DA9D7AFACE249C857A938BC1
AF106149582ACD3B02916CE73507CBC61484C78B82350DD09FECEF80A2201082
F11B3F97EA9F7C60632F358749B831EAA92504E8066BD9D3332C99B972CB7D30
304899FF3021CF0753B3C48229076EF002D118F40F5CF4F29A8A435F196E7296
C6B119D7A502BEB86C380BA00852B59A0039BC217CD155285B476B58630E206A
F6A8AD20E9204E15B4CA8DF4467B8599FEE62274996E55E64040CD47E3ABB495
0B64799E0E75A258A842DBBA770A33E3F2786746E4A858A2C7175A494DF3784E
A2D603A5D3297653351DDE14B8C989B05A81094A667E14D27CC56169624DFF50
5805C920DB706A6D7A5192FB20EFCB952F1F79EDBE3E56786B85074F5D2D6DAB
ED718976C6B20D64E9CB826089CA08358B495B274F440233BDB5E4A92B3C212E
667CA1CEAFDCEC3319AD9E1B1BF0A41BF0ABF75615BD7827504300C56BA55F00
635B77B7365512AB29B39DBB04B5B1006D1301A1BB3BF881F0C7D43739099D05
587CCD3532A6CD805E90686DB0734C2FE2C8CD8A56F8BDAF005D36B83B093F10
161E071368089747BE7E8B6BDCC0597B5D3E76A310FD970B89B89E59B320C160
A4ADEB916BC88CEBA7343E7A78C64EF37B033A2E4FE690EF5FE356CAA4E8D21B
00A50121FB4C6F8FDE31A5F9BCC6CF54F8CB56D7B2744E9C3D1B2E23DD28F950
E209CDA3A5EAAEB6430034BE597BFA99D949380306CDF58495DC4DAD2428B20C
22832EFE79291D7C1DDA7617E815B40E80528A8B42A2B670796EEB74D21824F7
E8C5D99A875DD93341AB00559D26CA110AAD7656CA543FA77D38ACE0BD039185
97FD8B7586DF7E735C66756833B83B0527F4A7C189DC61092FFD2BA0273CB208
9F63E2FA3180E49A5FA591694075BFC1AEA9875AA8CFF2CE9532C4FF4C4B6E4F
8ADC1DF064E2795B79F8A63D048CE81C9CF8CF366B215B981DB055FAD1D444DA
A0487A9E019389765CC7F128A776C58C6A9D74929CFD47772780E458E0DF9002
95A112BD122BF228F520E1DDC3E526BB3F1E38574AAE8538105B57119C714707
D3FFF5732668C617359464C586B2024DB072E05ED09588E281794C46CBEF5504
8252FDFB95D9546277740DFB2134460415C495B81873ED60CED8CD5F98488B00
EC42ADC0242ED409BC761C5DF748CBF5CFBA9E57DC074DF8ABF658B118E4D532
20BE1B60BF112DB488E97365BEA2DD154074251B692EAF10F5D398CFCA183B1E
0079ACC03D41602091F8DE75E989F0FC0F7E0AD9DCF2C9A831C76D734F6D053D
2F5E3E41A854EBAD01D0A33D2ADB082286DA5BB0CAB543BF7D873DE4FB7DD9C1
17BCDC6A6EEC3089DABD77C6F569D787DDC27354982F3CC4F0D8683A7F703E27
058C777E2CF01122515DBFAF8D20C8DA86DE78FDB36956754E1251A1C1D580EB
9774900180E7EEEB78015A4E27DEBCD241F4D908055AC24E00CA67159A1F0520
E3D4F2F60F69D0B7308D5AE24762CBCC40D55B95FC95B2E720D8F12BED3E0DA0
029A2465E8F8302E3A811F91B49BB5744C35E04D221154CE453E197A523BAEA9
40F859D1F50DD571142ADCA82C11E5A12F88FAB10903BFF6CFD65DA6FEEF3266
934B3E58076284276B2FE0C02BA8BA27981D30E60F7F297A8931B147D2BC94B4
A5AE820A8C37BE07193D79A9DBED19F17E1C3FD9A4F22CA8BEAE231D0BE1F843
A7DE4AF8F5FD7B91CD47867DA4A085D058CE3E2AE6BB419B2E1F01143F31E448
DA641568FAF7A948CB886FB1AAD1B1FA155C711C873B40F1FBFD8D1B2ED59C87
EF533C481D7A02789CC2ED12533A8FE63DDC9F0698C2649DDFAFEA99F4BCF6E2
9F1E36C8683AB5F653F08BFAF84C590811C588170829257F4A3743A5FEE26FE4
C660460C99008ED08DEB130D02F2B53BB332E6AE7A9F8933989D0D79C2B3709B
86919A2986C45C685B0B754BE67468C6869EE82C3738FB9BFC45704D68FCA026
1D21DBD514D69970ACA662735508FC469DAD3F39BDECDF9D11D2827B2B1FCAA2
6EE64B8F818264962DC0BC2E30A74A76E5963CE87FCD4CD43662E8D55ED99CB8
AFCD9967ABB7260E19AEEBDD159AB91C8D3B7D8090CBAF5B07716438267E6C73
4B8403E811B103C171BA804A00CAB3AC6CC91269BDEAE3CA51252A301AD693E2
877EC19F2A345898F269E694B34672C055D0D8A35DF248C2EF012A798F01CA57
C5E25821D36D31E89DA0811D6AF09F6D8090C00A3BBB4F77946A7FF023F339C6
D2B811EBE1CB0F5453C4D2C285439F42FC765906F8D7CCBF39289787A941E2D9
69149A6B01A2C861DF1598B29B92103BA541C67D6E4C7C43BAC3AC7A35E2F85B
8AD7B54DCE27C23A92DEC396DE7166DECA45F0372C3A9BC87EB8C2E274E5CC65
B5C23964A5FB3C95A63528B683E17F8A183061DE67B0D467932E2EDDA833A9C0
666EE7892FE861F74E98F3C3C1C02DAF354DD4EDF0FC372C1ADD0304E598A8F9
194F5BFD6770C474725885AC1D8A2B60B5A038A676CC7F4B8EF3632369D85E64
1F09D2BAD634EBA8B0BE520ABF26D849430B38D6ABA1A90405A6A2922F62766E
78C26244797F759C30712525D3E437D35DA9B7E5914D34BA938E6F63430BE33D
36DEF4B99C65C686FB0C46E3CD19FA0ED9448DB0E9CEF3DC81D35571DACE2883
BC06099CCAFBB3970AB263FC190FF21A387CE323ADCCB0B8B90C29D15B3117D4
7C5E54D2C5C34EFAA3D06DCDF0C4B2D26406158A857F303E6A6F27E44FA7B393
3DF9C60DD6D00E6FF8BF7731F2F84D469057AE766B0AFD552906AED57808425C
433C9312A4FFAEB16B495C4875BECB6CC2B15209CDD00D2E97D2703D35A52B4F
30D488E32C4EC6E1F9792C5F5F52977D3B6A2686E7D9F36D9525BC48EF96603A
3AB031CA2EBC94FEDE05434E28B2236591D515E476772935A27DAE602F4097BD
AD12383D4518EF1644ACFDBAAD7293F4C931654ED87F2C0C790A394BCE781EF5
C0BBEB55D12D1A39398C67609337AEF5EBDBB094D6D968D2E68C9670A5D8DF3E
0139E1237277415D40B69B75FBA31891E753B2477530519689D9E7FBF90D26B3
483B8D2E4577339DF34175F27AD0D34E9A9CED5B4C5CE2AF5772CE78E7CD2BB3
A9D57004B370FB54326BC98F9EFF22BFF99ADF37A49C486FE5DE76E826E30C2F
DFAB54D9237D7722DD29859A3FCC596215CCA507362B77A121286E187523AA85
A6017AB726DCFC20AE81697C7BFBAE20649D751F6137AC667278E6647DB4E20C
DF566DE2489A23E9E06AA81FBCA981A37E14CAD06A210C00CB253CA9392F7C0A
B3D76316224FEAD22F6DDBE8CDCCB03D65BC4D00598F689416D35E57819905DE
A4D8DAF56A0CC12B0C109FEE5AFF1DAE4A66679D1BA3FD005EEBE427AA5A992F
441CE08D66A8152D62E7B8DF3C1B2C033047FE48C543070C7AD15064228A1A98
C90295E121E9DA22AE952D79B54985B766FFD4A84167E77B705A79144855A8FD
47B2666104AB5BA1CC697BDB39DE95ECA746A7C7F29653F16954D686F3FA08DD
F338227F9E3C177BE0794EEFEBC26A26D5ED6DA0EDEDCECB48ACCA948E342C0E
053B2C7B37EF80FCFF6E616B97F2074908E212E5ACE1365BABB13A90FD8CA9E4
624209442F9B1CC0EB6220D7CAC6321416773C4E8734E8D55E1B7189F05F8099
F198DC0DE077173DB29287FEB7A37423E138F9F4EB66F5925750723FB35311FB
DE461C9E46F7B2261ACEF001E3B3DD712DD88649F412AF07D93E42CDBC001DE4
69BEDACCF72AC5602B493396F5B2AEDAE8DB2E081E94EF35E67FD92D1C751C71
36281724949AEFFC605D8054BA4BD3D9B71427012FD2E5B20105A87035893286
4DAC95014FC97498D8A61101841B42536318C07C04DEE24E1FA39D5E79E350FA
7EAFC1F6B9FCCE49D3365D25FBEE955657097FA1DBFDBF75E25A66E67A5BE4C6
BA115413C2B6C2D32FF9FF9243BD8D0BB1E0703CA1D2EB98B86399B4A1BEF38B
5535A71427006B724AEAB8951EFE67EB2657FCA4AB47E0CC3B036253EF2B6379
7FCAC1180AEFFD6409523EB4AD0DEFC292582DFA85507E09C63530D970E64D5A
CEECFC066497A9985839D1919D3F2086BB6DCDA2D0A67DC46A6CC6C1C87AFBFD
517D1EFC31567DA879E7449942F26E2491D26BE9FB4DE74B46B4E8A885A24680
10B0A5E794A034E6CBFCD0197C0C625F81D9B603653287754EECE7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/FLACQY+CMSS10 findfont /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 32 /.notdef put
pop
end
%%EndResource

userdict /pdf_svglb get setglobal
[/N12/FLACQY+CMSS10 -1 TZG
userdict /pdf_svglb currentglobal put true setglobal
%%BeginResource: font DGNAVI+CMSSBX10
ct_CffDict begin
%!FontType1
16 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/version (1.0) def
/FullName (CMSSBX10) def
/FamilyName (Computer Modern) def
/Weight (Bold) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /DGNAVI+CMSSBX10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -71 -250 1099 780 } def
/XUID [6 5000806 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC9EBBC6A5E
2825687306A156DACC32FBF734087CDFC35B78DDA68032BCA38CA8E8A340AAA3
002A0E52D0B9162BC68AACFC0F14A1C933363A56EE460EB41CE8C2E9EDC509AB
9E0462B9F619AD944F133AF072E5FD1625902963260181189070C40FB0D49A96
50D86FB0AA90098027455AC2354A299FC7BFC34B4F1162E5E9A3EFD80D6240B6
9378BB4F6F9C33B910EC9F1BD993FE495082DE988F781BCD03C5C7911B98110A
514CEDD73AE798E5943E714D297787A9209C025AA01954696EE0AB349F8D2893
D04F78B33AFDA344264342300362A9C58BB0A9ED047E968214CC7E00D26A65A3
D5014D49BFF8A41133BD86E4FE4314E344F424FFBEB3EB212B7A2CDF89F131AD
4F31E5FF387C2C9F5A249EE843D8F507363BBF5D9A10A0E5AE50F9BA2E5390B1
943DE962520472AE46C970F79C4C1D915E6817082B1EE9309D9424186A33B5BB
6885ADCF5D850A5B58242E26D8798EB8B7D63EACA4C893BCA576131101179DBE
2D8023053A8AEC2DA49E4FAB38391FA009E0186D5A1F8EE7210635EEE5F17F56
AE0B3E4C7D1CE1E9F1C9572D0438302D1B2689D552D7410C29BFD7E2DA63C5F5
1266A7F5FF201777FCD80DCB8264758A2D8CB66977E2E46C2EBFFA22BD010CDC
1E61C073EA894E5994DF76F3A6AAB0FFD5E2CA3DDD325E94C0F11F5B68F752DA
CD517FCBBFCE36AFFAC97C7B32ACF516AC91E2538ADF7D9774CD26813B6F0665
AE36334BC984B718DEB343BB108949058001CF444028F9EB5036CA75BAADEB5E
98CA3E9E29B9DD04170D810ED0FD636FF5C6C600CB3F8DB4F8C510D81B4E9C03
4DFD17D97A495AF340F3C75ED68605BCC57F9770097331DBD590F267450E0222
5B9299A1865FB00D4A5511D17EE3F382FECDB21656530C2A720578C083377032
AFFC1BD5E2F4CBFA001DCF107F7439B4B88E2FACA4CA6A77459E745035596B50
0A87E631177C4512EC65B8F163364EF26461F5AB1236EF88B00D39680A78F6A0
13E9090B92C7F8D55C02EB42BB2E1A078C05A92B23B0CA587757243EF2BFE6D0
DA554906C76D07718D84805DE5B9D937C62B5B65496A37155A92ACA5B90FED0F
41423BB7ECDE31303F139CEB06ADDBC7224BB26BBCA3F27A06923C9C4B378BBB
2012047F601AAE5DF30634906487360DA83DAA7BF09925CFC5ABFD2672CC6BB7
7590F12ABD9D7CE361F9ADE6B0A718CB5340C08E7FC7EFAF1C6A9BF7857E7F55
74A2080A431D264CB16B376502111FF320EBF19E7147307706F5FC00161A60A5
01A5DF7C18194A84B27C2934406AE2F51D7A3E1239A4E90119A04EEEE55EE082
77EB126A9C1B9D8999F47E06CF60DC5122CC5965A5AC4271CCB36C2AA6316E78
B9142314BAD6AF8B12973A803A94E3CE925AC7A13EB62DA0392D43531DE1D5CF
9EE5C1B71B129A42145EED2DFA807E5BA5E3115E0D437E5B97EA6924352E26FC
ADEB82CC7B4432DBF827B3E6B028ABD5C4C94718F64D493B39622A56AE961506
72E31A6504F42B3FB00C2E0D8AED15AF5306DDBE995D81CCBD91DE8DDEF26E55
80464E459778B8584075F1B28541483D1AFD00EFD44138D81BD67D629AABAD9D
1CA8A6F9515FC40B369D00EEB522A147D46849E0D304934EF2F7B2570D902C5F
FAA615277FE083052BD55A63BB3AD21C4B7AE1E6C864DBEA44458164F4BA644A
7FE98B12B0824C649202CDDC7BEAEF38C7E78AF3046B56E4B97CFD55DB5C1BC6
232E61C37ECA61F19A59CBC371C47F4DA45DCB24BAD6C42F327002E0BE13C4DE
3E808ECF3BF119B2FDDFDD807B50A9487D2FC8495BDF89F4FA68137651916321
CA5328FB01E18DF35B0A3E3F045D22CC4312CF8C805A27F736A03584C781DA34
8C1834942A82FFEAAC0B6887374E191E888B2D08F39166BA7F143C06C51C01B4
8BF7BB1A01A82BAAD129DF7ADE8F9C7EDE5F607DC24F6F6344569EB0A68A2EB3
A32042B4937B74D1391D82C3E2AC46DF28E819844A47B3C7062D1D2EAC5626D6
037A8C936320089D9D39759A526704D7B3A7BF8D89E2830D6E01060B2032BC38
62D01702FE52463EB16AAC157958C424B8025CB60CC5D586C35E16041C7CE5A4
D777529F99E9C2E12BC211DAA608988AE4D2CF8B392B024CBE24C018173D3389
80120C05A376B23AFD4C3F73D24732C3451E55277349F0C8578E7FE70B70E321
303C62F0F126C28040FF4FAF06A8D55F94657A4B4ED057398546F19760BBEB2C
F4ED938C9EC8944775CC3EBEF7C82E6B2429967D1411AC7678B334049DDCB355
8505B727B0F4374981F972FB491C2857057690542840698F7131010278F14E73
0BB47F5B5DA38ECD254890894664CE409AD52CAB6CC4CF80D09C1081A3DADC94
B384437EF03C7A62870784D2FC167861891B0FBE928843BDD0DE1078A3CF8461
F1C2413AB150471A1AD8C6B45D780BB6A0B32B6D04CAB754607F5A82153DD274
5DC97BA474E92C99918AF43B9A3586A0C28DEEB51946B661DA147D12F8516849
254D4B3925CE2D460720F75DD16625719F39B2C677BF86709B7FF6544695C676
0EDB58858040F892934FF5702761C917B54A75412DAAA6E9AB56778CCEC0971C
42D76F0CA751E06B9A840B88CC5E1E35B3470C5FC1C425F2D8D83F20CE566191
E5C5D26795F4A738DF6D38D9235415B5DA207BCA232C9AF6EDD9242670846008
A78D965E2FEB33440F2EB66FC22DC958876471E3A3121DA11E33DD8E66605C54
5BF98B7D17BD5DF3A9C23A67FB8DAE13903F304728BBDBCCEAED188E395803EC
389DB950BAF9410C17B789772E1AC310C51BAC7B04FD2EC4C651812F0E85E4FE
4F0DEA4A3FC258D38C742AAAE845F8E2AA964AD5AEC553AF81E3907A4CA3CB8E
A71765070736565DA6917B55F6E9D7B70658E4FD6739CF842B2E4DD9C60FC6B5
AC83B806B768841F84C607E960EDE23D0C39D1B67B2505D91616F39CE3A794BD
C4EB2740A8DF7E8F7B2E3F624941E0C977356C333196B5DEEAD5314C6D6E8A2B
CF0622D2E530E56D397BFBFDD2C21F2B2115B297D02D241E4410E78228254FA6
8BF7384451C05D8B20E5AD44CE483ADC5686AE3DE46E2C56189885755487A282
3C8184F63643BF59F654B28E042E859FA88C12F770D87A6242B0C4C2C39E4168
EF84AEEB5F4617E838EEA0D4FE46D5A267BC09B128AAAE3AF788EFF1CD6C6D78
B19539797E72974B828C9C1BE053AB10C7ED821AA567EA1DCF37722902E9C647
28F1783832161AA338897427275B2CB29CDAB7A67D81E9C516ED6A1D8133BD80
EDAF299670A7419D6E34ED05E8F0F5FD4FB06ABA1CB5FED18EA3556D0CE341B6
C773EB0EEAAD9D4017328ADFC95876B968E215FF642F34C7AF1CFB3376E65D54
7377CA2232D69145D69C3E89208FB24BA11075D5BE22D48A256A996CF87282A6
A6DFF71FB4C2A6FE1A64DC6BE743287EAFCB6D389ECDF1F0DB29482256E62B2A
7D697B6F67589E172E65B231E39990DC48F5D20266CF303AF76EE1224DEBA717
B1F34CFA3B7A23CECB7C74EC77DF7C02A87CAACCA12C84D73E95C3EBC009204B
66C951A0CC9FCA49A5013FC8CCC024A24B6E4E05ED80DB23511CD124D02260CA
449B367C45968B52EA6440ED3BA196CEA6F78C15CCDE42E6B4F234EB940675CA
90175207A9186CB1FD41BD4E3F6264F66E4C421E98F2CA1DEBC5A6BEE8495F2C
D2D57789E4DC21069D1E74C2D3AA2B184C032278AEED23BE1664B2B648F541BE
055DFC7198E3453F162BE0B73EFC18560FC150360CB7314238281490BA687CE7
04639381E48D05431A62656EA31F03B8E742889C4A0F1C75E5A2591F0C48D668
7BFE55F2A3C2370CA7E4BC3D775C9B89083811A6DA97447ABCA763BAB7D2C3C3
68FED64E86B20C13CD87F9BAE267952F5321EF935CA1825A10D02D124ABC837D
4692764B4D1D5DF6F195C961C6A1D105D01AF1B03B8C427C0B8B077EE2B552E9
C2EAF9E4EB743A73613A1F5F6419803F6B53B173B3BB3DB42E9B7D0D863E1376
38956F47EDF00595DDE1699421507D2DBB3247EFADE060C520EC3BA7D3B1B37F
D875DD40D75CA2431238C104227260D70A76B91F77B3467B46130DBD2A83FB56
FFFBE07D99A93ED05E5A8C96851784A7324D2FF1EFE460BC413A76764696E1D1
4F0E1464CBBF319E0D62781E32DB66154E267C43597F99E2582BACD4C7E05DA8
AE7D43175E5BDF43142543B2A67212638A34FA53B709B93B1FAC257A97B287F6
38105699F0B939DF4E0213BC12DB8A87BD11B191A5B6B966201B30D631D88149
33BA36EAF20D5E84B4F75612AEEC0FCA2985CB5A3B9A405591D59186E880950D
5671B42C212E44888DDF129730029B37B46D65F4672826DB8D151D7BDAC72B52
2BB934AF7C1304A004C2B02DE1BF7BB0551897A50245605FBAB4AF7C40348563
B4712C96251BC8B732374B8C96E31CCE4D207BDEEA3194EF4A373FD2BCA98476
DB00E0A5B1FB66C8135A4CFA8E9E6FBF7D7831E1D0D2E804FEB28876E7FFE71F
24550D0EE2DC3577E24547D7C383D13E78A9107568F617BA2D89E27ACF9DEDAF
E33643B1523E43F4AF50D8EBFB3A88F7F645D095F920ED95606D533901D238D7
FB6D72D3C927A3B94604F7EE032EE8DB78661EDD429D2493E519EE86126A06CB
AF0F5CFFEF0C5FC782FB9CB69884C0F95BF23932541095FC0CBACA8E25221948
D0A5C01A97816B38AB3640F82B69A5AEB88FC38D40709D2C6CE129E1627915BB
4053F846044C6FC69098237EE6234ED3047112CA2AEE92B1589EA002550AAB63
B50F69CA83F766ACB417859785B780B41A3982559F5F199C08FD6CF9F7CF7089
B44BCEFC1345422587A184F649650486ACB5AEAAF1AA24A6FC17CB6668401CCB
55DD801650A1D022B34BFFEDBEA968338527D5DF9FB90D10CD99C1376EBB8E69
00993AE196EDC45FE01508442B925CE84996964E588D20BE15C9321C34C537A4
F9B9C4D6F7F951FEF8A65A84043B72EA5103E5B6D561785B6E2AC9E8FDF0A79A
269A80130D9FC6366858303FF9F6A335063AF9EB856AD4025E91FC5BC4BF4743
8E1DEC7CBD7A55BB670FB751FE7158D71AE751D694122627696972D24A4CDD76
C6489837FFF0EC85695031E4905DB3825C171F025D27864DEA295771185F4E8B
1B57FEE88DFC8849E950BDF0B28C86D52547CF6FD63C585BF1DB87FAD34BF85A
4E75F5CC595DA66B94642E85B5B019BDBBE03F8BC360239FD99C9E22A11FED0E
B69CE84CB18EE6F5575667920527C7718A44F243207FBC32BA4BC8BC7EB0186F
93B2028992A4F5B01D38450902B40FB2F121ABF7854D8D13384042BD8DEB3733
44B42EB9EED7B333F7CB8CEE2A2CDACB57229B303E9E580383E3E2793D35827D
08895362A83695CE36942141D889B5136FF08870AB50C139293584D6E179919F
04D98E2DFA7FF8BA78163A4A0B7D347ED4E87FB6A93E366085E06DE9A2F20939
64A553FDF8C7E84F1BFA50398D61CF6E323B8DF145D1206EAD76070F3D8BC177
367D52993CD484D36A5E5084443312403C50D32DCA4E44A71155223F9D49F0C9
CA03CE656DB45801983FF6D8520AA83C2F19B618DFDE880A7B18D25209C27204
726D5AD91912D8F664F5B2FB5D96C67459ECB290A052309CA054A39FBA88A018
730B42F1F0EDD7178C40AFD63B4D2ADE5AA232F4E36088DACA50860B8E1E6E70
21C204B753FF6EFD22996E07D0D0A7162DC9944AA6A1D9FA720D02E3A6BC7594
DF5554192AA7F03185C79FEC7318450824C60E9C85AF30320E76F8E65763A584
6957F8B47009B0075FCCCF91289199BF51DC374DD6756DB4ED37DB8BE6C8FAB3
DD5725695679090B51093BF7225EC8E9D54A7195B1358EE0F582E342F55224F1
0CBA185E0AAC417101F808B77D580B1BD6EA42EFB609F95DC31294AC17507930
316B0FB53C6C75F98FF58AE6A1985B9D66124C17333CB268AD6E754B7FC1D1D1
C52993BF9556093B73544441807DE08ED5FCE2D2C0A218DE81B51A824E0D9C51
6611AADCD71B5EC828E05A65E17F7432F693E5333D3908140106773A5824ED80
07A449D4B94CD92BA6CAE83ADD301FB37902B3F45C684E3302B6CC6FC009BC61
DE2F1009BCE27DEA6CA62ECF31A47EB23C0C5ED13CB520F1F0CE6623EEDCA929
0C220B170972275AEEB4DF5E00DE471FB9A3E95E79AEEEDD1B42D6E0D2740A08
312B29DBA1C613B0A9D3A1689B3409F2B78B54FBFEDBC8E28AAF508C84AF556C
B659802AEA25AD2773B6DFA396DAD1561497C99D6E062AD8E8EF58895844D3E1
C4F42E78714CEB9FDD55A8DDEED765010D3963D32D24F02B1F2351B3D002AE88
F9FBC5BE991EF8EE2D8B53BE5068D66804B0A1022E221C89AC749E03AF704171
D87D4DEFA1FD49B1794A4F36BF325EBE00C45A5CB562AE6918DA5409045B326B
EA5337744E38FD4450A793FA5D2F69B07667A59A97665A52C33831506443ACF9
852C71EC95A3E7CB3F7473EE87FF67ED908BAF9B8B114657BDEEC4842568D7BA
5A008E1299196E4E759D71557476DA23853F58A1425DDA760956AE50B6C3896F
9465CE66413872E0025D5F9634749714D4C39C30BD9B08E7FE94B916A9EC4C1C
D59AF64423C6518F2114B467E4672CD4071A0E7D4153A964EACDF84AD81355EF
016B91463C412FEA629F7C1D73BB8069BD10484678E97E357FD1C6918F3BD16B
41EB3A0D6988518FB83222896AA24E67E588A1E07FDAD135858943242B562002
5DF037E3435C89B185903D0BAEE52D1F24837333AD4D1A11AEEB23BC77D345DF
C31CD163BFA8E68170D946834DC204327FCC23AF36F958385D4DDB4C73293744
B7985E8685CE0B53F2CC97F2E345B2A3BB93B648460D31C00F76A30859B6100B
217CB975A53D0D9C2573CA0D5EF050B5DD66AD2221E72866255468425D8E7FA6
3B4A1AEEAB043EED381581763DC428539BC8B48EF5DB787934AE7835A81D5363
F98167BDFE1F19B99DCC62C8BCBA6080C1AA5F945DFC7512FDF90B2B3C5F94B1
FCD6A63FB560EE1810F5CC283C1EB71DCE41F337D91DF1A5E71BD75EA2894CB4
33C006E38663E70748F72269D1DA92F5858F5E2FEFED12ACEFF94E79D87499F2
4ADB01922F9560ACD5B954446372CEED10D83401C8B280CE1ED88FA31A4FA20D
4DED0310F99974747B5C91A74B8E19AD2DC6ED8F3F14E83E32B31183B5675E93
D708B08665CC5B1D374B3D51872D8E40E53504BDAF997780A38C0C6DE0045AE0
13CC39B6C714D27B80DBAE01975E0F4027F9F0CEBE59DB6FCBD50C7E193A08AA
284BF3A0F9B51A626600BE88FEB4CEFBAE8EBE50E9B4BEC31C218273095C8971
232748B00CB74878A89F3FDFE88354DAB6A40EF8EB7801FCF2EEE5C98C2FD71E
7265495D2B45A62CAD10986A75FDF54187E3D723D341222B6715483D5E29F61B
A79B265DC70E7A2E458B0A6EE3E8ABC60684AD8067768ED4966260CB96739109
E4C7636D947853AA87F2B8DA2B9EDF441B143AFA517E54F7283D1C1537A5A151
326F519D2C15583101FAB971E2B23AFC45F82B5D3F75D100F3D0669430C82109
63302E40D9FF1670BA4E5A19F46D7F114C7F8965D6E68FBE2632713E95366EEB
2E14A6D64E4744E01B4DEA97AC1A8C997FF249AD995F0D9047A8FAA51E800C97
A7B8F2A0346333260CD04BB6870ABFE4F62F3EE459DEEAD4F006D8553432A97C
2D19808B10A3D799281FE3648DA8C12A5579107E9CFDDF73164532E86090F9C5
D38A231ACE0E36264D7455348C3E84B3412D0E68E910B03760C01A0E99310B2A
96D68489BDFED254297D88A25C9FCDDBEFC388B9FA2425F447938E043F309103
9A0EF4615CB18A97A22339651A02ACA7E6B86F79EBEBCAA128A41354D347D190
B3ECC53993D41E76105CABC99BB7ED401262921FBEE4A121EFF078145007A251
E35C97E43ABAE69FE26524835D18C01A263859BFEDF0699344DF7CB9B45FE233
913106971152AB44374CD42D83621BA5C91FFBCCEB7724EF16CABB0A366B92AA
8FD2D8FC6EC0C5D4EE610B083A6CA51D56992E18A941560A9B48F83FE5237CA3
FF8104559AE4B169B8154ACD5D38F2AD9A596380A0AF73356E25C363A892C621
924D2D429BE79BF5A3AA4318B2BA387146388C621AB5369D721B8908C84A2BDC
6750A8EAC72A9538F95EF83ED4607709A345B3CF54832A0F4F4867BF2ECBF02C
74338C970E69D55283C6B65365491C1F51B96EFB46902119A70856D77A4BB058
500C5B836077551CCC8E3ECF50A1E60A9DB5F653F181F9B2E57E06A93CB4AB6F
7F88E2847CB9A1D4C8E9E255528D3023B086B35199878ED85734FC82FFD22B72
80CE9D77F06F3CCF32123795053B1A0B15E4FEC39C4802D80B1FAC2AB4D2E0C1
C87500D32420544B9D9448BE4982792F0D8032F962D0798591BCA06D138E020D
22AC565DC219A09C9BA2EEB3F950E368B26F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/DGNAVI+CMSSBX10 findfont /Encoding get
dup 12 /fi put
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 69 /E put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 83 /S put
dup 85 /U put
dup 86 /V put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
dup 32 /.notdef put
pop
end
%%EndResource

userdict /pdf_svglb get setglobal
[/N13/DGNAVI+CMSSBX10 -1 TZG
userdict /pdf_svglb currentglobal put true setglobal
%%BeginResource: font ECAAAA+CMSY10
ct_CffDict begin
%!FontType1
16 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/version (1.0) def
/FullName (CMSY10) def
/FamilyName (Computer Modern) def
/Weight (Medium) def
/ItalicAngle -14.0350036 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /ECAAAA+CMSY10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -29 -960 1116 775 } def
/XUID [6 5000820 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC8DC423323
00A152553EC9C9C51591C81BB5A2F58753878D92B1C73E948BB360F467A7D593
2446E52E22935D5D0316634839C917AE2BE363D6AE3760363F748EAAEAD9AB74
D863835F45718D23FB3980D0C645610BF765847F4BC5CB03391BDC9D40A6A460
ABF0D95BB6A176DB5088A1068A0DFDC266C25ADCBEF3E5472E03E0D29BC6801F
A2AEAD77E33C80C0DC39DD6133A821B832A28C5E08CEE6416DE4AEF5349B075E
FACA5CF9FAFC5D181F0E28DA28D0066C8C517A9FA3BA8CFD79F6BF8E6D413BB6
CD114D039B32EC438B5D98C00EFDE01390A5581181E4714914A4A965558C7657
CDBC51A5E6FD2A7C4423E8381AA2258278EC813F0C9CB8921E7D9EA9E6A7E196
CE393F94AD1124BA2D992E9A350C60F76FD1F90489C5173303B3677908F1E3CD
990ADD159E88D50400AFF196E850B44AB1C183C8211D52E51A1851961AAE7B31
66B5B72652706B29569A85FA75D6D2A88EFEDB1F56018E503A02835BE3E89BB2
631203116C4A564B03178015522FA0E8E51AEF0508158C3E2C500EBFE7403B52
2BC73DAD0447AF0D0DBB9ED89FAB02EB50D9303229027278B5E9BDD0F37DABAD
F82B2B87C4CCAF1E56E74989162538E595598372067BD858A3AF2FBC16603658
CDAB7BCC8C444DB95ED4C0B180B939473A89619057261A1378EB275A4157E3FF
9DA4343A9D1C632BCD2E96ABDD1A5100D76D17402AFB9FA3387D5465D25E16E0
B4E15E2BE6996B8605D732B85367CAB3F59E3F934FB2BB526EADBC3048799B13
93C72C992C4F3F0B654550DB47B7F1C1D9ADE09C71711B102C7E7EBA881A082F
E40253C0B3572316A68299B9EC6F3108E35A5E51D98BB564AC499363BA0C4209
E35C0B382A1784D5591B6586D0276709C2988F281141E117B6E344F6C89F314A
58DC641399F55227E0AFCEDFD6B2770C6E9AB6440D0C8A89096A5A4C21CCFAE6
EBEE6A6C3E11A293CE94A7928C73F46D0C4EDE7EA83087D3E59C8BF59AE380C7
E66CC43544300898E3DEE80C7E690A173568ACB6C753CAEB09E05E9536301CE2
CD6921DA60C52DC7B20ACD80C6B32C25E107740041BB122BD1220AB6C3C39662
B3BB7BA06F68172643AD27C85533086F1C6127FBDFCD9F61BE40AA54052D2C5F
77801E6A3A55EAE3D9A9FA3B7F2952AFDED9E9449DAFFE84F1453FF8842E0406
D0770CABBEEF7D96CB43C338A418DC61D23514557D69141E25F2176B4420A581
361D93794F5D8F8423AECE259D1ED6C9087A0AA4FACFD7E00F96FEC932963F50
FBDECBA46C31B0E86B83AE4CDBAC50E6BA0EED5D46CFFE36549A7CF68E11D969
6FF33F338E7C780F342150A558D4106604494C4A5455C3B6750E8159A16286E4
F4BE29F60C0E657450FEB629407846C819D4B94387B6D995755EE4DAC7D8D433
72A064365412539F85D70868253046800D15257BE29827154C1782A7606A96C6
027BCBA0D12E6CDE6EF607F235B7D87C9A477E6A1E1B09D7D3F6D2368CE455C3
11F785C95B2C82A1C57DE346A8F78A46E53C8FC22FF3AAC5A4EBF3E1E82CC819
3B2258B5FBC411737167F34F8232D952DCE57D09CF18A9DC92016FCB225323E0
818B50375AB8FD8E42B515CB9C9D63E28017338B4B979CBAAC67C2E124238C2D
B47052C6167A4E2E7A27E1B72A8F5736D4F26CD817722ACA61BDFF4B5B753523
8B5F995406218EA9B418AAD288C0D40A472DBB5D96F9AEEFA2CB8524C3DEEDED
D04876
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/ECAAAA+CMSY10 findfont /Encoding get
dup 15 /bullet put
dup 24 /similar put
dup 32 /.notdef put
pop
end
%%EndResource

userdict /pdf_svglb get setglobal
[/N15/ECAAAA+CMSY10 -1 TZG
userdict /pdf_svglb currentglobal put true setglobal
%%BeginResource: font NCAAAA+CMMI10
ct_CffDict begin
%!FontType1
16 dict begin
/FontInfo 15 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/version (1.100) def
/FullName (CMMI10) def
/FamilyName (Computer Modern) def
/Weight (Medium) def
/ItalicAngle -14.0400085 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /NCAAAA+CMMI10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -32 -250 1048 750 } def
/XUID [6 5087385 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC8DC423323
00A152553EC9C9C51591C81BB5A2F58753878D92B1C73E948BB360F467A7D593
2446E52E22935D5D0316634839C917AE2BE363D6AE3760363F748EAAEAD9AB74
D863835F45718D23FB3980D0C645610BF765847F4BC5CB03391BDC9D40A6A460
ABF0D95BB6A176DB5088A1068A0DFDC266C25ADCBEF3E5472E03E0D29BC6801F
A2AEAD77E33C80C0DC39DD6133A821B832A2E5715CD8DD3C7DDBB03FB0392FE0
DD1B381E192CDDE6EC064726FE07A46ABAE08BFAA613B8A042D015EE7CE253E8
08727F73BCBC9B99270D557D06018142C27A7ED95D3AA666CC36583600E54C19
78353FB232E97BBD2C7677F7F482F9C427DA43966CF504999C21554CED6AFF26
2AADE446B0B09A001F7C1FDA17CC82E9DF8448F332E1E3C4EC6BDEE9A21F01A4
6957355A5D4161A2F21791D8BE95C7AD9D9855D8A3FDEC54DDC9CED857684258
0D8B1A7F8E4A0E8E70030BB0894D8BB181E02EC730C1C608F6F8C3DCB6396754
71C8098A84ECE5355044359C7AEC8FC864D315DA2F2DD2555CFB93222D149848
A6B81DADB8DC2F573CBC0EC59E60E22D9648838FF0D1B51BE192858658E17CD7
435ECD414A961FAF38EC8305ACB95DD22D718BC9D52458651DCB4C745118E934
150F5359D098F5B1CF66AE559AD205A0B229705AA59928B998158D7F69E872BF
5E25F60B1A37EA6313495EB4AC215F568FA93336508E6DA2378C2E16902B03DA
28C776EFFC0E878833EF71EE519BD0AB1903A1C977FC7CA6FDACB31D317E1805
269B3D498010A8EB034C8E617DFC3DC42A22DEB72DE2A66A69245E40ECF954A6
A5DB301688ADA8174B76D523290F82B936E795468F37EB34A675E25C0B8F0993
2A045C7A54F134F326859B3B1E7D9F28EC88A25180DCFDDE33EC37BF869F39BC
7FC992B29322B03214B078BCAC929875C59C3F57A97074BFE8D49D9F8163DD31
B3AD333364B573135187D26A8EBF04B025AF5CB9C32AFF88FE48D8A823D8B475
B50A095BD4030CC47F07C088245150F99F101C141C9F878D17363731FEC3C77B
8057DB509162011C8BE93E2C2CDB23F38FD7914BA42CBE20FE92BA08F688049C
1F1B0C8F1555E88AE77D252E436E0DF418F4585F37C83B08D3F1F04C99F38773
F564173A92E9B93AC30B30997FC321E88E3504D16DBC674F14B3BE50B9B26F93
CD32403684FDB6ABE39577C0107889D2F572C4281BEB7197CB2DF3954C460C35
EB757DEB84FA693D8ED0C2D10996B2D96F175150775447D7CF1EC86D2C9536C1
B8208547AC119EE22D0E646311C85F9A4EE1B7ECA4663444FF38D244DE6B5924
61F7BC0D89A833F6D0467D15A83F4991303FADA3CE7003D1A2E8C7D430A93C83
D0968B9EE8D57B451DF443989B5E1FEFA476EF286DCE9D6DEDD7B3DFB33A3328
5AD9D79169188D9E3DAFBDDC380515839920DBC251CC019C52AED1085A6CF054
45A85A5DAB3E70C084524890EBD521855FF88327076CCDC3D3EC2A7ED3B09C5A
A34801E1BFC909A7FEAD64C0CF025396B8A12C16E6CA0752CF18DFE2B9A51D8E
A0914F307A039CE8F2B50C46D0073CA7C36D705B18F5451DB863D3B3F18C6822
6C2F34AF00549DBAA79BD5C68D05BC40F4C9FCF52463155985D9B021126286B9
313D7E5321D6463D97D0EA099DEB2CC5356FF01A7EA550719C66CCB9DC869D9B
4BF60DEC3F5043F3A6138CDC5A58BE8987E347989FC81A05A226E0B14A42E590
8B636FC5A7EAC587D65C29
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/NCAAAA+CMMI10 findfont /Encoding get
dup 63 /star put
dup 32 /.notdef put
pop
end
%%EndResource

userdict /pdf_svglb get setglobal
[/N14/NCAAAA+CMMI10 -1 TZG
PDFVars/TermAll get exec end end

userdict/PStoPSxform PStoPSmatrix matrix currentmatrix
 matrix invertmatrix matrix concatmatrix
 matrix invertmatrix put
%%EndSetup
%%Page: (0,1,2,3,4,5) 1
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
49.583333 561.333333 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 727.139 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 14.346 Tf
(1) show
1 0 0 1 -14.346 0 cm
1 0 0 1 -712.793 -39.664 cm
1 0 0 1 214.43 -24.789 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 35.696 Tf
(Morei)
[34.9106 18.5263 13.2787 31.3411 9.13806 ] pdfxs
(nf) show
(orm)
[18.5263 13.2787 30.9486 ] pdfxs
(at) show
(i)
[9.13806 ] pdfxs
(on) show
1 0 0 1 -214.43 -44.832 cm
1 0 0 1 0 14.088 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(E)
[17.7596 ] pdfxs
(x) show
(am)
[14.3089 23.6201 ] pdfxs
(i) show
(na)
[15.3797 14.3089 ] pdfxs
(tio) show
(n) show
1 0 0 1 0 -68.73 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(Wr)
[27.2789 10.1737 ] pdfxs
(itt) show
(ene)
[13.2081 25.2857 13.2081 ] pdfxs
(x) show
(ambased)
[14.3089 33.5559 15.3797 14.3089 11.3933 13.2081 25.2857 ] pdfxs
(o) show
(n:)
[15.3797 8.26994 ] pdfxs
1 0 0 1 0 -53.168 cm
1 0 0 1 -2.91899 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N14 29.748 Tf
(?) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(R) show
(eader)
[13.2081 14.3089 15.3797 13.2081 18.9196 ] pdfxs
(\() show
(w)
[20.3178 ] pdfxs
(it) show
(h)
[15.3797 ] pdfxs
(o) show
(utpaper)
[15.3797 19.5145 15.3797 14.3089 16.1531 13.2081 18.9493 ] pdfxs
(1) show
(2by)
[23.6496 14.5467 22.4894 ] pdfxs
(M) show
(ars)
[13.4759 10.1737 11.3933 ] pdfxs
(l) show
(andand)
[14.3089 15.3797 24.0958 14.3089 15.3797 24.1256 ] pdfxs
(C) show
(ampbe)
[14.3089 23.6201 15.3797 16.1829 13.2081 ] pdfxs
(ll\)) show
1 0 0 1 -21.918 -37.858 cm
1 0 0 1 -2.91899 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N14 29.748 Tf
(?) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(Awaripaper)
[19.8421 19.4849 13.4759 10.1737 17.0158 15.3797 14.3089 16.1829 13.2081 10.1737 ] pdfxs
1 0 0 1 -21.918 -37.857 cm
1 0 0 1 -2.91899 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N14 29.748 Tf
(?) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(Lec)
[16.1236 13.2081 13.2081 ] pdfxs
(t) show
(ures)
[15.3797 10.1737 13.2081 11.3933 ] pdfxs
-46.825 -68.731 m
(M) show
(ore)
[14.041 10.1737 23.1439 ] pdfxs
(i) show
(nforma)
[15.3797 9.10288 14.0113 10.1737 23.6201 14.3089 ] pdfxs
(tio) show
(nab)
[25.2857 14.3089 16.1829 ] pdfxs
(o) show
(ut)
[15.3797 20.6449 ] pdfxs
(t) show
(hec)
[15.3797 23.1439 13.2081 ] pdfxs
(o) show
(urse)
[15.3797 10.1737 11.3933 23.1142 ] pdfxs
(\() show
(s)
[11.3933 ] pdfxs
(li) show
(des,rec)
[15.3797 13.2081 11.3933 18.2058 10.1737 13.2081 13.2081 ] pdfxs
(o) show
(mmended)
[23.6201 23.6201 13.2081 15.3797 15.3797 13.2081 15.3797 ] pdfxs
-46.825 -106.588 m
(bo)
[16.1829 15.7069 ] pdfxs
(ok) show
(s)
[11.3933 ] pdfxs
(\)) show
(:) show
1 0 0 1 -46.825 -177.185 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(h)
[15.3797 ] pdfxs
(tt) show
(p:)
[15.3797 8.26994 ] pdfxs
(//) show
(www.cs.)
[20.3178 20.3178 20.3178 8.26994 13.2081 11.3933 8.26994 ] pdfxs
(v) show
(u.n)
[15.3797 8.26994 15.3797 ] pdfxs
(l/) show
267.075 0 m
/N15 29.748 Tf
(\030) show
290.212 0 m
/N12 29.748 Tf
(ba)
[15.3797 14.3089 ] pdfxs
(l/) show
(c)
[13.2081 ] pdfxs
(oll) show
(e)
[13.2081 ] pdfxs
(g) show
(e)
[13.2081 ] pdfxs
(02) show
(.h)
[8.26994 15.3797 ] pdfxs
(t) show
(m)
[23.6201 ] pdfxs
(l) show
1 0 0 1 -24.907 -65.855 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
347.083333 561.333333 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 727.139 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 14.346 Tf
(2) show
1 0 0 1 -14.346 0 cm
1 0 0 1 -712.793 -39.664 cm
1 0 0 1 21.928 -26.772 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 35.696 Tf
(Par)
[23.9878 17.6693 13.2787 ] pdfxs
(a) show
(ll)
[9.13806 9.13806 ] pdfxs
(e) show
(lpr)
[22.1671 18.9547 13.2787 ] pdfxs
(og) show
(r)
[13.2787 ] pdfxs
(a) show
(mmi)
[30.9486 30.9486 9.13806 ] pdfxs
(n) show
(gr)
[32.6976 13.2787 ] pdfxs
(e) show
(s)
[15.0636 ] pdfxs
(e) show
(ar)
[17.6693 13.2787 ] pdfxs
(c) show
(h)
[33.1261 ] pdfxs
(a) show
(tVU\()
[27.4862 26.1652 40.3724 15.2777 ] pdfxs
(1) show
(\)) show
1 0 0 1 -21.928 -44.832 cm
1 0 0 1 0 -4.62399 cm
1 0 0 1 0.0699921 0 cm
0 0 m
/N15 29.748 Tf
(\017) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(O) show
(rcapara)
[10.1737 13.2081 24.2149 15.3797 13.4759 10.1737 14.3089 ] pdfxs
(ll) show
(el)
[13.2081 16.9861 ] pdfxs
(l) show
(an)
[14.3089 15.3797 ] pdfxs
(g) show
(ua)
[15.3797 14.3089 ] pdfxs
(g) show
(eands)
[23.0844 14.3089 15.3797 25.2857 11.3933 ] pdfxs
(y) show
(s)
[11.3933 ] pdfxs
(t) show
(em)
[13.2081 23.6201 ] pdfxs
1 0 0 1 -24.907 -65.754 cm
1 0 0 1 0.0699921 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N15 29.748 Tf
(\017) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(Co) show
(mmun)
[23.6201 23.6201 15.3797 15.3797 ] pdfxs
(i) show
(ca)
[13.2081 14.3089 ] pdfxs
(tio) show
(ns)
[24.1256 11.3933 ] pdfxs
(o) show
(ftwareforh)
[9.10288 9.90585 19.5146 13.4462 10.1737 21.9838 9.10288 14.041 18.8898 15.3797 ] pdfxs
(ig) show
(h-speednetwor)
[15.3797 9.90586 11.3933 16.2126 13.2081 13.2081 24.1256 15.3797 13.2081 9.9356 19.4849 
14.0708 10.1737 ] pdfxs
(k) show
(s)
[20.1393 ] pdfxs
(\() show
(LF)
[16.1236 16.0937 ] pdfxs
(C\)) show
1 0 0 1 -24.907 -65.753 cm
1 0 0 1 0.0699921 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N15 29.748 Tf
(\017) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(Para)
[18.1762 13.4759 10.1737 14.3089 ] pdfxs
(ll) show
(el)
[13.2081 17.0158 ] pdfxs
(g) show
(ame)
[14.3089 23.6201 23.1142 ] pdfxs
(t) show
(reesearch)
[10.1737 13.2081 23.1439 11.3933 13.2081 13.5057 10.1737 13.2081 25.2857 ] pdfxs
(\(M) show
(u)
[15.3797 ] pdfxs
(ltig) show
(ame,TDS,Awar)
[14.3089 23.6201 13.2081 18.176 20.2584 21.4781 16.5399 18.176 19.8421 19.4849 13.4759 
10.1737 ] pdfxs
(i\)) show
1 0 0 1 -24.907 -65.753 cm
1 0 0 1 0.0699921 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N15 29.748 Tf
(\017) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(W)
[28.0821 ] pdfxs
(i) show
(de-areapara)
[15.3797 13.2081 9.90586 13.5057 10.1737 13.2081 24.2149 15.3797 13.4462 10.1737 14.3089 
] pdfxs
(ll) show
(elc)
[13.2081 17.0158 13.2081 ] pdfxs
(o) show
(mpu)
[23.6201 15.3797 15.3797 ] pdfxs
(ti) show
(ng)
[15.3797 24.7801 ] pdfxs
(\() show
(DASandDAS-)
[20.6451 19.8421 26.446 14.3089 15.3797 25.256 20.6749 19.8421 16.5399 9.90586 ] pdfxs
(2\)) show
1 0 0 1 0 -51.806 cm
1 0 0 1 -2.91899 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N14 29.748 Tf
(?) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(App)
[19.8421 15.3797 15.3797 ] pdfxs
(li) show
(ca)
[13.2081 14.3089 ] pdfxs
(tio) show
(nperformance)
[25.256 16.1829 13.2081 10.1737 9.10288 14.041 10.1737 23.6201 14.3089 15.3797 13.2081 
13.2081 ] pdfxs
1 0 0 1 -21.918 -37.857 cm
1 0 0 1 -2.91899 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N14 29.748 Tf
(?) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(M) show
(a)
[14.3089 ] pdfxs
(gP) show
(Ie:)
[8.26994 13.2081 21.478 ] pdfxs
(MP) show
(Ic)
[18.176 13.2081 ] pdfxs
(oll) show
(ec)
[13.2081 13.2081 ] pdfxs
(tiv) show
(e)
[23.1737 ] pdfxs
(o) show
(pera)
[16.1829 13.2081 10.1737 14.3089 ] pdfxs
(tio) show
(ns)
[15.3797 11.3933 ] pdfxs
1 0 0 1 -21.918 -37.858 cm
1 0 0 1 -2.91899 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N14 29.748 Tf
(?) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(Sa)
[16.5399 14.3089 ] pdfxs
(ti) show
(n:d)
[15.3797 21.4483 15.3797 ] pdfxs
(ivi) show
(deandc)
[15.3797 23.1142 14.3089 15.3797 25.256 13.2081 ] pdfxs
(o) show
(nquerpara)
[15.3797 15.3797 15.3797 13.2081 20.0797 15.3797 13.4759 10.1737 14.3089 ] pdfxs
(ll) show
(e)
[13.2081 ] pdfxs
(li) show
(sm)
[11.3933 23.6201 ] pdfxs
1 0 0 1 -46.825 -95.177 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
49.583333 280.666667 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 727.139 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 14.346 Tf
(3) show
1 0 0 1 -14.346 0 cm
1 0 0 1 -712.793 -39.664 cm
1 0 0 1 21.928 -26.772 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 35.696 Tf
(Par)
[23.9878 17.6693 13.2787 ] pdfxs
(a) show
(ll)
[9.13806 9.13806 ] pdfxs
(e) show
(lpr)
[22.1671 18.9547 13.2787 ] pdfxs
(og) show
(r)
[13.2787 ] pdfxs
(a) show
(mmi)
[30.9486 30.9486 9.13806 ] pdfxs
(n) show
(gr)
[32.6976 13.2787 ] pdfxs
(e) show
(s)
[15.0636 ] pdfxs
(e) show
(ar)
[17.6693 13.2787 ] pdfxs
(c) show
(h)
[33.1261 ] pdfxs
(a) show
(tVU\()
[27.4862 26.1652 40.3724 15.2777 ] pdfxs
(2) show
(\)) show
1 0 0 1 -21.928 -44.832 cm
1 0 0 1 0 -32.971 cm
1 0 0 1 0.0699921 0 cm
0 0 m
/N15 29.748 Tf
(\017) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(Para)
[18.1762 13.4759 10.1737 14.3089 ] pdfxs
(ll) show
(elc)
[13.2081 17.0158 13.2081 ] pdfxs
(o) show
(mpu)
[23.6201 15.3797 15.3797 ] pdfxs
(ti) show
(ng)
[15.3797 24.7801 ] pdfxs
(i) show
(nJa)
[25.2857 14.0411 14.3089 ] pdfxs
(v) show
(a) show
1 0 0 1 0 -51.805 cm
1 0 0 1 -2.91899 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N14 29.748 Tf
(?) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(Fast)
[16.1234 14.3089 11.3933 20.6449 ] pdfxs
(R) show
(em)
[13.2081 23.6201 ] pdfxs
(ot) show
(e)
[23.1737 ] pdfxs
(M) show
(e)
[13.2081 ] pdfxs
(t) show
(hodIn)
[15.3797 15.7069 25.2857 8.26994 15.3797 ] pdfxs
(v) show
(oca)
[15.6772 13.2081 14.3089 ] pdfxs
(tio) show
(n) show
1 0 0 1 -21.918 -37.858 cm
1 0 0 1 -2.91899 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N14 29.748 Tf
(?) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(O) show
(bjectrep)
[15.3797 7.94266 13.2081 13.2081 20.6746 10.1737 13.2081 15.3797 ] pdfxs
(li) show
(ca)
[13.2081 14.3089 ] pdfxs
(tio) show
(n,c)
[15.3797 18.1463 13.2081 ] pdfxs
(oll) show
(ec)
[13.2081 13.2081 ] pdfxs
(tiv) show
(ec)
[23.1737 13.2081 ] pdfxs
(o) show
(mmun)
[23.6201 23.6201 15.3797 15.3797 ] pdfxs
(i) show
(ca)
[13.2081 14.3089 ] pdfxs
(tio) show
(n) show
1 0 0 1 -46.825 -65.753 cm
1 0 0 1 0.0699921 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N15 29.748 Tf
(\017) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(C) show
(o)
[15.7069 ] pdfxs
(o) show
(pera)
[16.1829 13.2081 10.1737 14.3089 ] pdfxs
(tio) show
(nw)
[25.2857 20.3178 ] pdfxs
(it) show
(h)
[25.2857 ] pdfxs
(P) show
(h)
[15.3797 ] pdfxs
(y) show
(s)
[11.3933 ] pdfxs
(i) show
(cs)
[13.2081 11.3933 ] pdfxs
1 0 0 1 0 -51.806 cm
1 0 0 1 -2.91899 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N14 29.748 Tf
(?) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(Para)
[18.1762 13.4759 10.1737 14.3089 ] pdfxs
(ll) show
(elapp)
[13.2081 17.0158 14.3089 15.3797 15.3797 ] pdfxs
(li) show
(ca)
[13.2081 14.3089 ] pdfxs
(tio) show
(ns)
[15.3797 11.3933 ] pdfxs
1 0 0 1 -21.918 -37.858 cm
1 0 0 1 -2.91899 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N14 29.748 Tf
(?) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(In)
[8.26994 15.3797 ] pdfxs
(t) show
(erac)
[13.2081 10.1737 14.3089 13.2081 ] pdfxs
(tiv) show
(eapp)
[23.1439 14.3089 15.3797 15.3797 ] pdfxs
(li) show
(ca)
[13.2081 14.3089 ] pdfxs
(tio) show
(ns)
[15.3797 21.2697 ] pdfxs
(\(til) show
(ed)
[13.2081 25.2857 ] pdfxs
(vi) show
(deowa)
[15.3797 13.2081 24.7801 19.5146 14.3089 ] pdfxs
(ll\)) show
1 0 0 1 -46.825 -146.531 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
347.083333 280.666667 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 727.139 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 14.346 Tf
(4) show
1 0 0 1 -14.346 0 cm
1 0 0 1 -712.793 -39.664 cm
1 0 0 1 0.673996 -26.772 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 35.696 Tf
(E)
[22.9168 ] pdfxs
(xa) show
(m)
[30.9486 ] pdfxs
(p) show
(l)
[9.13806 ] pdfxs
(e) show
(s)
[28.0926 ] pdfxs
(\fn) show
(is)
[9.13806 15.0636 ] pdfxs
(he) show
(dM.)
[33.1261 34.9106 10.923 ] pdfxs
(Sc) show
(.)
[28.3426 ] pdfxs
(the) show
(sispr)
[15.0636 9.13806 28.1283 18.919 13.2787 ] pdfxs
(oject) show
(s\()
[28.164 15.2777 ] pdfxs
(1) show
(\)) show
1 0 0 1 -0.673996 -44.832 cm
1 0 0 1 0 0.686996 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(S)
[16.5399 ] pdfxs
(y) show
(s)
[11.3933 ] pdfxs
(t) show
(emsresearch)
[13.2081 23.6201 21.3589 10.1737 13.2081 11.3933 13.2081 13.4759 10.1737 13.2081 15.3797 
] pdfxs
1 0 0 1 0 -56.209 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(Por)
[18.1762 14.041 10.1737 ] pdfxs
(ti) show
(ng)
[15.3797 24.7801 ] pdfxs
(t) show
(he)
[15.3797 23.1439 ] pdfxs
(O) show
(rcas)
[10.1737 13.2081 24.2149 11.3933 ] pdfxs
(y) show
(s)
[11.3933 ] pdfxs
(t) show
(em)
[13.2081 33.5857 ] pdfxs
(t) show
(o)
[24.7801 ] pdfxs
(t) show
(heIBMS)
[15.3797 23.1439 8.26994 19.8421 35.9356 16.5399 ] pdfxs
(P/2) show
1 0 0 1 -24.907 -60.921 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(FastJa)
[16.1234 14.3089 11.3933 20.6449 14.0411 14.3089 ] pdfxs
(v) show
(a)
[24.2149 ] pdfxs
(R) show
(em)
[13.2081 23.6201 ] pdfxs
(ot) show
(e)
[23.1439 ] pdfxs
(M) show
(e)
[13.2081 ] pdfxs
(t) show
(hodIn)
[15.3797 15.7367 25.2857 8.26994 15.3797 ] pdfxs
(v) show
(oca)
[15.6772 13.2081 14.3089 ] pdfxs
(tio) show
(n)
[25.2857 ] pdfxs
(o) show
(n)
[25.2857 ] pdfxs
(My) show
(r)
[10.1737 ] pdfxs
(i) show
(ne)
[15.3797 13.2081 ] pdfxs
(t) show
-24.907 -63.295 m
(Para)
[18.1762 13.4759 10.1737 14.3089 ] pdfxs
(ll) show
(elapp)
[13.2081 17.0158 14.3089 15.3797 15.3797 ] pdfxs
(li) show
(ca)
[13.2081 14.3089 ] pdfxs
(tio) show
(ns)
[15.3797 11.3933 ] pdfxs
1 0 0 1 -24.907 -119.504 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(I)
[8.26994 ] pdfxs
(o) show
(nrec)
[25.2857 10.1737 13.2081 13.2081 ] pdfxs
(o) show
(mb)
[23.6201 15.3797 ] pdfxs
(i) show
(na)
[15.3797 14.3089 ] pdfxs
(tio) show
(n)
[25.2857 ] pdfxs
(\(P) show
(h)
[15.3797 ] pdfxs
(y) show
(s)
[11.3933 ] pdfxs
(i) show
(cs)
[13.2081 11.3933 ] pdfxs
(\)) show
1 0 0 1 -24.907 -53.835 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(C) show
(ornea)
[14.041 10.1737 15.3797 13.2081 14.3089 ] pdfxs
(to) show
(p)
[16.1829 ] pdfxs
(og) show
(raphy)
[10.1737 14.3089 15.3797 15.3797 23.5901 ] pdfxs
(\(P) show
(h)
[15.3797 ] pdfxs
(y) show
(s)
[11.3933 ] pdfxs
(i) show
(cs+)
[13.2081 21.3292 33.05 ] pdfxs
(M) show
(ed)
[13.2081 15.3797 ] pdfxs
(i) show
(c)
[13.2081 ] pdfxs
(i) show
(ne)
[15.3797 13.2081 ] pdfxs
(\)) show
1 0 0 1 -24.907 -53.834 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(R) show
(a)
[13.4759 ] pdfxs
(yt) show
(rac)
[10.1737 14.3089 13.2081 ] pdfxs
(i) show
(n)
[15.3797 ] pdfxs
(g) show
(,DNAsequencec)
[18.1463 21.4781 21.0614 29.778 11.3933 13.2081 15.3797 15.3797 13.2081 15.3797 13.2081 
23.1439 13.2081 ] pdfxs
(o) show
(mpar)
[23.6201 15.3797 13.5057 10.1737 ] pdfxs
(i) show
(s)
[11.3933 ] pdfxs
(o) show
(n,Barnes-Hu)
[15.3797 18.1463 19.8421 13.4759 10.1737 15.3797 13.2081 11.3933 9.90586 21.0614 15.3797 
] pdfxs
(t) show
(,) show
0 -37.858 m
(C) show
(heckers,....)
[15.3797 13.2081 13.2081 13.7435 13.2081 10.1737 11.3933 18.176 8.26994 8.26994 8.26994 
8.26994 ] pdfxs
1 0 0 1 -24.907 -80.966 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
49.583333 0.000000 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 727.139 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 14.346 Tf
(5) show
1 0 0 1 -14.346 0 cm
1 0 0 1 -712.793 -39.664 cm
1 0 0 1 0.673996 -26.772 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 35.696 Tf
(E)
[22.9168 ] pdfxs
(xa) show
(m)
[30.9486 ] pdfxs
(p) show
(l)
[9.13806 ] pdfxs
(e) show
(s)
[28.0926 ] pdfxs
(\fn) show
(is)
[9.13806 15.0636 ] pdfxs
(he) show
(dM.)
[33.1261 34.9106 10.923 ] pdfxs
(Sc) show
(.)
[28.3426 ] pdfxs
(the) show
(sispr)
[15.0636 9.13806 28.1283 18.919 13.2787 ] pdfxs
(oject) show
(s\()
[28.164 15.2777 ] pdfxs
(2) show
(\)) show
1 0 0 1 -0.673996 -44.832 cm
1 0 0 1 0 -73.723 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(W)
[28.0821 ] pdfxs
(i) show
(de-areaapp)
[15.3797 13.2081 9.90586 13.5057 10.1737 13.2081 24.2149 14.3089 15.3797 15.3797 ] pdfxs
(li) show
(ca)
[13.2081 14.3089 ] pdfxs
(tio) show
(ns)
[15.3797 11.3933 ] pdfxs
1 0 0 1 0 -62.652 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(Performance)
[18.1762 13.2081 10.1737 9.10288 14.041 10.1737 23.6201 14.3089 15.3797 13.2081 23.1439 
] pdfxs
(o) show
(fpara)
[19.009 15.3797 13.4462 10.1737 14.3089 ] pdfxs
(ll) show
(elpr)
[13.2081 17.0158 14.5467 10.1737 ] pdfxs
(og) show
(rams)
[10.1737 14.3089 23.6201 21.2994 ] pdfxs
(o) show
(nw)
[25.2857 20.3178 ] pdfxs
(i) show
(de-areaDAS)
[15.3797 13.2081 9.90586 13.4759 10.1737 13.2081 24.2149 20.6749 19.8421 16.5399 ] pdfxs
-24.907 -69.738 m
(P) show
(r)
[10.1737 ] pdfxs
(o) show
(jec)
[7.94266 13.2081 13.2081 ] pdfxs
(t) show
(s)
[21.3292 ] pdfxs
(tog) show
(e)
[13.2081 ] pdfxs
(t) show
(herw)
[15.3797 13.2081 20.1095 20.3178 ] pdfxs
(it) show
(h)
[25.2857 ] pdfxs
(P) show
(h)
[15.3797 ] pdfxs
(yi) show
(cs)
[13.2081 11.3933 ] pdfxs
1 0 0 1 -24.907 -132.39 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(Para)
[18.1762 13.4759 10.1737 14.3089 ] pdfxs
(ll) show
(elrender)
[13.2081 17.0158 10.1737 13.2081 15.3797 15.3797 13.2081 10.1737 ] pdfxs
(i) show
(ngfor)
[15.3797 24.7503 9.10288 14.041 20.0797 ] pdfxs
(til) show
(ed)
[13.2081 25.2857 ] pdfxs
(vi) show
(deowa)
[15.3797 13.2081 24.8098 19.4849 14.3089 ] pdfxs
(ll) show
(s) show
1 0 0 1 -24.907 -58.666 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
0 0 m
(In)
[8.26994 15.3797 ] pdfxs
(t) show
(erac)
[13.2081 10.1737 14.3089 13.2081 ] pdfxs
(tio) show
(nw)
[25.2857 20.3178 ] pdfxs
(it) show
(hr)
[25.2857 10.1737 ] pdfxs
(o) show
(b)
[16.1829 ] pdfxs
(ot) show
(s) show
1 0 0 1 -24.907 -97.151 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
347.083333 0.000000 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 727.139 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 14.346 Tf
(6) show
1 0 0 1 -14.346 0 cm
1 0 0 1 -712.793 -39.664 cm
1 0 0 1 246.566 -24.789 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 35.696 Tf
(N)
[28.3428 ] pdfxs
(e) show
(wPr)
[39.6941 25.0944 13.2787 ] pdfxs
(oject) show
(s) show
1 0 0 1 -246.566 -44.832 cm
1 0 0 1 0 -73.723 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(Ib)
[8.26994 15.3797 ] pdfxs
(i) show
(s:aJa)
[11.3933 21.478 24.2149 14.0411 14.3089 ] pdfxs
(v) show
(a-based)
[14.3089 9.90586 15.3797 14.3089 11.3933 13.2081 25.2857 ] pdfxs
(g) show
(r)
[10.1737 ] pdfxs
(i) show
(dpr)
[25.256 14.5467 10.1737 ] pdfxs
(og) show
(ramm)
[10.1737 14.3089 23.6201 23.6201 ] pdfxs
(i) show
(ngen)
[15.3797 24.7801 13.2081 15.3797 ] pdfxs
(vi) show
(r)
[10.1737 ] pdfxs
(o) show
(nmen)
[15.3797 23.6201 13.2081 15.3797 ] pdfxs
(t) show
1 0 0 1 0 -69.738 cm
1 0 0 1 0.0699921 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N15 29.748 Tf
(\017) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(Ja)
[14.0411 14.3089 ] pdfxs
(v) show
(a)
[14.3089 ] pdfxs
(/RM) show
(Iapp)
[18.1463 14.3089 15.3797 15.3797 ] pdfxs
(li) show
(ca)
[13.2081 14.3089 ] pdfxs
(tio) show
(nsforGr)
[15.3797 21.2994 9.10288 14.0113 20.0797 19.8421 10.1737 ] pdfxs
(i) show
(ds)
[15.3797 11.3933 ] pdfxs
1 0 0 1 -24.907 -65.754 cm
1 0 0 1 0.0699921 0 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N15 29.748 Tf
(\017) show
1 0 0 1 14.874 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(Fau)
[16.1234 14.3089 15.3797 ] pdfxs
(l) show
(t)
[20.6151 ] pdfxs
(tol) show
(erance)
[13.2081 10.1737 14.3089 15.3797 13.2081 13.2081 ] pdfxs
-24.907 -69.738 m
(App)
[19.8421 15.3797 15.3797 ] pdfxs
(li) show
(ca)
[13.2081 14.3089 ] pdfxs
(tio) show
(ns)
[15.3797 21.2697 ] pdfxs
(i) show
(nB)
[25.2857 19.8421 ] pdfxs
(ioi) show
(nforma)
[15.3797 9.10288 14.0113 10.1737 23.6201 14.3089 ] pdfxs
(ti) show
(cs)
[13.2081 11.3933 ] pdfxs
1 0 0 1 -24.907 -217.35 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
%%Page: (6,7,8,9,10,11) 2
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
49.583333 561.333333 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
90 rotate 0 -612 translate
0.00149536 0.00100708 translate
0 0 791.997 611.998 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 791.997 611.998 re
W
n
q
n
0 0 m
0 611.998 l
791.997 611.998 l
791.997 0 l
h
W
n
n
0 0 791.997 611.998 re
[/DeviceRGB] cs 0.0399933 0.389999 0.62999 sc

f
Q
1 0 0 1 39.602 566.452 cm
1 0 0 1 727.139 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 14.346 Tf
(7) show
1 0 0 1 -14.346 0 cm
1 0 0 1 -712.793 -39.664 cm
1 0 0 1 47.114 -24.789 cm
[/DeviceCMYK] cs 0 0 1 0 sc
0 0 m
/N13 35.696 Tf
(Morei)
[34.9106 18.5263 13.2787 31.3411 9.13806 ] pdfxs
(nf) show
(orm)
[18.5263 13.2787 30.9486 ] pdfxs
(at) show
(i)
[9.13806 ] pdfxs
(o) show
(n)
[33.1261 ] pdfxs
(a) show
(b)
[21.1322 ] pdfxs
(ou) show
(tM)
[27.4862 34.9106 ] pdfxs
(S) show
(cpr)
[30.5557 18.9547 13.2787 ] pdfxs
(oject) show
(s) show
1 0 0 1 -47.114 -44.832 cm
1 0 0 1 0 -89.663 cm
1 0 0 1 14.944 0 cm
1 0 0 1 9.963 0 cm
[/DeviceRGB] cs 1 1 1 sc

0 0 m
/N12 29.748 Tf
(h)
[15.3797 ] pdfxs
(tt) show
(p:)
[15.3797 8.26994 ] pdfxs
(//) show
(www.cs.)
[20.3178 20.3178 20.3178 8.26994 13.2081 11.3933 8.26994 ] pdfxs
(v) show
(u.n)
[15.3797 8.26994 15.3797 ] pdfxs
(l/) show
(cs)
[13.2081 11.3933 ] pdfxs
(/) show
(mas)
[23.6201 14.3089 11.3933 ] pdfxs
(t) show
(ers.h)
[13.2081 10.1737 11.3933 8.26994 15.3797 ] pdfxs
(t) show
(m)
[23.6201 ] pdfxs
(l) show
1 0 0 1 -24.907 -336.902 cm
1 0 0 1 712.793 0 cm
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
347.083333 561.333333 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
showpage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
49.583333 280.666667 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
showpage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
347.083333 280.666667 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
showpage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
49.583333 0.000000 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
showpage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
347.083333 0.000000 translate
0.333333 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
showpage
PStoPSsaved restore
%%Trailer
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%EOF
