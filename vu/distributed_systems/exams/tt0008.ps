%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: tt0008.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Bold Times-Italic Times-Roman Times-BoldItalic
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/local/bin/dvips tt0008
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2000.08.01:0827
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (tt0008.dvi)
@start /Fa 141[39 3[55 4[28 1[50 2[50 2[50 25[72 12[33
58[{TeXBase1Encoding ReEncodeFont}8 99.6264 /Times-BoldItalic
rf /Fb 139[25 3[45 58[45 3[45 45 48[{TeXBase1Encoding ReEncodeFont}5
90.9091 /Times-Italic rf /Fc 133[44 50 50 72 50 50 28
39 33 1[50 50 50 78 28 50 28 28 50 50 33 44 50 44 50
44 9[94 4[66 1[55 72 1[89 3[33 1[72 1[61 1[66 1[72 1[44
16[25 33 25 2[33 33 37[55 2[{TeXBase1Encoding ReEncodeFont}42
99.6264 /Times-Roman rf /Fd 134[44 44 66 1[50 28 39 39
50 50 50 50 72 28 44 1[28 50 50 28 44 50 44 50 50 12[55
25[33 50 4[50 50 50 50 50 1[25 33 25 2[33 33 37[50 2[{
TeXBase1Encoding ReEncodeFont}37 99.6264 /Times-Italic
rf /Fe 134[72 2[72 80 48 56 64 1[80 72 80 120 2[48 40
80 2[64 80 64 80 72 10[104 104 1[80 5[135 8[104 104 10[72
72 4[72 1[72 1[36 7[120 38[{TeXBase1Encoding ReEncodeFont}30
143.462 /Times-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 38 -22 3750 4 v 38 161 4 183 v 91 106 a Fe(Dept.)35
b(Math.)g(&)g(Comp.)g(Sc.)860 b(Distrib)m(uted)33 b(Systems)p
3784 161 V 38 344 V 91 289 a(Vrije)i(Uni)o(v)o(ersiteit)1924
b(07.08.2000)p 3784 344 V 38 347 3750 4 v 95 531 a Fd(1a)49
b Fc(Explain)24 b(what)g(is)h(meant)f(by)h Fd(middle)o(war)l(e)p
Fc(.)2135 b Fb(5pt)95 693 y Fd(1b)49 b Fc(What)25 b(is)f(a)h
(multitiered)e(client-serv)o(er)i(architecture?)1765
b Fb(5pt)101 855 y Fd(1c)49 b Fc(Gi)n(v)o(e)23 b(e)o(xamples)h(of)h(ho)
n(w)f(to)g(mak)o(e)h(a)g(client-serv)o(er)g(system)e(scalable.)1168
b Fb(5pt)95 1266 y Fd(2a)49 b Fc(Outline)24 b(a)h(general)g
(implementation)d(for)j(method)f(in)l(v)n(ocation)g(of)h(remote)f
(objects.)681 b Fb(5pt)95 1428 y Fd(2b)49 b Fc(Explain)24
b(ho)n(w)g(a)h(systemwide)e(object)i(reference)h(can)f(be)g
(implemented)e(as)i(a)g(proxy)-6 b(.)651 b Fb(5pt)101
1590 y Fd(2c)49 b Fc(Gi)n(v)o(e)19 b(a)h(brief)g(comparison)f(between)h
(remote)g(method)f(in)l(v)n(ocations)g(\(RMIs\))h(and)g(remote)g
(procedure)244 1710 y(calls)k(\(RPCs\).)3140 b Fb(5pt)93
1872 y Fd(2d)51 b Fc(What)22 b(is)g(an)h(important)e(scalability)g
(problem)h(with)g(remote)g(objects,)g(and)h(ho)n(w)e(can)i(that)f(be)h
(solv)o(ed?)82 b Fb(10pt)95 2283 y Fd(3a)49 b Fc(What)25
b(is)f(a)h(transaction?)2781 b Fb(5pt)95 2445 y Fd(3b)49
b Fc(What)25 b(is)f(a)h(distrib)n(uted)e(transaction?)2332
b Fb(5pt)101 2607 y Fd(3c)49 b Fc(What)22 b(is)g(the)h(dif)n(ference)g
(between)f(centralized)h(tw)o(o-phase)f(locking,)g(primary)g(tw)o
(o-phase)g(locking,)244 2727 y(and)j(distrib)n(uted)e(tw)o(o-phase)h
(locking?)2269 b Fb(10pt)95 3138 y Fd(4a)49 b Fc(In)35
b(a)g Fd(k)g(fault)e(toler)o(ant)i Fc(serv)o(er)g(group,)i(ho)n(w)c
(man)o(y)h(serv)o(ers)h(are)g(needed)g(if)g(we)g(assume)f(arbitrary)244
3259 y(f)o(ailures)25 b(can)g(occur?)31 b(Explain)24
b(your)g(answer)-5 b(.)2038 b Fb(5pt)95 3421 y Fd(4b)49
b Fc(Achie)n(ving)31 b(complete)i(f)o(ailure)g(transparenc)o(y)f(is)g
(virtually)g(impossible.)53 b(Gi)n(v)o(e)31 b(an)i(e)o(xample)f(illus-)
244 3541 y(trating)24 b(the)h(dif)n(\002culty)e(of)i(hiding)f(f)o
(ailures)g(in)h(general.)1714 b Fb(10pt)101 3703 y Fd(4c)49
b Fc(Explain)24 b(ho)n(w)g(tw)o(o-phase)g(commit)f(w)o(orks.)2105
b Fb(5pt)93 3865 y Fd(4d)51 b Fc(Explain)24 b(what)g(happens)h(when)f
(a)i(process)e(crashes)h(during)f(the)h(tw)o(o-phase)f(commit)g
(protocol.)255 b Fb(10pt)p 88 4189 3650 4 v 88 4429 4
241 v 141 4273 a Fa(Grading:)43 b Fd(The)32 b(\002nal)e(gr)o(ade)h(is)f
(calculated)h(by)g(accumulating)f(the)h(scor)l(es)g(per)g(question)f
(\(maxi-)141 4393 y(mum:)f(90)21 b(points\),)g(and)h(adding)e(10)i
(bonus)e(points.)29 b(The)22 b(maximum)f(total)g(is)g(ther)l(efor)l(e)g
(100)h(points.)p 3734 4429 V 88 4433 3650 4 v eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
